{"ast":null,"code":"import defaultParams, { showWarningsForParams } from './utils/params.js';\nimport * as dom from './utils/dom/index.js';\nimport { callIfFunction } from './utils/utils.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport { unsetAriaHidden } from './utils/aria.js';\nimport { getTemplateParams } from './utils/getTemplateParams.js';\nimport setParameters from './utils/setParameters.js';\nimport Timer from './utils/Timer.js';\nimport { openPopup } from './utils/openPopup.js';\nimport { handleInputOptionsAndValue } from './utils/dom/inputUtils.js';\nimport { handleCancelButtonClick, handleConfirmButtonClick, handleDenyButtonClick } from './buttons-handlers.js';\nimport { handlePopupClick } from './popup-click-handler.js';\nimport { addKeydownHandler, setFocus } from './keydown-handler.js';\nimport * as staticMethods from './staticMethods.js';\nimport * as instanceMethods from './instanceMethods.js';\nimport privateProps from './privateProps.js';\nimport privateMethods from './privateMethods.js';\nimport globalState from './globalState.js';\nlet currentInstance;\n\nclass SweetAlert {\n  constructor(...args) {\n    // Prevent run in Node env\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    currentInstance = this; // @ts-ignore\n\n    const outerParams = Object.freeze(this.constructor.argsToParams(args));\n    Object.defineProperties(this, {\n      params: {\n        value: outerParams,\n        writable: false,\n        enumerable: true,\n        configurable: true\n      }\n    }); // @ts-ignore\n\n    const promise = this._main(this.params);\n\n    privateProps.promise.set(this, promise);\n  }\n\n  _main(userParams, mixinParams = {}) {\n    showWarningsForParams(Object.assign({}, mixinParams, userParams));\n\n    if (globalState.currentInstance) {\n      globalState.currentInstance._destroy();\n\n      if (dom.isModal()) {\n        unsetAriaHidden();\n      }\n    }\n\n    globalState.currentInstance = this;\n    const innerParams = prepareParams(userParams, mixinParams);\n    setParameters(innerParams);\n    Object.freeze(innerParams); // clear the previous timer\n\n    if (globalState.timeout) {\n      globalState.timeout.stop();\n      delete globalState.timeout;\n    } // clear the restore focus timeout\n\n\n    clearTimeout(globalState.restoreFocusTimeout);\n    const domCache = populateDomCache(this);\n    dom.render(this, innerParams);\n    privateProps.innerParams.set(this, innerParams);\n    return swalPromise(this, domCache, innerParams);\n  } // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n\n\n  then(onFulfilled) {\n    const promise = privateProps.promise.get(this);\n    return promise.then(onFulfilled);\n  }\n\n  finally(onFinally) {\n    const promise = privateProps.promise.get(this);\n    return promise.finally(onFinally);\n  }\n\n}\n\nconst swalPromise = (instance, domCache, innerParams) => {\n  return new Promise((resolve, reject) => {\n    // functions to handle all closings/dismissals\n    const dismissWith = dismiss => {\n      instance.closePopup({\n        isDismissed: true,\n        dismiss\n      });\n    };\n\n    privateMethods.swalPromiseResolve.set(instance, resolve);\n    privateMethods.swalPromiseReject.set(instance, reject);\n\n    domCache.confirmButton.onclick = () => handleConfirmButtonClick(instance);\n\n    domCache.denyButton.onclick = () => handleDenyButtonClick(instance);\n\n    domCache.cancelButton.onclick = () => handleCancelButtonClick(instance, dismissWith);\n\n    domCache.closeButton.onclick = () => dismissWith(DismissReason.close);\n\n    handlePopupClick(instance, domCache, dismissWith);\n    addKeydownHandler(instance, globalState, innerParams, dismissWith);\n    handleInputOptionsAndValue(instance, innerParams);\n    openPopup(innerParams);\n    setupTimer(globalState, innerParams, dismissWith);\n    initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)\n\n    setTimeout(() => {\n      domCache.container.scrollTop = 0;\n    });\n  });\n};\n\nconst prepareParams = (userParams, mixinParams) => {\n  const templateParams = getTemplateParams(userParams);\n  const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n\n  params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n  params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n  return params;\n};\n\nconst populateDomCache = instance => {\n  const domCache = {\n    popup: dom.getPopup(),\n    container: dom.getContainer(),\n    actions: dom.getActions(),\n    confirmButton: dom.getConfirmButton(),\n    denyButton: dom.getDenyButton(),\n    cancelButton: dom.getCancelButton(),\n    loader: dom.getLoader(),\n    closeButton: dom.getCloseButton(),\n    validationMessage: dom.getValidationMessage(),\n    progressSteps: dom.getProgressSteps()\n  };\n  privateProps.domCache.set(instance, domCache);\n  return domCache;\n};\n\nconst setupTimer = (globalState, innerParams, dismissWith) => {\n  const timerProgressBar = dom.getTimerProgressBar();\n  dom.hide(timerProgressBar);\n\n  if (innerParams.timer) {\n    globalState.timeout = new Timer(() => {\n      dismissWith('timer');\n      delete globalState.timeout;\n    }, innerParams.timer);\n\n    if (innerParams.timerProgressBar) {\n      dom.show(timerProgressBar);\n      dom.applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n      setTimeout(() => {\n        if (globalState.timeout && globalState.timeout.running) {\n          // timer can be already stopped or unset at this point\n          dom.animateTimerProgressBar(innerParams.timer);\n        }\n      });\n    }\n  }\n};\n\nconst initFocus = (domCache, innerParams) => {\n  if (innerParams.toast) {\n    return;\n  }\n\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return blurActiveElement();\n  }\n\n  if (!focusButton(domCache, innerParams)) {\n    setFocus(innerParams, -1, 1);\n  }\n};\n\nconst focusButton = (domCache, innerParams) => {\n  if (innerParams.focusDeny && dom.isVisible(domCache.denyButton)) {\n    domCache.denyButton.focus();\n    return true;\n  }\n\n  if (innerParams.focusCancel && dom.isVisible(domCache.cancelButton)) {\n    domCache.cancelButton.focus();\n    return true;\n  }\n\n  if (innerParams.focusConfirm && dom.isVisible(domCache.confirmButton)) {\n    domCache.confirmButton.focus();\n    return true;\n  }\n\n  return false;\n};\n\nconst blurActiveElement = () => {\n  if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n    document.activeElement.blur();\n  }\n}; // Assign instance methods from src/instanceMethods/*.js to prototype\n\n\nObject.assign(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\n\nObject.assign(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\n\nObject.keys(instanceMethods).forEach(key => {\n  SweetAlert[key] = function (...args) {\n    if (currentInstance) {\n      return currentInstance[key](...args);\n    }\n  };\n});\nSweetAlert.DismissReason = DismissReason;\nSweetAlert.version = '11.4.4';\nexport default SweetAlert;","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/SweetAlert.js"],"names":["defaultParams","showWarningsForParams","dom","callIfFunction","DismissReason","unsetAriaHidden","getTemplateParams","setParameters","Timer","openPopup","handleInputOptionsAndValue","handleCancelButtonClick","handleConfirmButtonClick","handleDenyButtonClick","handlePopupClick","addKeydownHandler","setFocus","staticMethods","instanceMethods","privateProps","privateMethods","globalState","currentInstance","SweetAlert","constructor","args","window","outerParams","Object","freeze","argsToParams","defineProperties","params","value","writable","enumerable","configurable","promise","_main","set","userParams","mixinParams","assign","_destroy","isModal","innerParams","prepareParams","timeout","stop","clearTimeout","restoreFocusTimeout","domCache","populateDomCache","render","swalPromise","then","onFulfilled","get","finally","onFinally","instance","Promise","resolve","reject","dismissWith","dismiss","closePopup","isDismissed","swalPromiseResolve","swalPromiseReject","confirmButton","onclick","denyButton","cancelButton","closeButton","close","setupTimer","initFocus","setTimeout","container","scrollTop","templateParams","showClass","hideClass","popup","getPopup","getContainer","actions","getActions","getConfirmButton","getDenyButton","getCancelButton","loader","getLoader","getCloseButton","validationMessage","getValidationMessage","progressSteps","getProgressSteps","timerProgressBar","getTimerProgressBar","hide","timer","show","applyCustomClass","running","animateTimerProgressBar","toast","allowEnterKey","blurActiveElement","focusButton","focusDeny","isVisible","focus","focusCancel","focusConfirm","document","activeElement","HTMLElement","blur","prototype","keys","forEach","key","version"],"mappings":"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","sourcesContent":["import defaultParams, { showWarningsForParams } from './utils/params.js'\nimport * as dom from './utils/dom/index.js'\nimport { callIfFunction } from './utils/utils.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport { unsetAriaHidden } from './utils/aria.js'\nimport { getTemplateParams } from './utils/getTemplateParams.js'\nimport setParameters from './utils/setParameters.js'\nimport Timer from './utils/Timer.js'\nimport { openPopup } from './utils/openPopup.js'\nimport { handleInputOptionsAndValue } from './utils/dom/inputUtils.js'\nimport { handleCancelButtonClick, handleConfirmButtonClick, handleDenyButtonClick } from './buttons-handlers.js'\nimport { handlePopupClick } from './popup-click-handler.js'\nimport { addKeydownHandler, setFocus } from './keydown-handler.js'\nimport * as staticMethods from './staticMethods.js'\nimport * as instanceMethods from './instanceMethods.js'\nimport privateProps from './privateProps.js'\nimport privateMethods from './privateMethods.js'\nimport globalState from './globalState.js'\n\nlet currentInstance\n\nclass SweetAlert {\n  constructor(...args) {\n    // Prevent run in Node env\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    currentInstance = this\n\n    // @ts-ignore\n    const outerParams = Object.freeze(this.constructor.argsToParams(args))\n\n    Object.defineProperties(this, {\n      params: {\n        value: outerParams,\n        writable: false,\n        enumerable: true,\n        configurable: true,\n      },\n    })\n\n    // @ts-ignore\n    const promise = this._main(this.params)\n    privateProps.promise.set(this, promise)\n  }\n\n  _main(userParams, mixinParams = {}) {\n    showWarningsForParams(Object.assign({}, mixinParams, userParams))\n\n    if (globalState.currentInstance) {\n      globalState.currentInstance._destroy()\n      if (dom.isModal()) {\n        unsetAriaHidden()\n      }\n    }\n    globalState.currentInstance = this\n\n    const innerParams = prepareParams(userParams, mixinParams)\n    setParameters(innerParams)\n    Object.freeze(innerParams)\n\n    // clear the previous timer\n    if (globalState.timeout) {\n      globalState.timeout.stop()\n      delete globalState.timeout\n    }\n\n    // clear the restore focus timeout\n    clearTimeout(globalState.restoreFocusTimeout)\n\n    const domCache = populateDomCache(this)\n\n    dom.render(this, innerParams)\n\n    privateProps.innerParams.set(this, innerParams)\n\n    return swalPromise(this, domCache, innerParams)\n  }\n\n  // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n  then(onFulfilled) {\n    const promise = privateProps.promise.get(this)\n    return promise.then(onFulfilled)\n  }\n\n  finally(onFinally) {\n    const promise = privateProps.promise.get(this)\n    return promise.finally(onFinally)\n  }\n}\n\nconst swalPromise = (instance, domCache, innerParams) => {\n  return new Promise((resolve, reject) => {\n    // functions to handle all closings/dismissals\n    const dismissWith = (dismiss) => {\n      instance.closePopup({ isDismissed: true, dismiss })\n    }\n\n    privateMethods.swalPromiseResolve.set(instance, resolve)\n    privateMethods.swalPromiseReject.set(instance, reject)\n\n    domCache.confirmButton.onclick = () => handleConfirmButtonClick(instance)\n    domCache.denyButton.onclick = () => handleDenyButtonClick(instance)\n    domCache.cancelButton.onclick = () => handleCancelButtonClick(instance, dismissWith)\n\n    domCache.closeButton.onclick = () => dismissWith(DismissReason.close)\n\n    handlePopupClick(instance, domCache, dismissWith)\n\n    addKeydownHandler(instance, globalState, innerParams, dismissWith)\n\n    handleInputOptionsAndValue(instance, innerParams)\n\n    openPopup(innerParams)\n\n    setupTimer(globalState, innerParams, dismissWith)\n\n    initFocus(domCache, innerParams)\n\n    // Scroll container to top on open (#1247, #1946)\n    setTimeout(() => {\n      domCache.container.scrollTop = 0\n    })\n  })\n}\n\nconst prepareParams = (userParams, mixinParams) => {\n  const templateParams = getTemplateParams(userParams)\n  const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams) // precedence is described in #2131\n  params.showClass = Object.assign({}, defaultParams.showClass, params.showClass)\n  params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass)\n  return params\n}\n\nconst populateDomCache = (instance) => {\n  const domCache = {\n    popup: dom.getPopup(),\n    container: dom.getContainer(),\n    actions: dom.getActions(),\n    confirmButton: dom.getConfirmButton(),\n    denyButton: dom.getDenyButton(),\n    cancelButton: dom.getCancelButton(),\n    loader: dom.getLoader(),\n    closeButton: dom.getCloseButton(),\n    validationMessage: dom.getValidationMessage(),\n    progressSteps: dom.getProgressSteps(),\n  }\n  privateProps.domCache.set(instance, domCache)\n\n  return domCache\n}\n\nconst setupTimer = (globalState, innerParams, dismissWith) => {\n  const timerProgressBar = dom.getTimerProgressBar()\n  dom.hide(timerProgressBar)\n  if (innerParams.timer) {\n    globalState.timeout = new Timer(() => {\n      dismissWith('timer')\n      delete globalState.timeout\n    }, innerParams.timer)\n    if (innerParams.timerProgressBar) {\n      dom.show(timerProgressBar)\n      dom.applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar')\n      setTimeout(() => {\n        if (globalState.timeout && globalState.timeout.running) {\n          // timer can be already stopped or unset at this point\n          dom.animateTimerProgressBar(innerParams.timer)\n        }\n      })\n    }\n  }\n}\n\nconst initFocus = (domCache, innerParams) => {\n  if (innerParams.toast) {\n    return\n  }\n\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return blurActiveElement()\n  }\n\n  if (!focusButton(domCache, innerParams)) {\n    setFocus(innerParams, -1, 1)\n  }\n}\n\nconst focusButton = (domCache, innerParams) => {\n  if (innerParams.focusDeny && dom.isVisible(domCache.denyButton)) {\n    domCache.denyButton.focus()\n    return true\n  }\n\n  if (innerParams.focusCancel && dom.isVisible(domCache.cancelButton)) {\n    domCache.cancelButton.focus()\n    return true\n  }\n\n  if (innerParams.focusConfirm && dom.isVisible(domCache.confirmButton)) {\n    domCache.confirmButton.focus()\n    return true\n  }\n\n  return false\n}\n\nconst blurActiveElement = () => {\n  if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n    document.activeElement.blur()\n  }\n}\n\n// Assign instance methods from src/instanceMethods/*.js to prototype\nObject.assign(SweetAlert.prototype, instanceMethods)\n\n// Assign static methods from src/staticMethods/*.js to constructor\nObject.assign(SweetAlert, staticMethods)\n\n// Proxy to instance methods to constructor, for now, for backwards compatibility\nObject.keys(instanceMethods).forEach((key) => {\n  SweetAlert[key] = function (...args) {\n    if (currentInstance) {\n      return currentInstance[key](...args)\n    }\n  }\n})\n\nSweetAlert.DismissReason = DismissReason\n\nSweetAlert.version = '11.4.4'\n\nexport default SweetAlert\n"]},"metadata":{},"sourceType":"module"}