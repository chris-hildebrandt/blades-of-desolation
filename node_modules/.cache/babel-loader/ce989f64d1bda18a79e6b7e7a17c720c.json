{"ast":null,"code":"import { getCancelButton, getConfirmButton, getDenyButton, getTimerProgressBar } from './getters.js';\nimport { iconTypes, swalClasses } from '../classes.js';\nimport { toArray, warn } from '../utils.js'; // Remember state in cases where opening and handling a modal will fiddle with it.\n\nexport const states = {\n  previousBodyPadding: null\n};\n/**\n * Securely set innerHTML of an element\n * https://github.com/sweetalert2/sweetalert2/issues/1926\n *\n * @param {HTMLElement} elem\n * @param {string} html\n */\n\nexport const setInnerHtml = (elem, html) => {\n  elem.textContent = '';\n\n  if (html) {\n    const parser = new DOMParser();\n    const parsed = parser.parseFromString(html, `text/html`);\n    toArray(parsed.querySelector('head').childNodes).forEach(child => {\n      elem.appendChild(child);\n    });\n    toArray(parsed.querySelector('body').childNodes).forEach(child => {\n      elem.appendChild(child);\n    });\n  }\n};\n/**\n * @param {HTMLElement} elem\n * @param {string} className\n * @returns {boolean}\n */\n\nexport const hasClass = (elem, className) => {\n  if (!className) {\n    return false;\n  }\n\n  const classList = className.split(/\\s+/);\n\n  for (let i = 0; i < classList.length; i++) {\n    if (!elem.classList.contains(classList[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst removeCustomClasses = (elem, params) => {\n  toArray(elem.classList).forEach(className => {\n    if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n      elem.classList.remove(className);\n    }\n  });\n};\n\nexport const applyCustomClass = (elem, params, className) => {\n  removeCustomClasses(elem, params);\n\n  if (params.customClass && params.customClass[className]) {\n    if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n      return warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n    }\n\n    addClass(elem, params.customClass[className]);\n  }\n};\n/**\n * @param {HTMLElement} popup\n * @param {string} inputType\n * @returns {HTMLInputElement | null}\n */\n\nexport const getInput = (popup, inputType) => {\n  if (!inputType) {\n    return null;\n  }\n\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputType]}`);\n\n    case 'checkbox':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n\n    case 'radio':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n\n    case 'range':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n\n    default:\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n  }\n};\n/**\n * @param {HTMLInputElement} input\n */\n\nexport const focusInput = input => {\n  input.focus(); // place cursor at end of text in text input\n\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915\n    const val = input.value;\n    input.value = '';\n    input.value = val;\n  }\n};\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n * @param {boolean} condition\n */\n\nexport const toggleClass = (target, classList, condition) => {\n  if (!target || !classList) {\n    return;\n  }\n\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean);\n  }\n\n  classList.forEach(className => {\n    if (Array.isArray(target)) {\n      target.forEach(elem => {\n        condition ? elem.classList.add(className) : elem.classList.remove(className);\n      });\n    } else {\n      condition ? target.classList.add(className) : target.classList.remove(className);\n    }\n  });\n};\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n */\n\nexport const addClass = (target, classList) => {\n  toggleClass(target, classList, true);\n};\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n */\n\nexport const removeClass = (target, classList) => {\n  toggleClass(target, classList, false);\n};\n/**\n * Get direct child of an element by class name\n *\n * @param {HTMLElement} elem\n * @param {string} className\n * @returns {HTMLElement | null}\n */\n\nexport const getDirectChildByClass = (elem, className) => {\n  const childNodes = toArray(elem.childNodes);\n\n  for (let i = 0; i < childNodes.length; i++) {\n    if (hasClass(childNodes[i], className)) {\n      return childNodes[i];\n    }\n  }\n};\n/**\n * @param {HTMLElement} elem\n * @param {string} property\n * @param {*} value\n */\n\nexport const applyNumericalStyle = (elem, property, value) => {\n  if (value === `${parseInt(value)}`) {\n    value = parseInt(value);\n  }\n\n  if (value || parseInt(value) === 0) {\n    elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n  } else {\n    elem.style.removeProperty(property);\n  }\n};\n/**\n * @param {HTMLElement} elem\n * @param {string} display\n */\n\nexport const show = (elem, display = 'flex') => {\n  elem.style.display = display;\n};\n/**\n * @param {HTMLElement} elem\n */\n\nexport const hide = elem => {\n  elem.style.display = 'none';\n};\nexport const setStyle = (parent, selector, property, value) => {\n  const el = parent.querySelector(selector);\n\n  if (el) {\n    el.style[property] = value;\n  }\n};\nexport const toggle = (elem, condition, display) => {\n  condition ? show(elem, display) : hide(elem);\n}; // borrowed from jquery $(elem).is(':visible') implementation\n\nexport const isVisible = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\nexport const allButtonsAreHidden = () => !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton());\nexport const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight); // borrowed from https://stackoverflow.com/a/46352119\n\nexport const hasCssAnimation = elem => {\n  const style = window.getComputedStyle(elem);\n  const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n  const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n  return animDuration > 0 || transDuration > 0;\n};\nexport const animateTimerProgressBar = (timer, reset = false) => {\n  const timerProgressBar = getTimerProgressBar();\n\n  if (isVisible(timerProgressBar)) {\n    if (reset) {\n      timerProgressBar.style.transition = 'none';\n      timerProgressBar.style.width = '100%';\n    }\n\n    setTimeout(() => {\n      timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n      timerProgressBar.style.width = '0%';\n    }, 10);\n  }\n};\nexport const stopTimerProgressBar = () => {\n  const timerProgressBar = getTimerProgressBar();\n  const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = '100%';\n  const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/dom/domUtils.js"],"names":["getCancelButton","getConfirmButton","getDenyButton","getTimerProgressBar","iconTypes","swalClasses","toArray","warn","states","previousBodyPadding","setInnerHtml","elem","html","textContent","parser","DOMParser","parsed","parseFromString","querySelector","childNodes","forEach","child","appendChild","hasClass","className","classList","split","i","length","contains","removeCustomClasses","params","Object","values","includes","showClass","remove","applyCustomClass","customClass","addClass","getInput","popup","inputType","checkbox","radio","range","input","focusInput","focus","type","val","value","toggleClass","target","condition","filter","Boolean","Array","isArray","add","removeClass","getDirectChildByClass","applyNumericalStyle","property","parseInt","style","removeProperty","show","display","hide","setStyle","parent","selector","el","toggle","isVisible","offsetWidth","offsetHeight","getClientRects","allButtonsAreHidden","isScrollable","scrollHeight","clientHeight","hasCssAnimation","window","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","setTimeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarFullWidth","timerProgressBarPercent"],"mappings":"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","sourcesContent":["import { getCancelButton, getConfirmButton, getDenyButton, getTimerProgressBar } from './getters.js'\nimport { iconTypes, swalClasses } from '../classes.js'\nimport { toArray, warn } from '../utils.js'\n\n// Remember state in cases where opening and handling a modal will fiddle with it.\nexport const states = {\n  previousBodyPadding: null,\n}\n\n/**\n * Securely set innerHTML of an element\n * https://github.com/sweetalert2/sweetalert2/issues/1926\n *\n * @param {HTMLElement} elem\n * @param {string} html\n */\nexport const setInnerHtml = (elem, html) => {\n  elem.textContent = ''\n  if (html) {\n    const parser = new DOMParser()\n    const parsed = parser.parseFromString(html, `text/html`)\n    toArray(parsed.querySelector('head').childNodes).forEach((child) => {\n      elem.appendChild(child)\n    })\n    toArray(parsed.querySelector('body').childNodes).forEach((child) => {\n      elem.appendChild(child)\n    })\n  }\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} className\n * @returns {boolean}\n */\nexport const hasClass = (elem, className) => {\n  if (!className) {\n    return false\n  }\n  const classList = className.split(/\\s+/)\n  for (let i = 0; i < classList.length; i++) {\n    if (!elem.classList.contains(classList[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nconst removeCustomClasses = (elem, params) => {\n  toArray(elem.classList).forEach((className) => {\n    if (\n      !Object.values(swalClasses).includes(className) &&\n      !Object.values(iconTypes).includes(className) &&\n      !Object.values(params.showClass).includes(className)\n    ) {\n      elem.classList.remove(className)\n    }\n  })\n}\n\nexport const applyCustomClass = (elem, params, className) => {\n  removeCustomClasses(elem, params)\n\n  if (params.customClass && params.customClass[className]) {\n    if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n      return warn(\n        `Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[\n          className\n        ]}\"`\n      )\n    }\n\n    addClass(elem, params.customClass[className])\n  }\n}\n\n/**\n * @param {HTMLElement} popup\n * @param {string} inputType\n * @returns {HTMLInputElement | null}\n */\nexport const getInput = (popup, inputType) => {\n  if (!inputType) {\n    return null\n  }\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputType]}`)\n    case 'checkbox':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`)\n    case 'radio':\n      return (\n        popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) ||\n        popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`)\n      )\n    case 'range':\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`)\n    default:\n      return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`)\n  }\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nexport const focusInput = (input) => {\n  input.focus()\n\n  // place cursor at end of text in text input\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915\n    const val = input.value\n    input.value = ''\n    input.value = val\n  }\n}\n\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n * @param {boolean} condition\n */\nexport const toggleClass = (target, classList, condition) => {\n  if (!target || !classList) {\n    return\n  }\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean)\n  }\n  classList.forEach((className) => {\n    if (Array.isArray(target)) {\n      target.forEach((elem) => {\n        condition ? elem.classList.add(className) : elem.classList.remove(className)\n      })\n    } else {\n      condition ? target.classList.add(className) : target.classList.remove(className)\n    }\n  })\n}\n\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n */\nexport const addClass = (target, classList) => {\n  toggleClass(target, classList, true)\n}\n\n/**\n * @param {HTMLElement | HTMLElement[] | null} target\n * @param {string | string[]} classList\n */\nexport const removeClass = (target, classList) => {\n  toggleClass(target, classList, false)\n}\n\n/**\n * Get direct child of an element by class name\n *\n * @param {HTMLElement} elem\n * @param {string} className\n * @returns {HTMLElement | null}\n */\nexport const getDirectChildByClass = (elem, className) => {\n  const childNodes = toArray(elem.childNodes)\n  for (let i = 0; i < childNodes.length; i++) {\n    if (hasClass(childNodes[i], className)) {\n      return childNodes[i]\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} property\n * @param {*} value\n */\nexport const applyNumericalStyle = (elem, property, value) => {\n  if (value === `${parseInt(value)}`) {\n    value = parseInt(value)\n  }\n  if (value || parseInt(value) === 0) {\n    elem.style[property] = typeof value === 'number' ? `${value}px` : value\n  } else {\n    elem.style.removeProperty(property)\n  }\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} display\n */\nexport const show = (elem, display = 'flex') => {\n  elem.style.display = display\n}\n\n/**\n * @param {HTMLElement} elem\n */\nexport const hide = (elem) => {\n  elem.style.display = 'none'\n}\n\nexport const setStyle = (parent, selector, property, value) => {\n  const el = parent.querySelector(selector)\n  if (el) {\n    el.style[property] = value\n  }\n}\n\nexport const toggle = (elem, condition, display) => {\n  condition ? show(elem, display) : hide(elem)\n}\n\n// borrowed from jquery $(elem).is(':visible') implementation\nexport const isVisible = (elem) => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length))\n\nexport const allButtonsAreHidden = () =>\n  !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton())\n\nexport const isScrollable = (elem) => !!(elem.scrollHeight > elem.clientHeight)\n\n// borrowed from https://stackoverflow.com/a/46352119\nexport const hasCssAnimation = (elem) => {\n  const style = window.getComputedStyle(elem)\n\n  const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0')\n  const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0')\n\n  return animDuration > 0 || transDuration > 0\n}\n\nexport const animateTimerProgressBar = (timer, reset = false) => {\n  const timerProgressBar = getTimerProgressBar()\n  if (isVisible(timerProgressBar)) {\n    if (reset) {\n      timerProgressBar.style.transition = 'none'\n      timerProgressBar.style.width = '100%'\n    }\n    setTimeout(() => {\n      timerProgressBar.style.transition = `width ${timer / 1000}s linear`\n      timerProgressBar.style.width = '0%'\n    }, 10)\n  }\n}\n\nexport const stopTimerProgressBar = () => {\n  const timerProgressBar = getTimerProgressBar()\n  const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width)\n  timerProgressBar.style.removeProperty('transition')\n  timerProgressBar.style.width = '100%'\n  const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width)\n  const timerProgressBarPercent = (timerProgressBarWidth / timerProgressBarFullWidth) * 100\n  timerProgressBar.style.removeProperty('transition')\n  timerProgressBar.style.width = `${timerProgressBarPercent}%`\n}\n"]},"metadata":{},"sourceType":"module"}