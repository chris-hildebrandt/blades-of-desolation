{"ast":null,"code":"import * as dom from '../utils/dom/index.js';\nimport Swal from '../sweetalert2.js';\nimport { swalClasses } from '../utils/classes.js';\n/**\n * Shows loader (spinner), this is useful with AJAX requests.\n * By default the loader be shown instead of the \"Confirm\" button.\n */\n\nconst showLoading = buttonToReplace => {\n  let popup = dom.getPopup();\n\n  if (!popup) {\n    new Swal(); // eslint-disable-line no-new\n  }\n\n  popup = dom.getPopup();\n  const loader = dom.getLoader();\n\n  if (dom.isToast()) {\n    dom.hide(dom.getIcon());\n  } else {\n    replaceButton(popup, buttonToReplace);\n  }\n\n  dom.show(loader);\n  popup.setAttribute('data-loading', true);\n  popup.setAttribute('aria-busy', true);\n  popup.focus();\n};\n\nconst replaceButton = (popup, buttonToReplace) => {\n  const actions = dom.getActions();\n  const loader = dom.getLoader();\n\n  if (!buttonToReplace && dom.isVisible(dom.getConfirmButton())) {\n    buttonToReplace = dom.getConfirmButton();\n  }\n\n  dom.show(actions);\n\n  if (buttonToReplace) {\n    dom.hide(buttonToReplace);\n    loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n  }\n\n  loader.parentNode.insertBefore(loader, buttonToReplace);\n  dom.addClass([popup, actions], swalClasses.loading);\n};\n\nexport { showLoading, showLoading as enableLoading };","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/staticMethods/showLoading.js"],"names":["dom","Swal","swalClasses","showLoading","buttonToReplace","popup","getPopup","loader","getLoader","isToast","hide","getIcon","replaceButton","show","setAttribute","focus","actions","getActions","isVisible","getConfirmButton","className","parentNode","insertBefore","addClass","loading","enableLoading"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAIC,eAAD,IAAqB;AACvC,MAAIC,KAAK,GAAGL,GAAG,CAACM,QAAJ,EAAZ;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,QAAIJ,IAAJ,GADU,CACC;AACZ;;AACDI,EAAAA,KAAK,GAAGL,GAAG,CAACM,QAAJ,EAAR;AACA,QAAMC,MAAM,GAAGP,GAAG,CAACQ,SAAJ,EAAf;;AAEA,MAAIR,GAAG,CAACS,OAAJ,EAAJ,EAAmB;AACjBT,IAAAA,GAAG,CAACU,IAAJ,CAASV,GAAG,CAACW,OAAJ,EAAT;AACD,GAFD,MAEO;AACLC,IAAAA,aAAa,CAACP,KAAD,EAAQD,eAAR,CAAb;AACD;;AACDJ,EAAAA,GAAG,CAACa,IAAJ,CAASN,MAAT;AAEAF,EAAAA,KAAK,CAACS,YAAN,CAAmB,cAAnB,EAAmC,IAAnC;AACAT,EAAAA,KAAK,CAACS,YAAN,CAAmB,WAAnB,EAAgC,IAAhC;AACAT,EAAAA,KAAK,CAACU,KAAN;AACD,CAlBD;;AAoBA,MAAMH,aAAa,GAAG,CAACP,KAAD,EAAQD,eAAR,KAA4B;AAChD,QAAMY,OAAO,GAAGhB,GAAG,CAACiB,UAAJ,EAAhB;AACA,QAAMV,MAAM,GAAGP,GAAG,CAACQ,SAAJ,EAAf;;AAEA,MAAI,CAACJ,eAAD,IAAoBJ,GAAG,CAACkB,SAAJ,CAAclB,GAAG,CAACmB,gBAAJ,EAAd,CAAxB,EAA+D;AAC7Df,IAAAA,eAAe,GAAGJ,GAAG,CAACmB,gBAAJ,EAAlB;AACD;;AAEDnB,EAAAA,GAAG,CAACa,IAAJ,CAASG,OAAT;;AACA,MAAIZ,eAAJ,EAAqB;AACnBJ,IAAAA,GAAG,CAACU,IAAJ,CAASN,eAAT;AACAG,IAAAA,MAAM,CAACO,YAAP,CAAoB,wBAApB,EAA8CV,eAAe,CAACgB,SAA9D;AACD;;AACDb,EAAAA,MAAM,CAACc,UAAP,CAAkBC,YAAlB,CAA+Bf,MAA/B,EAAuCH,eAAvC;AACAJ,EAAAA,GAAG,CAACuB,QAAJ,CAAa,CAAClB,KAAD,EAAQW,OAAR,CAAb,EAA+Bd,WAAW,CAACsB,OAA3C;AACD,CAfD;;AAiBA,SAASrB,WAAT,EAAsBA,WAAW,IAAIsB,aAArC","sourcesContent":["import * as dom from '../utils/dom/index.js'\nimport Swal from '../sweetalert2.js'\nimport { swalClasses } from '../utils/classes.js'\n\n/**\n * Shows loader (spinner), this is useful with AJAX requests.\n * By default the loader be shown instead of the \"Confirm\" button.\n */\nconst showLoading = (buttonToReplace) => {\n  let popup = dom.getPopup()\n  if (!popup) {\n    new Swal() // eslint-disable-line no-new\n  }\n  popup = dom.getPopup()\n  const loader = dom.getLoader()\n\n  if (dom.isToast()) {\n    dom.hide(dom.getIcon())\n  } else {\n    replaceButton(popup, buttonToReplace)\n  }\n  dom.show(loader)\n\n  popup.setAttribute('data-loading', true)\n  popup.setAttribute('aria-busy', true)\n  popup.focus()\n}\n\nconst replaceButton = (popup, buttonToReplace) => {\n  const actions = dom.getActions()\n  const loader = dom.getLoader()\n\n  if (!buttonToReplace && dom.isVisible(dom.getConfirmButton())) {\n    buttonToReplace = dom.getConfirmButton()\n  }\n\n  dom.show(actions)\n  if (buttonToReplace) {\n    dom.hide(buttonToReplace)\n    loader.setAttribute('data-button-to-replace', buttonToReplace.className)\n  }\n  loader.parentNode.insertBefore(loader, buttonToReplace)\n  dom.addClass([popup, actions], swalClasses.loading)\n}\n\nexport { showLoading, showLoading as enableLoading }\n"]},"metadata":{},"sourceType":"module"}