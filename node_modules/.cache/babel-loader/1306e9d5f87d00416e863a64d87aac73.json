{"ast":null,"code":"import { error } from '../utils/utils.js';\n\nconst isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n\nconst isElement = elem => elem instanceof Element || isJqueryElement(elem);\n\nexport const argsToParams = args => {\n  const params = {};\n\n  if (typeof args[0] === 'object' && !isElement(args[0])) {\n    Object.assign(params, args[0]);\n  } else {\n    ;\n    ['title', 'html', 'icon'].forEach((name, index) => {\n      const arg = args[index];\n\n      if (typeof arg === 'string' || isElement(arg)) {\n        params[name] = arg;\n      } else if (arg !== undefined) {\n        error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n      }\n    });\n  }\n\n  return params;\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/staticMethods/argsToParams.js"],"names":["error","isJqueryElement","elem","jquery","isElement","Element","argsToParams","args","params","Object","assign","forEach","name","index","arg","undefined"],"mappings":"AAAA,SAASA,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,eAAe,GAAIC,IAAD,IAAU,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACC,MAAnE;;AACA,MAAMC,SAAS,GAAIF,IAAD,IAAUA,IAAI,YAAYG,OAAhB,IAA2BJ,eAAe,CAACC,IAAD,CAAtE;;AAEA,OAAO,MAAMI,YAAY,GAAIC,IAAD,IAAU;AACpC,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,OAAOD,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAnB,IAA+B,CAACH,SAAS,CAACG,IAAI,CAAC,CAAD,CAAL,CAA7C,EAAwD;AACtDE,IAAAA,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBD,IAAI,CAAC,CAAD,CAA1B;AACD,GAFD,MAEO;AACL;AAAC,KAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0BI,OAA1B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,YAAMC,GAAG,GAAGP,IAAI,CAACM,KAAD,CAAhB;;AACA,UAAI,OAAOC,GAAP,KAAe,QAAf,IAA2BV,SAAS,CAACU,GAAD,CAAxC,EAA+C;AAC7CN,QAAAA,MAAM,CAACI,IAAD,CAAN,GAAeE,GAAf;AACD,OAFD,MAEO,IAAIA,GAAG,KAAKC,SAAZ,EAAuB;AAC5Bf,QAAAA,KAAK,CAAE,sBAAqBY,IAAK,yCAAwC,OAAOE,GAAI,EAA/E,CAAL;AACD;AACF,KAPA;AAQF;;AACD,SAAON,MAAP;AACD,CAfM","sourcesContent":["import { error } from '../utils/utils.js'\n\nconst isJqueryElement = (elem) => typeof elem === 'object' && elem.jquery\nconst isElement = (elem) => elem instanceof Element || isJqueryElement(elem)\n\nexport const argsToParams = (args) => {\n  const params = {}\n  if (typeof args[0] === 'object' && !isElement(args[0])) {\n    Object.assign(params, args[0])\n  } else {\n    ;['title', 'html', 'icon'].forEach((name, index) => {\n      const arg = args[index]\n      if (typeof arg === 'string' || isElement(arg)) {\n        params[name] = arg\n      } else if (arg !== undefined) {\n        error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`)\n      }\n    })\n  }\n  return params\n}\n"]},"metadata":{},"sourceType":"module"}