{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport { warn } from '../../utils.js';\nimport * as dom from '../../dom/index.js';\n\nconst createStepElement = step => {\n  const stepEl = document.createElement('li');\n  dom.addClass(stepEl, swalClasses['progress-step']);\n  dom.setInnerHtml(stepEl, step);\n  return stepEl;\n};\n\nconst createLineElement = params => {\n  const lineEl = document.createElement('li');\n  dom.addClass(lineEl, swalClasses['progress-step-line']);\n\n  if (params.progressStepsDistance) {\n    lineEl.style.width = params.progressStepsDistance;\n  }\n\n  return lineEl;\n};\n\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps();\n\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    return dom.hide(progressStepsContainer);\n  }\n\n  dom.show(progressStepsContainer);\n  progressStepsContainer.textContent = '';\n\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n  }\n\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step);\n    progressStepsContainer.appendChild(stepEl);\n\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step']);\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params);\n      progressStepsContainer.appendChild(lineEl);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/dom/renderers/renderProgressSteps.js"],"names":["swalClasses","warn","dom","createStepElement","step","stepEl","document","createElement","addClass","setInnerHtml","createLineElement","params","lineEl","progressStepsDistance","style","width","renderProgressSteps","instance","progressStepsContainer","getProgressSteps","progressSteps","length","hide","show","textContent","currentProgressStep","forEach","index","appendChild"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;AAEA,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;AACAL,EAAAA,GAAG,CAACM,QAAJ,CAAaH,MAAb,EAAqBL,WAAW,CAAC,eAAD,CAAhC;AACAE,EAAAA,GAAG,CAACO,YAAJ,CAAiBJ,MAAjB,EAAyBD,IAAzB;AACA,SAAOC,MAAP;AACD,CALD;;AAOA,MAAMK,iBAAiB,GAAIC,MAAD,IAAY;AACpC,QAAMC,MAAM,GAAGN,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAf;AACAL,EAAAA,GAAG,CAACM,QAAJ,CAAaI,MAAb,EAAqBZ,WAAW,CAAC,oBAAD,CAAhC;;AACA,MAAIW,MAAM,CAACE,qBAAX,EAAkC;AAChCD,IAAAA,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAqBJ,MAAM,CAACE,qBAA5B;AACD;;AACD,SAAOD,MAAP;AACD,CAPD;;AASA,OAAO,MAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWN,MAAX,KAAsB;AACvD,QAAMO,sBAAsB,GAAGhB,GAAG,CAACiB,gBAAJ,EAA/B;;AACA,MAAI,CAACR,MAAM,CAACS,aAAR,IAAyBT,MAAM,CAACS,aAAP,CAAqBC,MAArB,KAAgC,CAA7D,EAAgE;AAC9D,WAAOnB,GAAG,CAACoB,IAAJ,CAASJ,sBAAT,CAAP;AACD;;AAEDhB,EAAAA,GAAG,CAACqB,IAAJ,CAASL,sBAAT;AACAA,EAAAA,sBAAsB,CAACM,WAAvB,GAAqC,EAArC;;AACA,MAAIb,MAAM,CAACc,mBAAP,IAA8Bd,MAAM,CAACS,aAAP,CAAqBC,MAAvD,EAA+D;AAC7DpB,IAAAA,IAAI,CACF,wFACE,oDAFA,CAAJ;AAID;;AAEDU,EAAAA,MAAM,CAACS,aAAP,CAAqBM,OAArB,CAA6B,CAACtB,IAAD,EAAOuB,KAAP,KAAiB;AAC5C,UAAMtB,MAAM,GAAGF,iBAAiB,CAACC,IAAD,CAAhC;AACAc,IAAAA,sBAAsB,CAACU,WAAvB,CAAmCvB,MAAnC;;AACA,QAAIsB,KAAK,KAAKhB,MAAM,CAACc,mBAArB,EAA0C;AACxCvB,MAAAA,GAAG,CAACM,QAAJ,CAAaH,MAAb,EAAqBL,WAAW,CAAC,sBAAD,CAAhC;AACD;;AAED,QAAI2B,KAAK,KAAKhB,MAAM,CAACS,aAAP,CAAqBC,MAArB,GAA8B,CAA5C,EAA+C;AAC7C,YAAMT,MAAM,GAAGF,iBAAiB,CAACC,MAAD,CAAhC;AACAO,MAAAA,sBAAsB,CAACU,WAAvB,CAAmChB,MAAnC;AACD;AACF,GAXD;AAYD,CA3BM","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport { warn } from '../../utils.js'\nimport * as dom from '../../dom/index.js'\n\nconst createStepElement = (step) => {\n  const stepEl = document.createElement('li')\n  dom.addClass(stepEl, swalClasses['progress-step'])\n  dom.setInnerHtml(stepEl, step)\n  return stepEl\n}\n\nconst createLineElement = (params) => {\n  const lineEl = document.createElement('li')\n  dom.addClass(lineEl, swalClasses['progress-step-line'])\n  if (params.progressStepsDistance) {\n    lineEl.style.width = params.progressStepsDistance\n  }\n  return lineEl\n}\n\nexport const renderProgressSteps = (instance, params) => {\n  const progressStepsContainer = dom.getProgressSteps()\n  if (!params.progressSteps || params.progressSteps.length === 0) {\n    return dom.hide(progressStepsContainer)\n  }\n\n  dom.show(progressStepsContainer)\n  progressStepsContainer.textContent = ''\n  if (params.currentProgressStep >= params.progressSteps.length) {\n    warn(\n      'Invalid currentProgressStep parameter, it should be less than progressSteps.length ' +\n        '(currentProgressStep like JS arrays starts from 0)'\n    )\n  }\n\n  params.progressSteps.forEach((step, index) => {\n    const stepEl = createStepElement(step)\n    progressStepsContainer.appendChild(stepEl)\n    if (index === params.currentProgressStep) {\n      dom.addClass(stepEl, swalClasses['active-progress-step'])\n    }\n\n    if (index !== params.progressSteps.length - 1) {\n      const lineEl = createLineElement(params)\n      progressStepsContainer.appendChild(lineEl)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}