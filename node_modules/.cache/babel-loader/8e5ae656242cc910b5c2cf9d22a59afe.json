{"ast":null,"code":"class BuffService {\n  removeBuff(target, buff) {\n    if (Array.isArray(target[buff.effect])) {\n      target[buff.effect] = target[buff.effect].filter(t => t != buff.value);\n    } else if (typeof buff.value !== 'number') {\n      target[buff.effect] = null;\n    } else {\n      target[buff.effect] -= buff.value;\n    }\n  }\n\n  removeDebuff(target, debuff) {\n    if (Array.isArray(target[debuff.effect])) {\n      target[debuff.effect].push(debuff.value);\n    } else if (typeof debuff.value !== 'number') {\n      target[debuff.effect] = debuff.value;\n    } else {\n      target[debuff.effect] += debuff.value;\n    }\n  }\n\n}\n\nexport const buffService = new BuffService();","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/src/services/BuffService.js"],"names":["BuffService","removeBuff","target","buff","Array","isArray","effect","filter","t","value","removeDebuff","debuff","push","buffService"],"mappings":"AAAA,MAAMA,WAAN,CAAiB;AACfC,EAAAA,UAAU,CAACC,MAAD,EAASC,IAAT,EAAc;AACtB,QAAGC,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACC,IAAI,CAACG,MAAN,CAApB,CAAH,EAAsC;AACpCJ,MAAAA,MAAM,CAACC,IAAI,CAACG,MAAN,CAAN,GAAsBJ,MAAM,CAACC,IAAI,CAACG,MAAN,CAAN,CAAoBC,MAApB,CAA2BC,CAAC,IAAIA,CAAC,IAAIL,IAAI,CAACM,KAA1C,CAAtB;AACD,KAFD,MAEM,IAAG,OAAON,IAAI,CAACM,KAAZ,KAAsB,QAAzB,EAAkC;AACtCP,MAAAA,MAAM,CAACC,IAAI,CAACG,MAAN,CAAN,GAAsB,IAAtB;AACD,KAFK,MAED;AACHJ,MAAAA,MAAM,CAACC,IAAI,CAACG,MAAN,CAAN,IAAuBH,IAAI,CAACM,KAA5B;AACD;AACF;;AACDC,EAAAA,YAAY,CAACR,MAAD,EAASS,MAAT,EAAgB;AAC1B,QAAGP,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACS,MAAM,CAACL,MAAR,CAApB,CAAH,EAAwC;AACtCJ,MAAAA,MAAM,CAACS,MAAM,CAACL,MAAR,CAAN,CAAsBM,IAAtB,CAA2BD,MAAM,CAACF,KAAlC;AACD,KAFD,MAEM,IAAG,OAAOE,MAAM,CAACF,KAAd,KAAwB,QAA3B,EAAoC;AACxCP,MAAAA,MAAM,CAACS,MAAM,CAACL,MAAR,CAAN,GAAwBK,MAAM,CAACF,KAA/B;AACD,KAFK,MAED;AACHP,MAAAA,MAAM,CAACS,MAAM,CAACL,MAAR,CAAN,IAAyBK,MAAM,CAACF,KAAhC;AACD;AACF;;AAlBc;;AAqBjB,OAAO,MAAMI,WAAW,GAAG,IAAIb,WAAJ,EAApB","sourcesContent":["class BuffService{\r\n  removeBuff(target, buff){\r\n    if(Array.isArray(target[buff.effect])){\r\n      target[buff.effect] = target[buff.effect].filter(t => t != buff.value)\r\n    }else if(typeof buff.value !== 'number'){\r\n      target[buff.effect] = null\r\n    }else{\r\n      target[buff.effect] -= buff.value\r\n    }\r\n  }\r\n  removeDebuff(target, debuff){\r\n    if(Array.isArray(target[debuff.effect])){\r\n      target[debuff.effect].push(debuff.value)\r\n    }else if(typeof debuff.value !== 'number'){\r\n      target[debuff.effect] = debuff.value\r\n    }else{\r\n      target[debuff.effect] += debuff.value\r\n    }\r\n  }\r\n}\r\n\r\nexport const buffService = new BuffService()"]},"metadata":{},"sourceType":"module"}