{"ast":null,"code":"import * as dom from '../utils/dom/index.js';\nimport { swalClasses } from '../utils/classes.js';\nimport privateProps from '../privateProps.js'; // Show block with validation message\n\nexport function showValidationMessage(error) {\n  const domCache = privateProps.domCache.get(this);\n  const params = privateProps.innerParams.get(this);\n  dom.setInnerHtml(domCache.validationMessage, error);\n  domCache.validationMessage.className = swalClasses['validation-message'];\n\n  if (params.customClass && params.customClass.validationMessage) {\n    dom.addClass(domCache.validationMessage, params.customClass.validationMessage);\n  }\n\n  dom.show(domCache.validationMessage);\n  const input = this.getInput();\n\n  if (input) {\n    input.setAttribute('aria-invalid', true);\n    input.setAttribute('aria-describedby', swalClasses['validation-message']);\n    dom.focusInput(input);\n    dom.addClass(input, swalClasses.inputerror);\n  }\n} // Hide block with validation message\n\nexport function resetValidationMessage() {\n  const domCache = privateProps.domCache.get(this);\n\n  if (domCache.validationMessage) {\n    dom.hide(domCache.validationMessage);\n  }\n\n  const input = this.getInput();\n\n  if (input) {\n    input.removeAttribute('aria-invalid');\n    input.removeAttribute('aria-describedby');\n    dom.removeClass(input, swalClasses.inputerror);\n  }\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/instanceMethods/validation-message.js"],"names":["dom","swalClasses","privateProps","showValidationMessage","error","domCache","get","params","innerParams","setInnerHtml","validationMessage","className","customClass","addClass","show","input","getInput","setAttribute","focusInput","inputerror","resetValidationMessage","hide","removeAttribute","removeClass"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,uBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAC3C,QAAMC,QAAQ,GAAGH,YAAY,CAACG,QAAb,CAAsBC,GAAtB,CAA0B,IAA1B,CAAjB;AACA,QAAMC,MAAM,GAAGL,YAAY,CAACM,WAAb,CAAyBF,GAAzB,CAA6B,IAA7B,CAAf;AACAN,EAAAA,GAAG,CAACS,YAAJ,CAAiBJ,QAAQ,CAACK,iBAA1B,EAA6CN,KAA7C;AACAC,EAAAA,QAAQ,CAACK,iBAAT,CAA2BC,SAA3B,GAAuCV,WAAW,CAAC,oBAAD,CAAlD;;AACA,MAAIM,MAAM,CAACK,WAAP,IAAsBL,MAAM,CAACK,WAAP,CAAmBF,iBAA7C,EAAgE;AAC9DV,IAAAA,GAAG,CAACa,QAAJ,CAAaR,QAAQ,CAACK,iBAAtB,EAAyCH,MAAM,CAACK,WAAP,CAAmBF,iBAA5D;AACD;;AACDV,EAAAA,GAAG,CAACc,IAAJ,CAAST,QAAQ,CAACK,iBAAlB;AAEA,QAAMK,KAAK,GAAG,KAAKC,QAAL,EAAd;;AACA,MAAID,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACE,YAAN,CAAmB,cAAnB,EAAmC,IAAnC;AACAF,IAAAA,KAAK,CAACE,YAAN,CAAmB,kBAAnB,EAAuChB,WAAW,CAAC,oBAAD,CAAlD;AACAD,IAAAA,GAAG,CAACkB,UAAJ,CAAeH,KAAf;AACAf,IAAAA,GAAG,CAACa,QAAJ,CAAaE,KAAb,EAAoBd,WAAW,CAACkB,UAAhC;AACD;AACF,C,CAED;;AACA,OAAO,SAASC,sBAAT,GAAkC;AACvC,QAAMf,QAAQ,GAAGH,YAAY,CAACG,QAAb,CAAsBC,GAAtB,CAA0B,IAA1B,CAAjB;;AACA,MAAID,QAAQ,CAACK,iBAAb,EAAgC;AAC9BV,IAAAA,GAAG,CAACqB,IAAJ,CAAShB,QAAQ,CAACK,iBAAlB;AACD;;AAED,QAAMK,KAAK,GAAG,KAAKC,QAAL,EAAd;;AACA,MAAID,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACO,eAAN,CAAsB,cAAtB;AACAP,IAAAA,KAAK,CAACO,eAAN,CAAsB,kBAAtB;AACAtB,IAAAA,GAAG,CAACuB,WAAJ,CAAgBR,KAAhB,EAAuBd,WAAW,CAACkB,UAAnC;AACD;AACF","sourcesContent":["import * as dom from '../utils/dom/index.js'\nimport { swalClasses } from '../utils/classes.js'\nimport privateProps from '../privateProps.js'\n\n// Show block with validation message\nexport function showValidationMessage(error) {\n  const domCache = privateProps.domCache.get(this)\n  const params = privateProps.innerParams.get(this)\n  dom.setInnerHtml(domCache.validationMessage, error)\n  domCache.validationMessage.className = swalClasses['validation-message']\n  if (params.customClass && params.customClass.validationMessage) {\n    dom.addClass(domCache.validationMessage, params.customClass.validationMessage)\n  }\n  dom.show(domCache.validationMessage)\n\n  const input = this.getInput()\n  if (input) {\n    input.setAttribute('aria-invalid', true)\n    input.setAttribute('aria-describedby', swalClasses['validation-message'])\n    dom.focusInput(input)\n    dom.addClass(input, swalClasses.inputerror)\n  }\n}\n\n// Hide block with validation message\nexport function resetValidationMessage() {\n  const domCache = privateProps.domCache.get(this)\n  if (domCache.validationMessage) {\n    dom.hide(domCache.validationMessage)\n  }\n\n  const input = this.getInput()\n  if (input) {\n    input.removeAttribute('aria-invalid')\n    input.removeAttribute('aria-describedby')\n    dom.removeClass(input, swalClasses.inputerror)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}