{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport { warn } from '../../utils.js';\nimport * as dom from '../../dom/index.js';\n\nfunction handleBackdropParam(container, backdrop) {\n  if (typeof backdrop === 'string') {\n    container.style.background = backdrop;\n  } else if (!backdrop) {\n    dom.addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n  }\n}\n\nfunction handlePositionParam(container, position) {\n  if (position in swalClasses) {\n    dom.addClass(container, swalClasses[position]);\n  } else {\n    warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n    dom.addClass(container, swalClasses.center);\n  }\n}\n\nfunction handleGrowParam(container, grow) {\n  if (grow && typeof grow === 'string') {\n    const growClass = `grow-${grow}`;\n\n    if (growClass in swalClasses) {\n      dom.addClass(container, swalClasses[growClass]);\n    }\n  }\n}\n\nexport const renderContainer = (instance, params) => {\n  const container = dom.getContainer();\n\n  if (!container) {\n    return;\n  }\n\n  handleBackdropParam(container, params.backdrop);\n  handlePositionParam(container, params.position);\n  handleGrowParam(container, params.grow); // Custom class\n\n  dom.applyCustomClass(container, params, 'container');\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/dom/renderers/renderContainer.js"],"names":["swalClasses","warn","dom","handleBackdropParam","container","backdrop","style","background","addClass","document","documentElement","body","handlePositionParam","position","center","handleGrowParam","grow","growClass","renderContainer","instance","params","getContainer","applyCustomClass"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;AAEA,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,QAAxC,EAAkD;AAChD,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCD,IAAAA,SAAS,CAACE,KAAV,CAAgBC,UAAhB,GAA6BF,QAA7B;AACD,GAFD,MAEO,IAAI,CAACA,QAAL,EAAe;AACpBH,IAAAA,GAAG,CAACM,QAAJ,CAAa,CAACC,QAAQ,CAACC,eAAV,EAA2BD,QAAQ,CAACE,IAApC,CAAb,EAAwDX,WAAW,CAAC,aAAD,CAAnE;AACD;AACF;;AAED,SAASY,mBAAT,CAA6BR,SAA7B,EAAwCS,QAAxC,EAAkD;AAChD,MAAIA,QAAQ,IAAIb,WAAhB,EAA6B;AAC3BE,IAAAA,GAAG,CAACM,QAAJ,CAAaJ,SAAb,EAAwBJ,WAAW,CAACa,QAAD,CAAnC;AACD,GAFD,MAEO;AACLZ,IAAAA,IAAI,CAAC,+DAAD,CAAJ;AACAC,IAAAA,GAAG,CAACM,QAAJ,CAAaJ,SAAb,EAAwBJ,WAAW,CAACc,MAApC;AACD;AACF;;AAED,SAASC,eAAT,CAAyBX,SAAzB,EAAoCY,IAApC,EAA0C;AACxC,MAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AACpC,UAAMC,SAAS,GAAI,QAAOD,IAAK,EAA/B;;AACA,QAAIC,SAAS,IAAIjB,WAAjB,EAA8B;AAC5BE,MAAAA,GAAG,CAACM,QAAJ,CAAaJ,SAAb,EAAwBJ,WAAW,CAACiB,SAAD,CAAnC;AACD;AACF;AACF;;AAED,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACnD,QAAMhB,SAAS,GAAGF,GAAG,CAACmB,YAAJ,EAAlB;;AAEA,MAAI,CAACjB,SAAL,EAAgB;AACd;AACD;;AAEDD,EAAAA,mBAAmB,CAACC,SAAD,EAAYgB,MAAM,CAACf,QAAnB,CAAnB;AAEAO,EAAAA,mBAAmB,CAACR,SAAD,EAAYgB,MAAM,CAACP,QAAnB,CAAnB;AACAE,EAAAA,eAAe,CAACX,SAAD,EAAYgB,MAAM,CAACJ,IAAnB,CAAf,CAVmD,CAYnD;;AACAd,EAAAA,GAAG,CAACoB,gBAAJ,CAAqBlB,SAArB,EAAgCgB,MAAhC,EAAwC,WAAxC;AACD,CAdM","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport { warn } from '../../utils.js'\nimport * as dom from '../../dom/index.js'\n\nfunction handleBackdropParam(container, backdrop) {\n  if (typeof backdrop === 'string') {\n    container.style.background = backdrop\n  } else if (!backdrop) {\n    dom.addClass([document.documentElement, document.body], swalClasses['no-backdrop'])\n  }\n}\n\nfunction handlePositionParam(container, position) {\n  if (position in swalClasses) {\n    dom.addClass(container, swalClasses[position])\n  } else {\n    warn('The \"position\" parameter is not valid, defaulting to \"center\"')\n    dom.addClass(container, swalClasses.center)\n  }\n}\n\nfunction handleGrowParam(container, grow) {\n  if (grow && typeof grow === 'string') {\n    const growClass = `grow-${grow}`\n    if (growClass in swalClasses) {\n      dom.addClass(container, swalClasses[growClass])\n    }\n  }\n}\n\nexport const renderContainer = (instance, params) => {\n  const container = dom.getContainer()\n\n  if (!container) {\n    return\n  }\n\n  handleBackdropParam(container, params.backdrop)\n\n  handlePositionParam(container, params.position)\n  handleGrowParam(container, params.grow)\n\n  // Custom class\n  dom.applyCustomClass(container, params, 'container')\n}\n"]},"metadata":{},"sourceType":"module"}