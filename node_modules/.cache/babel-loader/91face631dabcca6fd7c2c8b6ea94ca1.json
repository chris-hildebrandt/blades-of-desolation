{"ast":null,"code":"import privateProps from '../privateProps.js';\n\nfunction setButtonsDisabled(instance, buttons, disabled) {\n  const domCache = privateProps.domCache.get(instance);\n  buttons.forEach(button => {\n    domCache[button].disabled = disabled;\n  });\n}\n\nfunction setInputDisabled(input, disabled) {\n  if (!input) {\n    return false;\n  }\n\n  if (input.type === 'radio') {\n    const radiosContainer = input.parentNode.parentNode;\n    const radios = radiosContainer.querySelectorAll('input');\n\n    for (let i = 0; i < radios.length; i++) {\n      radios[i].disabled = disabled;\n    }\n  } else {\n    input.disabled = disabled;\n  }\n}\n\nexport function enableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n}\nexport function disableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n}\nexport function enableInput() {\n  return setInputDisabled(this.getInput(), false);\n}\nexport function disableInput() {\n  return setInputDisabled(this.getInput(), true);\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/instanceMethods/enable-disable-elements.js"],"names":["privateProps","setButtonsDisabled","instance","buttons","disabled","domCache","get","forEach","button","setInputDisabled","input","type","radiosContainer","parentNode","radios","querySelectorAll","i","length","enableButtons","disableButtons","enableInput","getInput","disableInput"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyD;AACvD,QAAMC,QAAQ,GAAGL,YAAY,CAACK,QAAb,CAAsBC,GAAtB,CAA0BJ,QAA1B,CAAjB;AACAC,EAAAA,OAAO,CAACI,OAAR,CAAiBC,MAAD,IAAY;AAC1BH,IAAAA,QAAQ,CAACG,MAAD,CAAR,CAAiBJ,QAAjB,GAA4BA,QAA5B;AACD,GAFD;AAGD;;AAED,SAASK,gBAAT,CAA0BC,KAA1B,EAAiCN,QAAjC,EAA2C;AACzC,MAAI,CAACM,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AACD,MAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,UAAMC,eAAe,GAAGF,KAAK,CAACG,UAAN,CAAiBA,UAAzC;AACA,UAAMC,MAAM,GAAGF,eAAe,CAACG,gBAAhB,CAAiC,OAAjC,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,MAAAA,MAAM,CAACE,CAAD,CAAN,CAAUZ,QAAV,GAAqBA,QAArB;AACD;AACF,GAND,MAMO;AACLM,IAAAA,KAAK,CAACN,QAAN,GAAiBA,QAAjB;AACD;AACF;;AAED,OAAO,SAASc,aAAT,GAAyB;AAC9BjB,EAAAA,kBAAkB,CAAC,IAAD,EAAO,CAAC,eAAD,EAAkB,YAAlB,EAAgC,cAAhC,CAAP,EAAwD,KAAxD,CAAlB;AACD;AAED,OAAO,SAASkB,cAAT,GAA0B;AAC/BlB,EAAAA,kBAAkB,CAAC,IAAD,EAAO,CAAC,eAAD,EAAkB,YAAlB,EAAgC,cAAhC,CAAP,EAAwD,IAAxD,CAAlB;AACD;AAED,OAAO,SAASmB,WAAT,GAAuB;AAC5B,SAAOX,gBAAgB,CAAC,KAAKY,QAAL,EAAD,EAAkB,KAAlB,CAAvB;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAOb,gBAAgB,CAAC,KAAKY,QAAL,EAAD,EAAkB,IAAlB,CAAvB;AACD","sourcesContent":["import privateProps from '../privateProps.js'\n\nfunction setButtonsDisabled(instance, buttons, disabled) {\n  const domCache = privateProps.domCache.get(instance)\n  buttons.forEach((button) => {\n    domCache[button].disabled = disabled\n  })\n}\n\nfunction setInputDisabled(input, disabled) {\n  if (!input) {\n    return false\n  }\n  if (input.type === 'radio') {\n    const radiosContainer = input.parentNode.parentNode\n    const radios = radiosContainer.querySelectorAll('input')\n    for (let i = 0; i < radios.length; i++) {\n      radios[i].disabled = disabled\n    }\n  } else {\n    input.disabled = disabled\n  }\n}\n\nexport function enableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false)\n}\n\nexport function disableButtons() {\n  setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true)\n}\n\nexport function enableInput() {\n  return setInputDisabled(this.getInput(), false)\n}\n\nexport function disableInput() {\n  return setInputDisabled(this.getInput(), true)\n}\n"]},"metadata":{},"sourceType":"module"}