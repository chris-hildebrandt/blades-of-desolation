{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = [\"id\", \"onClick\"];\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"container-fluid area-map map\",\n    style: _normalizeStyle('background-image: url(' + _ctx.bgImg + ')')\n  }, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(10, row => {\n    return _createElementVNode(\"div\", {\n      class: \"row\",\n      key: row\n    }, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(6, col => {\n      return _createElementVNode(\"div\", {\n        id: _ctx.location + '-' + row + '-' + col,\n        class: _normalizeClass([\"col bg-shadow disabled\", $options.findIfVisible(row, col) ? '' : 'bg-dark']),\n        onClick: $event => $options.explore(_ctx.location + '-' + row + '-' + col),\n        key: col\n      }, [row == 5 && col == 3 ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass($options.findIfVisible(row, col) ? '' : 'd-none')\n      }, [_createElementVNode(\"img\", {\n        class: \"char-icon\",\n        src: _ctx.tavernImg,\n        alt: \"Tavern\"\n      }, null, 8, _hoisted_2)], 2)) : _ctx.location + '-' + row + '-' + col == _ctx.currentLocation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n        class: \"char-icon\",\n        src: _ctx.charImg,\n        alt: \"X\"\n      }, null, 8, _hoisted_4)])) : _createCommentVNode(\"\", true), row == 10 && col == 6 && !_ctx.areaCompleted ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 2,\n        class: _normalizeClass($options.findIfVisible(row, col) ? '' : 'd-none')\n      }, [_createElementVNode(\"img\", {\n        class: \"char-icon\",\n        src: _ctx.chestImg,\n        alt: \"treasure-chest\"\n      }, null, 8, _hoisted_5)], 2)) : _createCommentVNode(\"\", true)], 10, _hoisted_1);\n    }), 64))]);\n  }), 64))], 4);\n}","map":{"version":3,"mappings":";;;;;;;;;uBACEA,oBAQM,KARN,EAQM;AARDC,SAAK,EAAC,8BAQL;AARqCC,SAAK,6CAA2BC,UAA3B,GAAgC,GAAhC;AAQ1C,GARN,kBACEH,oBAMMI,SANN,EAMM,IANN,EAMMC,YANyB,EAMzB,EANkBC,GAAS,IAAN;WAA3BC,oBAMM,KANN,EAMM;AANDN,WAAK,EAAC,KAML;AAN8BO,SAAG,EAAEF;AAMnC,KANN,kBACIN,oBAIMI,SAJN,EAIM,IAJN,EAIMC,YAJwK,CAIxK,EAJiKI,GAAQ,IAAL;aAA1KF,oBAIM,KAJN,EAIM;AAJAG,UAAE,EAAEP,gBAAQ,GAAR,GAAaG,GAAb,GAAgB,GAAhB,GAAqBG,GAIzB;AAJ8BR,aAAK,mBAAC,wBAAD,EAAkCU,uBAAcL,GAAd,EAAmBG,GAAnB,IAAsB,EAAtB,GAAsB,SAAxD,EAInC;AAJgHG,eAAK,YAAED,iBAAQR,gBAAQ,GAAR,GAAaG,GAAb,GAAgB,GAAhB,GAAqBG,GAA7B,CAIvH;AAJ4KD,WAAG,EAAEC;AAIjL,OAJN,GACeH,GAAG,KAAH,IAAYG,GAAG,uBAA1BT,oBAA6I,KAA7I,EAA6I;cAAA;AAA3GC,aAAK,kBAAEU,uBAAcL,GAAd,EAAmBG,GAAnB,IAAsB,EAAtB,GAAsB,QAAxB;AAAsG,OAA7I,GAAkFF,oBAAqD,KAArD,EAAqD;AAAhDN,aAAK,EAAC,WAA0C;AAA7BY,WAAG,EAAEV,cAAwB;AAAbW,WAAG,EAAC;AAAS,OAArD,uBAAlF,QACgBX,gBAAQ,GAAR,GAAaG,GAAb,GAAgB,GAAhB,GAAqBG,GAArB,IAA4BN,sCAA5CH,oBAAiH,KAAjH,EAAiHe,UAAjH,EAAiH,CAApDR,oBAA8C,KAA9C,EAA8C;AAAzCN,aAAK,EAAC,WAAmC;AAAtBY,WAAG,EAAEV,YAAiB;AAARW,WAAG,EAAC;AAAI,OAA9C,sBAAoD,CAAjH,oCACWR,GAAG,MAAH,IAAaG,GAAG,KAAhB,IAAgB,CAAUN,oCAArCH,oBAAuK,KAAvK,EAAuK;cAAA;AAAlHC,aAAK,kBAAEU,uBAAcL,GAAd,EAAmBG,GAAnB,IAAsB,EAAtB,GAAsB,QAAxB;AAA6G,OAAvK,GAAqGF,oBAA4D,KAA5D,EAA4D;AAAvDN,aAAK,EAAC,WAAiD;AAApCY,WAAG,EAAEV,aAA+B;AAArBW,WAAG,EAAC;AAAiB,OAA5D,uBAArG,sCAHJ;KAIM,CAJN,OADJ;GAMM,CANN,OADF","names":["_createElementBlock","class","style","_ctx","_Fragment","_renderList","row","_createElementVNode","key","col","id","$options","onClick","src","alt","_hoisted_3"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\components\\AreaLocation.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid area-map map\" :style=\"'background-image: url('+bgImg+')'\">\r\n    <div class=\"row\" v-for=\"row in 10\" :key=\"row\">\r\n        <div :id=\"location+'-'+row+'-'+col\" class=\"col bg-shadow disabled\" :class=\"findIfVisible(row, col) ? '' : 'bg-dark'\" @click=\"explore(location+'-'+row+'-'+col)\" v-for=\"col in 6\" :key=\"col\">\r\n            <div v-if=\"row == 5 && col == 3\" :class=\"findIfVisible(row, col) ? '' : 'd-none'\"><img class=\"char-icon\" :src=\"tavernImg\" alt=\"Tavern\"></div>\r\n            <div v-else-if=\"location+'-'+row+'-'+col == currentLocation\"><img class=\"char-icon\" :src=\"charImg\" alt=\"X\"></div>\r\n            <div v-if=\"row == 10 && col == 6 && !areaCompleted\" :class=\"findIfVisible(row, col) ? '' : 'd-none'\"><img class=\"char-icon\" :src=\"chestImg\" alt=\"treasure-chest\"></div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport $store from '@/store/index'\r\nimport $ from 'jquery'\r\nimport { computed, onMounted, watch } from \"@vue/runtime-core\"\r\nimport router from \"@/router\"\r\nimport Notify from \"@/utils/Notify\"\r\nimport { itemsService } from \"@/services/ItemsService\"\r\nimport { useToast } from \"vue-toastification\"\r\nimport { Item } from \"@/models/Item\"\r\nimport { spellsService } from \"@/services/SpellsService\"\r\nimport { characterService } from \"@/services/CharacterService\"\r\n\r\nexport default {\r\n    name: 'AreaLocation',\r\n    components: {\r\n\r\n    },\r\n    setup(){\r\n        onMounted(()=> {\r\n            let explored = $store.state.player.explored[$store.state.location]\r\n            explored.forEach(id => {\r\n                $('#'+id).removeClass('bg-shadow')\r\n            })\r\n            setExploreOptions()\r\n        })\r\n        const state = reactive({\r\n            location: computed(()=> $store.state.location),\r\n            hasKey: computed(()=> $store.state.player.items.find(i => i.name == 'key')),\r\n            explored: computed(()=> $store.state.player.explored[$store.state.location]),\r\n            areaCompleted: computed(()=> state.explored.find(e => e == 'reward recieved')),\r\n            currentLocation: computed(()=> $store.state.player.currentLocation),\r\n            bgImg: computed(()=> $store.state.locationImgList.find(l => l.includes('area'+($store.state.location+1)+'.'))),\r\n            charImg: computed(()=> $store.state.player.characters.filter(c => c.hp > 0)[0].img),\r\n            tavernImg: $store.state.assetsImgList.find(m => m.includes('tavern2')),\r\n            chestImg: $store.state.assetsImgList.find(m => m.includes('chest')),\r\n        })\r\n        function setExploreOptions(){\r\n            let rowCol = $store.state.player.currentLocation.split('-')\r\n            setTimeout(()=>{\r\n                for(let i=-1; i <= 1; i++){\r\n                    if(i==0){\r\n                        $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2]}`).removeClass('disabled')\r\n                        continue\r\n                    }\r\n                    $(`#${rowCol[0]}-${+rowCol[1]+i}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]-i}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]+i}-${+rowCol[2]}`).removeClass('disabled')\r\n                }\r\n            }, 250)\r\n        }\r\n        watch(()=>([state.currentLocation]), ()=>{\r\n            $('.col').each(function(){\r\n                $(this).addClass('disabled')\r\n            })\r\n            setExploreOptions()\r\n        })\r\n        return state\r\n    },\r\n    methods: {\r\n       async explore(id){\r\n            const toast = useToast()\r\n            let explored = $store.state.player.explored[$store.state.location]\r\n            let rowCol = id.split('-')\r\n            if(rowCol[1] == 10 && rowCol[2] == 6 && !this.hasKey){\r\n                toast.warning('You dont have a key')\r\n                return\r\n            }\r\n            if(!explored.includes(id)){\r\n                explored.push(id)\r\n                $('#'+id).removeClass('bg-shadow')\r\n            }\r\n            $store.state.player.currentLocation = id\r\n            if(explored.length >= 59 && !this.hasKey && !this.areaCompleted){\r\n                // TODO can't just add 2 when higher lvl\r\n                $store.state.player.items.push(new Item({name: 'key', type: 'key'}))\r\n                toast.success('You found a key!')\r\n                router.push({name: 'battleField', params: {monsterLvl: $store.state.location+2, numMonsters: 1, boss: true}})\r\n            }\r\n            if(explored.length == 60 && !this.areaCompleted && rowCol[1] == 10 && rowCol[2] == 6 && this.hasKey){\r\n               await this.completeArea()\r\n               return\r\n            }\r\n            // Tavern\r\n            if(rowCol[1] == 5 && rowCol[2] == 3){\r\n                router.push({name: 'MainShop'})\r\n                return\r\n            }\r\n            this.getEncounter()\r\n        },\r\n        getEncounter(){\r\n            const toast = useToast()\r\n            let chance = Math.ceil(Math.random()*100)\r\n            let rowCol = $store.state.player.currentLocation.split('-')\r\n            if(chance > 35 || (rowCol[1] == 1 && rowCol[2] == 1)){\r\n                router.push({name: 'battleField'})\r\n            }else if(chance > 25){\r\n                //nothing\r\n            }else if(chance > 10){\r\n                let gold = Math.round(Math.random()*100)*($store.state.location+1)\r\n                $store.state.player.gold += gold\r\n                toast.success('You found '+gold+'Gold!', {timeout: 4000})\r\n            }else if(chance > 2){\r\n                let item = itemsService.findRandomItem()\r\n                $store.state.player.items.push(new Item(item))\r\n                toast.success('You found a '+item.name, {timeout: 4000})\r\n            }else{\r\n                let spellName = spellsService.findRandomLearnableSpell($store.state.selected)\r\n                $store.state.player.items.push(new Item({name: spellName, scroll: true, value: 1, effect: 'Learn spell', price: characterService.getAverageCharacterLvl()*250+500}))\r\n                toast.success('You found a '+spellName+' scroll', {timeout: 4000})\r\n            }\r\n        },\r\n        async completeArea(){\r\n            const toast = useToast()\r\n            let options = {gold: 'Wealth', power: 'Power', item: 'Treasure'}\r\n            let boon = await Notify.selectOptions(options, 'Choose your Reward!', 'Well done adventures! For completing this area you are granted a boon!', 'Confirm')\r\n            if(boon){\r\n                $store.state.player.items = $store.state.player.items.filter(i => i.name != 'key')\r\n                $store.state.player.explored[$store.state.location].push('reward recieved')\r\n            }\r\n            let reward\r\n            let chance = Math.ceil(Math.random()*40)+$store.state.location\r\n            switch(boon){\r\n                case 'gold':\r\n                    reward = Math.round(Math.random()*(4000*($store.state.location+1)))+1000\r\n                    $store.state.player.gold += reward\r\n                    toast.success('You recieved '+reward+' Gold')\r\n                break\r\n                case 'power':\r\n                    $store.state.player.characters.forEach(c => c.statBonus++)\r\n                    toast.success('Your party feels more powerful')\r\n                break\r\n                case 'item':\r\n                    if(chance < 15){\r\n                        reward = 'uc'\r\n                    }else if(chance < 35){\r\n                        reward = 'r'\r\n                    }else if(chance < 40){\r\n                        reward = 'vr'\r\n                    }else{\r\n                        reward = 'l'\r\n                    }\r\n                    reward = itemsService.findRandomItem(reward)\r\n                    $store.state.player.items.push(new Item(reward))\r\n                    toast.success('You recieved '+reward.name)\r\n                    if(await Notify.confirm('Next Area', 'You continue on your adventure to another area now that you have completed your mission here.', 'info', 'ok')){\r\n                        $store.state.location++\r\n                        this.explore($store.state.location+'-1-1')\r\n                    }\r\n                    break\r\n            }\r\n        },\r\n        findIfVisible(row, col){\r\n            let visible = false\r\n            if(this.explored.length == 0){\r\n                return row+col == 2\r\n            }\r\n            this.explored.forEach(id => {\r\n                let rowCol = id.split('-')\r\n                if(rowCol[1] == row && rowCol[2] == col){\r\n                    visible = true\r\n                    return\r\n                }\r\n                for(let i=-1; i <= 1; i++){\r\n                    if((+rowCol[2]+i == col && +rowCol[1] == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2]+i == col && +rowCol[1]+i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2] == col && +rowCol[1]+i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2]+i == col && +rowCol[1]-i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                }\r\n            })\r\n            return visible\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scope>\r\narea{\r\n  cursor: pointer;\r\n}\r\n.area-map{\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n}\r\n@media screen and (min-width: 992px) {\r\n    .area-map{\r\n      background-size: 84vw 100vh;\r\n  }\r\n}\r\n@media screen and (max-width: 992px) {\r\n  .area-map{\r\n    background-size: 100vw 100vh;\r\n  }\r\n}\r\n.col{\r\n    height: 10vh;\r\n}\r\n.col:hover{\r\n    cursor: pointer;\r\n    outline: 2px solid gold;\r\n}\r\n.bg-shadow{\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n.disabled{\r\n    pointer-events: none;\r\n}\r\n.char-icon{\r\n    max-height: 10vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}