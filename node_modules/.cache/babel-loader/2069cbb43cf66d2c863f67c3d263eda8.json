{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport { error, isPromise, warn } from '../../utils.js';\nimport * as dom from '../../dom/index.js';\nimport privateProps from '../../../privateProps.js';\nconst inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\nexport const renderInput = (instance, params) => {\n  const popup = dom.getPopup();\n  const innerParams = privateProps.innerParams.get(instance);\n  const rerender = !innerParams || params.input !== innerParams.input;\n  inputTypes.forEach(inputType => {\n    const inputClass = swalClasses[inputType];\n    const inputContainer = dom.getDirectChildByClass(popup, inputClass); // set attributes\n\n    setAttributes(inputType, params.inputAttributes); // set class\n\n    inputContainer.className = inputClass;\n\n    if (rerender) {\n      dom.hide(inputContainer);\n    }\n  });\n\n  if (params.input) {\n    if (rerender) {\n      showInput(params);\n    } // set custom class\n\n\n    setCustomClass(params);\n  }\n};\n\nconst showInput = params => {\n  if (!renderInputType[params.input]) {\n    return error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n  }\n\n  const inputContainer = getInputContainer(params.input);\n  const input = renderInputType[params.input](inputContainer, params);\n  dom.show(input); // input autofocus\n\n  setTimeout(() => {\n    dom.focusInput(input);\n  });\n};\n\nconst removeAttributes = input => {\n  for (let i = 0; i < input.attributes.length; i++) {\n    const attrName = input.attributes[i].name;\n\n    if (!['type', 'value', 'style'].includes(attrName)) {\n      input.removeAttribute(attrName);\n    }\n  }\n};\n\nconst setAttributes = (inputType, inputAttributes) => {\n  const input = dom.getInput(dom.getPopup(), inputType);\n\n  if (!input) {\n    return;\n  }\n\n  removeAttributes(input);\n\n  for (const attr in inputAttributes) {\n    input.setAttribute(attr, inputAttributes[attr]);\n  }\n};\n\nconst setCustomClass = params => {\n  const inputContainer = getInputContainer(params.input);\n\n  if (params.customClass) {\n    dom.addClass(inputContainer, params.customClass.input);\n  }\n};\n\nconst setInputPlaceholder = (input, params) => {\n  if (!input.placeholder || params.inputPlaceholder) {\n    input.placeholder = params.inputPlaceholder;\n  }\n};\n\nconst setInputLabel = (input, prependTo, params) => {\n  if (params.inputLabel) {\n    input.id = swalClasses.input;\n    const label = document.createElement('label');\n    const labelClass = swalClasses['input-label'];\n    label.setAttribute('for', input.id);\n    label.className = labelClass;\n    dom.addClass(label, params.customClass.inputLabel);\n    label.innerText = params.inputLabel;\n    prependTo.insertAdjacentElement('beforebegin', label);\n  }\n};\n\nconst getInputContainer = inputType => {\n  const inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;\n  return dom.getDirectChildByClass(dom.getPopup(), inputClass);\n};\n\nconst renderInputType = {};\n\nrenderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n  if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n    input.value = params.inputValue;\n  } else if (!isPromise(params.inputValue)) {\n    warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof params.inputValue}\"`);\n  }\n\n  setInputLabel(input, input, params);\n  setInputPlaceholder(input, params);\n  input.type = params.input;\n  return input;\n};\n\nrenderInputType.file = (input, params) => {\n  setInputLabel(input, input, params);\n  setInputPlaceholder(input, params);\n  return input;\n};\n\nrenderInputType.range = (range, params) => {\n  const rangeInput = range.querySelector('input');\n  const rangeOutput = range.querySelector('output');\n  rangeInput.value = params.inputValue;\n  rangeInput.type = params.input;\n  rangeOutput.value = params.inputValue;\n  setInputLabel(rangeInput, range, params);\n  return range;\n};\n\nrenderInputType.select = (select, params) => {\n  select.textContent = '';\n\n  if (params.inputPlaceholder) {\n    const placeholder = document.createElement('option');\n    dom.setInnerHtml(placeholder, params.inputPlaceholder);\n    placeholder.value = '';\n    placeholder.disabled = true;\n    placeholder.selected = true;\n    select.appendChild(placeholder);\n  }\n\n  setInputLabel(select, select, params);\n  return select;\n};\n\nrenderInputType.radio = radio => {\n  radio.textContent = '';\n  return radio;\n};\n\nrenderInputType.checkbox = (checkboxContainer, params) => {\n  /** @type {HTMLInputElement} */\n  const checkbox = dom.getInput(dom.getPopup(), 'checkbox');\n  checkbox.value = '1';\n  checkbox.id = swalClasses.checkbox;\n  checkbox.checked = Boolean(params.inputValue);\n  const label = checkboxContainer.querySelector('span');\n  dom.setInnerHtml(label, params.inputPlaceholder);\n  return checkboxContainer;\n};\n\nrenderInputType.textarea = (textarea, params) => {\n  textarea.value = params.inputValue;\n  setInputPlaceholder(textarea, params);\n  setInputLabel(textarea, textarea, params);\n\n  const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight); // https://github.com/sweetalert2/sweetalert2/issues/2291\n\n\n  setTimeout(() => {\n    // https://github.com/sweetalert2/sweetalert2/issues/1699\n    if ('MutationObserver' in window) {\n      const initialPopupWidth = parseInt(window.getComputedStyle(dom.getPopup()).width);\n\n      const textareaResizeHandler = () => {\n        const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n\n        if (textareaWidth > initialPopupWidth) {\n          dom.getPopup().style.width = `${textareaWidth}px`;\n        } else {\n          dom.getPopup().style.width = null;\n        }\n      };\n\n      new MutationObserver(textareaResizeHandler).observe(textarea, {\n        attributes: true,\n        attributeFilter: ['style']\n      });\n    }\n  });\n  return textarea;\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/dom/renderers/renderInput.js"],"names":["swalClasses","error","isPromise","warn","dom","privateProps","inputTypes","renderInput","instance","params","popup","getPopup","innerParams","get","rerender","input","forEach","inputType","inputClass","inputContainer","getDirectChildByClass","setAttributes","inputAttributes","className","hide","showInput","setCustomClass","renderInputType","getInputContainer","show","setTimeout","focusInput","removeAttributes","i","attributes","length","attrName","name","includes","removeAttribute","getInput","attr","setAttribute","customClass","addClass","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","id","label","document","createElement","labelClass","innerText","insertAdjacentElement","text","email","password","number","tel","url","inputValue","value","type","file","range","rangeInput","querySelector","rangeOutput","select","textContent","setInnerHtml","disabled","selected","appendChild","radio","checkbox","checkboxContainer","checked","Boolean","textarea","getMargin","el","parseInt","window","getComputedStyle","marginLeft","marginRight","initialPopupWidth","width","textareaResizeHandler","textareaWidth","offsetWidth","style","MutationObserver","observe","attributeFilter"],"mappings":"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","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport { error, isPromise, warn } from '../../utils.js'\nimport * as dom from '../../dom/index.js'\nimport privateProps from '../../../privateProps.js'\n\nconst inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea']\n\nexport const renderInput = (instance, params) => {\n  const popup = dom.getPopup()\n  const innerParams = privateProps.innerParams.get(instance)\n  const rerender = !innerParams || params.input !== innerParams.input\n\n  inputTypes.forEach((inputType) => {\n    const inputClass = swalClasses[inputType]\n    const inputContainer = dom.getDirectChildByClass(popup, inputClass)\n\n    // set attributes\n    setAttributes(inputType, params.inputAttributes)\n\n    // set class\n    inputContainer.className = inputClass\n\n    if (rerender) {\n      dom.hide(inputContainer)\n    }\n  })\n\n  if (params.input) {\n    if (rerender) {\n      showInput(params)\n    }\n    // set custom class\n    setCustomClass(params)\n  }\n}\n\nconst showInput = (params) => {\n  if (!renderInputType[params.input]) {\n    return error(\n      `Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`\n    )\n  }\n\n  const inputContainer = getInputContainer(params.input)\n  const input = renderInputType[params.input](inputContainer, params)\n  dom.show(input)\n\n  // input autofocus\n  setTimeout(() => {\n    dom.focusInput(input)\n  })\n}\n\nconst removeAttributes = (input) => {\n  for (let i = 0; i < input.attributes.length; i++) {\n    const attrName = input.attributes[i].name\n    if (!['type', 'value', 'style'].includes(attrName)) {\n      input.removeAttribute(attrName)\n    }\n  }\n}\n\nconst setAttributes = (inputType, inputAttributes) => {\n  const input = dom.getInput(dom.getPopup(), inputType)\n  if (!input) {\n    return\n  }\n\n  removeAttributes(input)\n\n  for (const attr in inputAttributes) {\n    input.setAttribute(attr, inputAttributes[attr])\n  }\n}\n\nconst setCustomClass = (params) => {\n  const inputContainer = getInputContainer(params.input)\n  if (params.customClass) {\n    dom.addClass(inputContainer, params.customClass.input)\n  }\n}\n\nconst setInputPlaceholder = (input, params) => {\n  if (!input.placeholder || params.inputPlaceholder) {\n    input.placeholder = params.inputPlaceholder\n  }\n}\n\nconst setInputLabel = (input, prependTo, params) => {\n  if (params.inputLabel) {\n    input.id = swalClasses.input\n    const label = document.createElement('label')\n    const labelClass = swalClasses['input-label']\n    label.setAttribute('for', input.id)\n    label.className = labelClass\n    dom.addClass(label, params.customClass.inputLabel)\n    label.innerText = params.inputLabel\n    prependTo.insertAdjacentElement('beforebegin', label)\n  }\n}\n\nconst getInputContainer = (inputType) => {\n  const inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input\n  return dom.getDirectChildByClass(dom.getPopup(), inputClass)\n}\n\nconst renderInputType = {}\n\nrenderInputType.text =\n  renderInputType.email =\n  renderInputType.password =\n  renderInputType.number =\n  renderInputType.tel =\n  renderInputType.url =\n    (input, params) => {\n      if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n        input.value = params.inputValue\n      } else if (!isPromise(params.inputValue)) {\n        warn(\n          `Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof params.inputValue}\"`\n        )\n      }\n      setInputLabel(input, input, params)\n      setInputPlaceholder(input, params)\n      input.type = params.input\n      return input\n    }\n\nrenderInputType.file = (input, params) => {\n  setInputLabel(input, input, params)\n  setInputPlaceholder(input, params)\n  return input\n}\n\nrenderInputType.range = (range, params) => {\n  const rangeInput = range.querySelector('input')\n  const rangeOutput = range.querySelector('output')\n  rangeInput.value = params.inputValue\n  rangeInput.type = params.input\n  rangeOutput.value = params.inputValue\n  setInputLabel(rangeInput, range, params)\n  return range\n}\n\nrenderInputType.select = (select, params) => {\n  select.textContent = ''\n  if (params.inputPlaceholder) {\n    const placeholder = document.createElement('option')\n    dom.setInnerHtml(placeholder, params.inputPlaceholder)\n    placeholder.value = ''\n    placeholder.disabled = true\n    placeholder.selected = true\n    select.appendChild(placeholder)\n  }\n  setInputLabel(select, select, params)\n  return select\n}\n\nrenderInputType.radio = (radio) => {\n  radio.textContent = ''\n  return radio\n}\n\nrenderInputType.checkbox = (checkboxContainer, params) => {\n  /** @type {HTMLInputElement} */\n  const checkbox = dom.getInput(dom.getPopup(), 'checkbox')\n  checkbox.value = '1'\n  checkbox.id = swalClasses.checkbox\n  checkbox.checked = Boolean(params.inputValue)\n  const label = checkboxContainer.querySelector('span')\n  dom.setInnerHtml(label, params.inputPlaceholder)\n  return checkboxContainer\n}\n\nrenderInputType.textarea = (textarea, params) => {\n  textarea.value = params.inputValue\n  setInputPlaceholder(textarea, params)\n  setInputLabel(textarea, textarea, params)\n\n  const getMargin = (el) =>\n    parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight)\n\n  // https://github.com/sweetalert2/sweetalert2/issues/2291\n  setTimeout(() => {\n    // https://github.com/sweetalert2/sweetalert2/issues/1699\n    if ('MutationObserver' in window) {\n      const initialPopupWidth = parseInt(window.getComputedStyle(dom.getPopup()).width)\n      const textareaResizeHandler = () => {\n        const textareaWidth = textarea.offsetWidth + getMargin(textarea)\n        if (textareaWidth > initialPopupWidth) {\n          dom.getPopup().style.width = `${textareaWidth}px`\n        } else {\n          dom.getPopup().style.width = null\n        }\n      }\n      new MutationObserver(textareaResizeHandler).observe(textarea, {\n        attributes: true,\n        attributeFilter: ['style'],\n      })\n    }\n  })\n\n  return textarea\n}\n"]},"metadata":{},"sourceType":"module"}