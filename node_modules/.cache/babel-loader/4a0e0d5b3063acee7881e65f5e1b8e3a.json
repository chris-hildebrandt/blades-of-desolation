{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { capitalizeFirstLetter } from '../../utils.js';\nexport const renderActions = (instance, params) => {\n  const actions = dom.getActions();\n  const loader = dom.getLoader(); // Actions (buttons) wrapper\n\n  if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n    dom.hide(actions);\n  } else {\n    dom.show(actions);\n  } // Custom class\n\n\n  dom.applyCustomClass(actions, params, 'actions'); // Render all the buttons\n\n  renderButtons(actions, loader, params); // Loader\n\n  dom.setInnerHtml(loader, params.loaderHtml);\n  dom.applyCustomClass(loader, params, 'loader');\n};\n\nfunction renderButtons(actions, loader, params) {\n  const confirmButton = dom.getConfirmButton();\n  const denyButton = dom.getDenyButton();\n  const cancelButton = dom.getCancelButton(); // Render buttons\n\n  renderButton(confirmButton, 'confirm', params);\n  renderButton(denyButton, 'deny', params);\n  renderButton(cancelButton, 'cancel', params);\n  handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n\n  if (params.reverseButtons) {\n    if (params.toast) {\n      actions.insertBefore(cancelButton, confirmButton);\n      actions.insertBefore(denyButton, confirmButton);\n    } else {\n      actions.insertBefore(cancelButton, loader);\n      actions.insertBefore(denyButton, loader);\n      actions.insertBefore(confirmButton, loader);\n    }\n  }\n}\n\nfunction handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n  if (!params.buttonsStyling) {\n    return dom.removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n  }\n\n  dom.addClass([confirmButton, denyButton, cancelButton], swalClasses.styled); // Buttons background colors\n\n  if (params.confirmButtonColor) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor;\n    dom.addClass(confirmButton, swalClasses['default-outline']);\n  }\n\n  if (params.denyButtonColor) {\n    denyButton.style.backgroundColor = params.denyButtonColor;\n    dom.addClass(denyButton, swalClasses['default-outline']);\n  }\n\n  if (params.cancelButtonColor) {\n    cancelButton.style.backgroundColor = params.cancelButtonColor;\n    dom.addClass(cancelButton, swalClasses['default-outline']);\n  }\n}\n\nfunction renderButton(button, buttonType, params) {\n  dom.toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n  dom.setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n\n  button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n  // Add buttons custom classes\n\n  button.className = swalClasses[buttonType];\n  dom.applyCustomClass(button, params, `${buttonType}Button`);\n  dom.addClass(button, params[`${buttonType}ButtonClass`]);\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/dom/renderers/renderActions.js"],"names":["swalClasses","dom","capitalizeFirstLetter","renderActions","instance","params","actions","getActions","loader","getLoader","showConfirmButton","showDenyButton","showCancelButton","hide","show","applyCustomClass","renderButtons","setInnerHtml","loaderHtml","confirmButton","getConfirmButton","denyButton","getDenyButton","cancelButton","getCancelButton","renderButton","handleButtonsStyling","reverseButtons","toast","insertBefore","buttonsStyling","removeClass","styled","addClass","confirmButtonColor","style","backgroundColor","denyButtonColor","cancelButtonColor","button","buttonType","toggle","setAttribute","className"],"mappings":"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","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { capitalizeFirstLetter } from '../../utils.js'\n\nexport const renderActions = (instance, params) => {\n  const actions = dom.getActions()\n  const loader = dom.getLoader()\n\n  // Actions (buttons) wrapper\n  if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n    dom.hide(actions)\n  } else {\n    dom.show(actions)\n  }\n\n  // Custom class\n  dom.applyCustomClass(actions, params, 'actions')\n\n  // Render all the buttons\n  renderButtons(actions, loader, params)\n\n  // Loader\n  dom.setInnerHtml(loader, params.loaderHtml)\n  dom.applyCustomClass(loader, params, 'loader')\n}\n\nfunction renderButtons(actions, loader, params) {\n  const confirmButton = dom.getConfirmButton()\n  const denyButton = dom.getDenyButton()\n  const cancelButton = dom.getCancelButton()\n\n  // Render buttons\n  renderButton(confirmButton, 'confirm', params)\n  renderButton(denyButton, 'deny', params)\n  renderButton(cancelButton, 'cancel', params)\n  handleButtonsStyling(confirmButton, denyButton, cancelButton, params)\n\n  if (params.reverseButtons) {\n    if (params.toast) {\n      actions.insertBefore(cancelButton, confirmButton)\n      actions.insertBefore(denyButton, confirmButton)\n    } else {\n      actions.insertBefore(cancelButton, loader)\n      actions.insertBefore(denyButton, loader)\n      actions.insertBefore(confirmButton, loader)\n    }\n  }\n}\n\nfunction handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n  if (!params.buttonsStyling) {\n    return dom.removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled)\n  }\n\n  dom.addClass([confirmButton, denyButton, cancelButton], swalClasses.styled)\n\n  // Buttons background colors\n  if (params.confirmButtonColor) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor\n    dom.addClass(confirmButton, swalClasses['default-outline'])\n  }\n  if (params.denyButtonColor) {\n    denyButton.style.backgroundColor = params.denyButtonColor\n    dom.addClass(denyButton, swalClasses['default-outline'])\n  }\n  if (params.cancelButtonColor) {\n    cancelButton.style.backgroundColor = params.cancelButtonColor\n    dom.addClass(cancelButton, swalClasses['default-outline'])\n  }\n}\n\nfunction renderButton(button, buttonType, params) {\n  dom.toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block')\n  dom.setInnerHtml(button, params[`${buttonType}ButtonText`]) // Set caption text\n  button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]) // ARIA label\n\n  // Add buttons custom classes\n  button.className = swalClasses[buttonType]\n  dom.applyCustomClass(button, params, `${buttonType}Button`)\n  dom.addClass(button, params[`${buttonType}ButtonClass`])\n}\n"]},"metadata":{},"sourceType":"module"}