{"ast":null,"code":"import { reactive } from \"@vue/reactivity\";\nimport { computed, onMounted, watch } from \"@vue/runtime-core\";\nimport $store from \"@/store/index\";\nimport $ from \"jquery\";\nimport { characterService } from \"@/services/CharacterService\";\nimport { spellsService } from \"@/services/SpellsService\";\nimport { monstersService } from \"@/services/MonstersService\";\nimport { abilitiesService } from \"@/services/AbilitiesService\";\nimport { useToast } from \"vue-toastification\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: 'BattleOptions',\n\n  setup() {\n    onMounted(() => {\n      $(window).on('keypress', function (e) {\n        if (e.which == 32) {\n          e.preventDefault();\n          $('#castSpell').trigger('click');\n        }\n      });\n    });\n    const state = reactive({\n      selected: computed(() => $store.state.selected),\n      selectedSpellIndex: 0,\n      selectedSpell: computed(() => $store.state.selected.spells[state.selectedSpellIndex]),\n      selectedAbility: {\n        name: 'select ability',\n        level: null\n      },\n      route: useRoute()\n    });\n    watch(() => [state.selected], () => {\n      state.selectedSpellIndex = 0;\n    });\n    return state;\n  },\n\n  methods: {\n    waitAction() {\n      this.selected.actions = 0;\n      characterService.autoSelect();\n    },\n\n    fleeAction() {\n      if (this.selected.actions > 0) {\n        this.selected.actions = 0;\n        characterService.attemptToFlee(this.selected);\n        characterService.autoSelect();\n      }\n    },\n\n    selectSpell(spellIndex) {\n      this.selectedSpellIndex = spellIndex;\n    },\n\n    selectAbility(ability) {\n      this.selectedAbility = ability;\n    },\n\n    useAbility(ability, selected) {\n      abilitiesService.useAbility(ability, selected);\n    },\n\n    async castSpell() {\n      let target = null;\n\n      if (this.selected.hp <= 0) {\n        return;\n      }\n\n      if (!this.selectedSpell.areaEffect) {\n        $('[id^=hit]').each(function () {\n          let id = $(this).prop('id').replace(/[^0-9]+/, '');\n          $('#charImg' + id).addClass('selectable');\n          $('#monster' + id).addClass('selectable click');\n        });\n        setTimeout(() => document.addEventListener('click', this.eventListenerSpell, {\n          once: true,\n          capture: true\n        }), 100);\n      } else {\n        target = 'enemies';\n        this.selected.magic -= this.selectedSpell.level;\n        this.selected.actions -= this.selectedSpell.speed;\n        spellsService.castSpell(this.selectedSpell, target);\n        characterService.autoSelect();\n        return;\n      }\n    },\n\n    eventListenerSpell(event) {\n      const toast = useToast();\n      event.stopImmediatePropagation();\n      let target = monstersService.getMonsterById($(event.target).prop('id').replace(/[^0-9]+/, ''));\n\n      if (!target) {\n        target = characterService.getCharacterById($(event.target).prop('id').replace(/[^0-9]+/, ''));\n      }\n\n      $('[id^=hit]').each(function () {\n        let id = $(this).prop('id').replace(/[^0-9]+/, '');\n        $('#charImg' + id).removeClass('selectable');\n        $('#monster' + id).removeClass('selectable click');\n      });\n\n      if (!target) {\n        toast.warning('Cant cast spell without proper target.');\n        return;\n      }\n\n      this.selected.magic -= this.selectedSpell.level;\n      this.selected.actions -= this.selectedSpell.speed;\n      spellsService.castSpell(this.selectedSpell, target);\n      characterService.autoSelect();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","computed","onMounted","watch","$store","$","characterService","spellsService","monstersService","abilitiesService","useToast","useRoute","name","setup","window","on","e","which","preventDefault","trigger","state","selected","selectedSpellIndex","selectedSpell","spells","selectedAbility","level","route","methods","waitAction","actions","autoSelect","fleeAction","attemptToFlee","selectSpell","spellIndex","selectAbility","ability","useAbility","castSpell","target","hp","areaEffect","each","id","prop","replace","addClass","setTimeout","document","addEventListener","eventListenerSpell","once","capture","magic","speed","event","toast","stopImmediatePropagation","getMonsterById","getCharacterById","removeClass","warning"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\components\\BattleOptions.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"selected\">\r\n    <div class=\"header m-3 border-bottom\">\r\n      <div class=\"title container\">\r\n        {{selected.name}}({{selected.actions}})\r\n      </div>\r\n    </div>\r\n    <div class=\"body container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"btn-group mb-3\" v-if=\"selected.spells.length > 0\">\r\n          <button id=\"castSpell\" type=\"button\" class=\"btn btn-danger\" @click=\"castSpell\" :disabled=\"selected.actions < 1 || (selected.magic < 1 && selectedSpell.level > 0)\">{{selectedSpell ? selectedSpell.name : selectSpell(selected.spells[0])}} lvl-{{selectedSpell ? selectedSpell.level : selectSpell(selected.spells[0])}}</button>\r\n          <button type=\"button\" class=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <span class=\"sr-only\">Toggle Dropdown</span>\r\n          </button>\r\n          <div class=\"dropdown-menu\">\r\n              <button class=\"dropdown-item\" v-for=\"(spell, index) in selected.spells\" :key=\"spell.id\" @click=\"selectSpell(index)\">{{spell.name}} lvl-{{spell.level}}</button>\r\n          </div>\r\n          <sub>(SPACEBAR)</sub>\r\n        </div>\r\n      </div>\r\n      <div class=\"row justify-content-center mt-3\">\r\n        <div class=\"btn-group\" v-if=\"selected.abilities.length > 0\">\r\n          <button v-for=\"ability in selected.abilities\" :key=\"ability.name\" type=\"button\" class=\"btn btn-danger\" @click=\"useAbility(ability, selected); ability.uses--\" :disabled=\"ability.uses <= 0\">{{ability.name}} ({{ability.uses}})</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row justify-content-center mt-3\">\r\n        <button class=\"btn btn-warning mx-2\" @click=\"waitAction\" :disabled=\"selected.actions < 1\">Wait</button>\r\n        <button class=\"btn btn-secondary\" @click=\"fleeAction\" :disabled=\"selected.actions < 1\" v-if=\"!route.params.boss\">Flee</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport { computed, onMounted, watch } from \"@vue/runtime-core\"\r\nimport $store from \"@/store/index\"\r\nimport $ from \"jquery\"\r\nimport { characterService } from \"@/services/CharacterService\"\r\nimport { spellsService } from \"@/services/SpellsService\"\r\nimport { monstersService } from \"@/services/MonstersService\"\r\nimport { abilitiesService } from \"@/services/AbilitiesService\"\r\nimport { useToast } from \"vue-toastification\"\r\nimport { useRoute } from \"vue-router\"\r\n\r\nexport default {\r\n  name: 'BattleOptions',\r\n  setup(){\r\n    onMounted(()=>{\r\n      $(window).on('keypress', function(e){\r\n        if(e.which == 32){\r\n          e.preventDefault();\r\n          $('#castSpell').trigger('click')\r\n        }\r\n      })\r\n    })\r\n    const state = reactive({\r\n      selected: computed(() => $store.state.selected),\r\n      selectedSpellIndex: 0,\r\n      selectedSpell: computed(()=> $store.state.selected.spells[state.selectedSpellIndex]),\r\n      selectedAbility: {name: 'select ability', level: null},\r\n      route: useRoute(),\r\n    })\r\n    watch(()=>([state.selected]), ()=>{\r\n      state.selectedSpellIndex = 0\r\n    })\r\n    return state\r\n  },\r\n  methods: {\r\n    waitAction(){\r\n      this.selected.actions = 0\r\n      characterService.autoSelect()\r\n    },\r\n    fleeAction(){\r\n      if(this.selected.actions > 0){\r\n        this.selected.actions = 0\r\n        characterService.attemptToFlee(this.selected)\r\n        characterService.autoSelect()\r\n      }\r\n    },\r\n    selectSpell(spellIndex){\r\n      this.selectedSpellIndex = spellIndex\r\n    },\r\n    selectAbility(ability){\r\n      this.selectedAbility = ability\r\n    },\r\n    useAbility(ability, selected){\r\n      abilitiesService.useAbility(ability, selected)\r\n    },\r\n    async castSpell(){\r\n      let target = null\r\n      if(this.selected.hp <= 0){return}\r\n      if(!this.selectedSpell.areaEffect){\r\n        $('[id^=hit]').each(function(){\r\n          let id = $(this).prop('id').replace(/[^0-9]+/, '')\r\n          $('#charImg'+id).addClass('selectable')\r\n          $('#monster'+id).addClass('selectable click')\r\n        })\r\n        setTimeout(()=>document.addEventListener('click', this.eventListenerSpell, {once: true, capture: true}), 100)\r\n      }else{\r\n        target = 'enemies'\r\n        this.selected.magic -= this.selectedSpell.level\r\n        this.selected.actions -= this.selectedSpell.speed\r\n        spellsService.castSpell(this.selectedSpell, target)\r\n        characterService.autoSelect()\r\n        return\r\n      }\r\n    },\r\n    eventListenerSpell(event){\r\n      const toast = useToast()\r\n      event.stopImmediatePropagation()\r\n      let target = monstersService.getMonsterById($(event.target).prop('id').replace(/[^0-9]+/, ''))\r\n      if(!target){\r\n        target = characterService.getCharacterById($(event.target).prop('id').replace(/[^0-9]+/, ''))\r\n      }\r\n      $('[id^=hit]').each(function(){\r\n        let id = $(this).prop('id').replace(/[^0-9]+/, '')\r\n        $('#charImg'+id).removeClass('selectable')\r\n        $('#monster'+id).removeClass('selectable click')\r\n      })\r\n      if(!target){\r\n        toast.warning('Cant cast spell without proper target.')\r\n        return\r\n      }\r\n      this.selected.magic -= this.selectedSpell.level\r\n      this.selected.actions -= this.selectedSpell.speed\r\n      spellsService.castSpell(this.selectedSpell, target)\r\n      characterService.autoSelect()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scope>\r\nsub{\r\n  position: absolute;\r\n  left: 50px;\r\n  top: 45px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}