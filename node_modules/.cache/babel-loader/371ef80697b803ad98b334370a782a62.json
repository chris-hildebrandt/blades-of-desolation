{"ast":null,"code":"export default class Timer {\n  constructor(callback, delay) {\n    this.callback = callback;\n    this.remaining = delay;\n    this.running = false;\n    this.start();\n  }\n\n  start() {\n    if (!this.running) {\n      this.running = true;\n      this.started = new Date();\n      this.id = setTimeout(this.callback, this.remaining);\n    }\n\n    return this.remaining;\n  }\n\n  stop() {\n    if (this.running) {\n      this.running = false;\n      clearTimeout(this.id);\n      this.remaining -= new Date().getTime() - this.started.getTime();\n    }\n\n    return this.remaining;\n  }\n\n  increase(n) {\n    const running = this.running;\n\n    if (running) {\n      this.stop();\n    }\n\n    this.remaining += n;\n\n    if (running) {\n      this.start();\n    }\n\n    return this.remaining;\n  }\n\n  getTimerLeft() {\n    if (this.running) {\n      this.stop();\n      this.start();\n    }\n\n    return this.remaining;\n  }\n\n  isRunning() {\n    return this.running;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/utils/Timer.js"],"names":["Timer","constructor","callback","delay","remaining","running","start","started","Date","id","setTimeout","stop","clearTimeout","getTime","increase","n","getTimerLeft","isRunning"],"mappings":"AAAA,eAAe,MAAMA,KAAN,CAAY;AACzBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;AAC3B,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKE,SAAL,GAAiBD,KAAjB;AACA,SAAKE,OAAL,GAAe,KAAf;AAEA,SAAKC,KAAL;AACD;;AAEDA,EAAAA,KAAK,GAAG;AACN,QAAI,CAAC,KAAKD,OAAV,EAAmB;AACjB,WAAKA,OAAL,GAAe,IAAf;AACA,WAAKE,OAAL,GAAe,IAAIC,IAAJ,EAAf;AACA,WAAKC,EAAL,GAAUC,UAAU,CAAC,KAAKR,QAAN,EAAgB,KAAKE,SAArB,CAApB;AACD;;AACD,WAAO,KAAKA,SAAZ;AACD;;AAEDO,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKN,OAAT,EAAkB;AAChB,WAAKA,OAAL,GAAe,KAAf;AACAO,MAAAA,YAAY,CAAC,KAAKH,EAAN,CAAZ;AACA,WAAKL,SAAL,IAAkB,IAAII,IAAJ,GAAWK,OAAX,KAAuB,KAAKN,OAAL,CAAaM,OAAb,EAAzC;AACD;;AACD,WAAO,KAAKT,SAAZ;AACD;;AAEDU,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACV,UAAMV,OAAO,GAAG,KAAKA,OAArB;;AACA,QAAIA,OAAJ,EAAa;AACX,WAAKM,IAAL;AACD;;AACD,SAAKP,SAAL,IAAkBW,CAAlB;;AACA,QAAIV,OAAJ,EAAa;AACX,WAAKC,KAAL;AACD;;AACD,WAAO,KAAKF,SAAZ;AACD;;AAEDY,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKX,OAAT,EAAkB;AAChB,WAAKM,IAAL;AACA,WAAKL,KAAL;AACD;;AACD,WAAO,KAAKF,SAAZ;AACD;;AAEDa,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKZ,OAAZ;AACD;;AAjDwB","sourcesContent":["export default class Timer {\n  constructor(callback, delay) {\n    this.callback = callback\n    this.remaining = delay\n    this.running = false\n\n    this.start()\n  }\n\n  start() {\n    if (!this.running) {\n      this.running = true\n      this.started = new Date()\n      this.id = setTimeout(this.callback, this.remaining)\n    }\n    return this.remaining\n  }\n\n  stop() {\n    if (this.running) {\n      this.running = false\n      clearTimeout(this.id)\n      this.remaining -= new Date().getTime() - this.started.getTime()\n    }\n    return this.remaining\n  }\n\n  increase(n) {\n    const running = this.running\n    if (running) {\n      this.stop()\n    }\n    this.remaining += n\n    if (running) {\n      this.start()\n    }\n    return this.remaining\n  }\n\n  getTimerLeft() {\n    if (this.running) {\n      this.stop()\n      this.start()\n    }\n    return this.remaining\n  }\n\n  isRunning() {\n    return this.running\n  }\n}\n"]},"metadata":{},"sourceType":"module"}