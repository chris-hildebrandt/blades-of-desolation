{"ast":null,"code":"import EnemyMonster from '@/components/Monster';\nimport CombatCharacter from '@/components/CombatCharacter';\nimport LootMonster from '@/components/LootMonster';\nimport { reactive } from \"@vue/reactivity\";\nimport $store from '@/store/index.js';\nimport { computed, onMounted } from \"@vue/runtime-core\";\nimport { gameService } from \"@/services/GameService\";\nimport router from \"@/router\";\nimport { characterService } from \"@/services/CharacterService\";\nimport { useToast } from \"vue-toastification\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: 'BattleField',\n  components: {\n    EnemyMonster,\n    CombatCharacter,\n    LootMonster\n  },\n  watch: {\n    charactersWithActions: function () {\n      if (this.charactersWithActions < 1 && this.characters.length > 0) {\n        characterService.endPhase();\n      }\n    },\n    timer: function () {\n      if (this.timer <= 0 && this.monstersWithHp > 0) {\n        characterService.endPhase();\n      }\n    },\n    charactersWithHp: function () {\n      const toast = useToast();\n\n      if (this.characters.length < 1) {\n        router.push({\n          name: 'MapLocation'\n        });\n        toast.success('You fled from battle');\n      } else if (this.charactersWithHp < 1) {\n        router.push({\n          name: 'CharacterForm'\n        });\n        toast.error('Your party is dead, revive or start over');\n      }\n    },\n    monstersWithHp: function () {\n      const toast = useToast();\n\n      if (this.monstersWithHp < 1 && this.charactersWithHp > 0) {\n        clearInterval($store.state.timerInterval);\n        $store.state.timer = 10000 * $store.state.player.characters.length;\n        gameService.victory();\n        toast.success('Victory!');\n      }\n    }\n  },\n\n  setup() {\n    onMounted(() => {\n      let route = useRoute();\n      gameService.spawnMonsters(route.params.monsterLvl, route.params.numMonsters);\n      characterService.enterBattle();\n      gameService.setTimer();\n    });\n    const state = reactive({\n      monsters: computed(() => $store.state.combatMonsters),\n      characters: computed(() => $store.state.player.characters.filter(c => c.inBattle)),\n      monstersWithHp: computed(() => state.monsters.filter(m => m.hp > 0).length),\n      charactersWithActions: computed(() => state.characters.filter(c => c.actions > 0 && c.hp > 0).length),\n      charactersWithHp: computed(() => state.characters.filter(c => c.hp > 0).length),\n      bgImg: computed(() => $store.state.locationImgList.find(l => l.includes('lvl' + ($store.state.location + 1) + '-bg'))),\n      timer: computed(() => $store.state.timer)\n    });\n    return state;\n  },\n\n  methods: {\n    adventureOn() {\n      router.push({\n        name: 'AreaLocation'\n      });\n    }\n\n  },\n\n  beforeRouteLeave() {\n    const toast = useToast();\n\n    if (this.charactersWithHp > 0) {\n      if (this.monstersWithHp > 0) {\n        toast.warning('Can\\'t flee from battle.');\n        return false;\n      }\n    }\n\n    this.$store.commit('bringOutYourDead');\n  }\n\n};","map":{"version":3,"mappings":"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","names":["EnemyMonster","CombatCharacter","LootMonster","reactive","$store","computed","onMounted","gameService","router","characterService","useToast","useRoute","name","components","watch","charactersWithActions","characters","length","endPhase","timer","monstersWithHp","charactersWithHp","toast","push","success","error","clearInterval","state","timerInterval","player","victory","setup","route","spawnMonsters","params","monsterLvl","numMonsters","enterBattle","setTimer","monsters","combatMonsters","filter","c","inBattle","m","hp","actions","bgImg","locationImgList","find","l","includes","location","methods","adventureOn","beforeRouteLeave","warning","commit"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\views\\BattleField.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center align-items-center h-50 bg-battle-img\" :style=\"'background-image: url('+bgImg+')'\">\r\n      <div class=\"col-4 col-md-2\" v-for=\"monster in monsters\" :key=\"monster.id\">\r\n        <div class=\"position-absolute hit\" :id=\"'hit'+monster.id\"></div>\r\n        <div v-if=\"monstersWithHp < 1\">\r\n          <LootMonster :monster=\"monster\" />\r\n        </div>\r\n        <div v-else>\r\n          <EnemyMonster :monster=\"monster\" />\r\n        </div>\r\n      </div>\r\n      <div v-if=\"monstersWithHp < 1\">\r\n        <button class=\"btn btn-warning\" @click=\"adventureOn\">Adventure On!</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row justify-content-center h-50 bg-img\" >\r\n      <div class=\"col-4 col-md-2\" v-for=\"character in characters\" :key=\"character.id\">\r\n        <div v-if=\"character.inBattle\">\r\n          <CombatCharacter :character=\"character\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EnemyMonster from '@/components/Monster'\r\nimport CombatCharacter from '@/components/CombatCharacter'\r\nimport LootMonster from '@/components/LootMonster'\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport $store from '@/store/index.js'\r\nimport { computed, onMounted } from \"@vue/runtime-core\"\r\nimport { gameService } from \"@/services/GameService\"\r\nimport router from \"@/router\"\r\nimport { characterService } from \"@/services/CharacterService\"\r\nimport { useToast } from \"vue-toastification\"\r\nimport { useRoute } from \"vue-router\"\r\n\r\n\r\nexport default {\r\n  name: 'BattleField',\r\n  components: {\r\n    EnemyMonster, CombatCharacter, LootMonster\r\n  },\r\n  watch: {\r\n    charactersWithActions: function(){\r\n      if(this.charactersWithActions < 1 && this.characters.length > 0){\r\n        characterService.endPhase()\r\n      }\r\n    },\r\n    timer: function(){\r\n      if(this.timer <= 0 && this.monstersWithHp > 0){\r\n        characterService.endPhase()\r\n      }\r\n    },\r\n    charactersWithHp: function(){\r\n      const toast = useToast()\r\n      if(this.characters.length < 1){\r\n        router.push({name: 'MapLocation'})\r\n        toast.success('You fled from battle')\r\n      }else if(this.charactersWithHp < 1){\r\n        router.push({name: 'CharacterForm'})\r\n        toast.error('Your party is dead, revive or start over')\r\n      }\r\n    },\r\n    monstersWithHp: function(){\r\n      const toast = useToast()\r\n      if(this.monstersWithHp < 1 && this.charactersWithHp > 0){\r\n        clearInterval($store.state.timerInterval)\r\n        $store.state.timer = 10000*$store.state.player.characters.length\r\n        gameService.victory()\r\n        toast.success('Victory!')\r\n      }\r\n    }\r\n  },\r\n  setup(){\r\n    onMounted(()=>{\r\n      let route = useRoute()\r\n      gameService.spawnMonsters(route.params.monsterLvl, route.params.numMonsters)\r\n      characterService.enterBattle()\r\n      gameService.setTimer()\r\n    })\r\n    const state = reactive({\r\n      monsters: computed(()=> $store.state.combatMonsters),\r\n      characters: computed(()=> $store.state.player.characters.filter(c => c.inBattle)),\r\n      monstersWithHp: computed(()=> state.monsters.filter(m => m.hp > 0).length),\r\n      charactersWithActions: computed(()=> state.characters.filter(c => c.actions > 0 && c.hp > 0 ).length),\r\n      charactersWithHp: computed(()=> state.characters.filter(c => c.hp > 0).length),\r\n      bgImg: computed(()=> $store.state.locationImgList.find(l => l.includes('lvl'+($store.state.location+1)+'-bg'))),\r\n      timer: computed(()=> $store.state.timer),\r\n    })\r\n    return state\r\n  },\r\n  methods:{\r\n    adventureOn(){\r\n      router.push({name: 'AreaLocation'})\r\n    }\r\n  },\r\n    beforeRouteLeave(){\r\n      const toast = useToast()\r\n      if(this.charactersWithHp > 0){\r\n        if(this.monstersWithHp > 0){\r\n          toast.warning('Can\\'t flee from battle.')\r\n          return false\r\n        }\r\n      }\r\n        this.$store.commit('bringOutYourDead')\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.vh-75{\r\n  height: 75vh;\r\n}\r\n.bg-battle-img{\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position-y: bottom;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}