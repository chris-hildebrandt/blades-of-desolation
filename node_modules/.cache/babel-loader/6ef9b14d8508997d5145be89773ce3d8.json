{"ast":null,"code":"let bodyClickListenerAdded = false;\nconst clickHandlers = {};\nexport function bindClickHandler(attr = 'data-swal-template') {\n  clickHandlers[attr] = this;\n\n  if (!bodyClickListenerAdded) {\n    document.body.addEventListener('click', bodyClickListener);\n    bodyClickListenerAdded = true;\n  }\n}\n\nconst bodyClickListener = event => {\n  for (let el = event.target; el && el !== document; el = el.parentNode) {\n    for (const attr in clickHandlers) {\n      const template = el.getAttribute(attr);\n\n      if (template) {\n        clickHandlers[attr].fire({\n          template\n        });\n        return;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/staticMethods/bindClickHandler.js"],"names":["bodyClickListenerAdded","clickHandlers","bindClickHandler","attr","document","body","addEventListener","bodyClickListener","event","el","target","parentNode","template","getAttribute","fire"],"mappings":"AAAA,IAAIA,sBAAsB,GAAG,KAA7B;AACA,MAAMC,aAAa,GAAG,EAAtB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAAI,GAAG,oBAAjC,EAAuD;AAC5DF,EAAAA,aAAa,CAACE,IAAD,CAAb,GAAsB,IAAtB;;AAEA,MAAI,CAACH,sBAAL,EAA6B;AAC3BI,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCC,iBAAxC;AACAP,IAAAA,sBAAsB,GAAG,IAAzB;AACD;AACF;;AAED,MAAMO,iBAAiB,GAAIC,KAAD,IAAW;AACnC,OAAK,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAApB,EAA4BD,EAAE,IAAIA,EAAE,KAAKL,QAAzC,EAAmDK,EAAE,GAAGA,EAAE,CAACE,UAA3D,EAAuE;AACrE,SAAK,MAAMR,IAAX,IAAmBF,aAAnB,EAAkC;AAChC,YAAMW,QAAQ,GAAGH,EAAE,CAACI,YAAH,CAAgBV,IAAhB,CAAjB;;AACA,UAAIS,QAAJ,EAAc;AACZX,QAAAA,aAAa,CAACE,IAAD,CAAb,CAAoBW,IAApB,CAAyB;AAAEF,UAAAA;AAAF,SAAzB;AACA;AACD;AACF;AACF;AACF,CAVD","sourcesContent":["let bodyClickListenerAdded = false\nconst clickHandlers = {}\n\nexport function bindClickHandler(attr = 'data-swal-template') {\n  clickHandlers[attr] = this\n\n  if (!bodyClickListenerAdded) {\n    document.body.addEventListener('click', bodyClickListener)\n    bodyClickListenerAdded = true\n  }\n}\n\nconst bodyClickListener = (event) => {\n  for (let el = event.target; el && el !== document; el = el.parentNode) {\n    for (const attr in clickHandlers) {\n      const template = el.getAttribute(attr)\n      if (template) {\n        clickHandlers[attr].fire({ template })\n        return\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}