{"ast":null,"code":"import { itemsService } from \"@/services/ItemsService\";\nexport function determineRaceClassItem(race, classType) {\n  let itemName = '';\n  let rand = Math.floor(Math.random() * 3);\n\n  switch (race) {\n    case 'human':\n      switch (classType) {\n        case 'rogue':\n          itemName = 'dagger';\n          break;\n\n        case 'ranger':\n          itemName = 'shortbow';\n          break;\n\n        case 'barbarian':\n          itemName = 'handaxe';\n          break;\n\n        case 'bard':\n          itemName = 'robe';\n          break;\n\n        case 'wizard':\n          itemName = 'wand';\n          break;\n\n        case 'cleric':\n          itemName = 'cape';\n          break;\n\n        case 'fighter':\n          itemName = 'shortsword';\n          break;\n\n        case 'monk':\n          itemName = 'quarterstaff';\n          break;\n\n        case 'paladin':\n          itemName = 'padded armor';\n          break;\n\n        case 'warlock':\n          itemName = 'bone wand';\n          break;\n\n        default:\n          itemName = itemsService.findRandomItem().name;\n          break;\n      }\n\n      break;\n\n    case 'dragonborn':\n      switch (classType) {\n        case 'rogue':\n          itemName = 'fang';\n          break;\n\n        case 'ranger':\n          itemName = 'hunters knife';\n          break;\n\n        case 'barbarian':\n          itemName = 'battleaxe';\n          break;\n\n        case 'bard':\n          itemName = 'belt of tricks';\n          break;\n\n        case 'wizard':\n          itemName = 'focus orb';\n          break;\n\n        case 'cleric':\n          itemName = 'cloak of winters';\n          break;\n\n        case 'fighter':\n          itemName = 'bastardsword';\n          break;\n\n        case 'monk':\n          itemName = 'handbands';\n          break;\n\n        case 'paladin':\n          itemName = 'spiked armor';\n          break;\n\n        case 'warlock':\n          itemName = 'orb of darkness';\n          break;\n\n        default:\n          itemName = itemsService.findRandomItem().name;\n          break;\n      }\n\n      break;\n\n    case 'elf':\n      switch (classType) {\n        case 'rogue':\n          itemName = 'hand crossbow';\n          break;\n\n        case 'ranger':\n          itemName = 'longbow';\n          break;\n\n        case 'barbarian':\n          itemName = 'longsword';\n          break;\n\n        case 'bard':\n          itemName = 'loot';\n          break;\n\n        case 'wizard':\n          itemName = 'unstable orb';\n          break;\n\n        case 'cleric':\n          itemName = 'gold ring';\n          break;\n\n        case 'fighter':\n          itemName = 'scimitar';\n          break;\n\n        case 'monk':\n          itemName = 'spear';\n          break;\n\n        case 'paladin':\n          itemName = 'shield';\n          break;\n\n        case 'warlock':\n          itemName = 'cloak of darkness';\n          break;\n\n        default:\n          itemName = itemsService.findRandomItem().name;\n          break;\n      }\n\n      break;\n\n    case 'dwarf':\n      switch (classType) {\n        case 'rogue':\n          itemName = 'darts';\n          break;\n\n        case 'ranger':\n          itemName = 'light crossbow';\n          break;\n\n        case 'barbarian':\n          itemName = 'morningstar';\n          break;\n\n        case 'bard':\n          itemName = 'lyre';\n          break;\n\n        case 'wizard':\n          itemName = 'cloak';\n          break;\n\n        case 'cleric':\n          itemName = 'holy symbol';\n          break;\n\n        case 'fighter':\n          itemName = 'warhammer';\n          break;\n\n        case 'monk':\n          itemName = 'hooded robe';\n          break;\n\n        case 'paladin':\n          itemName = 'helm';\n          break;\n\n        case 'warlock':\n          itemName = 'skull armor';\n          break;\n\n        default:\n          itemName = itemsService.findRandomItem().name;\n          break;\n      }\n\n      break;\n\n    case 'halfling':\n      switch (classType) {\n        case 'rogue':\n          itemName = 'dagger';\n          break;\n\n        case 'ranger':\n          itemName = 'bracers of archery';\n          break;\n\n        case 'barbarian':\n          itemName = 'bracers of defense';\n          break;\n\n        case 'bard':\n          itemName = 'luckstone';\n          break;\n\n        case 'wizard':\n          itemName = 'wand +1';\n          break;\n\n        case 'cleric':\n          itemName = 'ring of light';\n          break;\n\n        case 'fighter':\n          itemName = 'scimitar';\n          break;\n\n        case 'monk':\n          itemName = 'ring of soft';\n          break;\n\n        case 'paladin':\n          itemName = 'adamantine armor';\n          break;\n\n        case 'warlock':\n          itemName = 'deaths ' + (rand == 0 ? 'touch' : rand == 1 ? 'guard' : 'hand');\n          break;\n\n        default:\n          itemName = itemsService.findRandomItem().name;\n          break;\n      }\n\n      break;\n\n    default:\n      itemName = itemsService.findRandomItem().name;\n      break;\n  }\n\n  console.log(itemName);\n  return itemName;\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/src/utils/determineRaceClassItem.js"],"names":["itemsService","determineRaceClassItem","race","classType","itemName","rand","Math","floor","random","findRandomItem","name","console","log"],"mappings":"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","sourcesContent":["import { itemsService } from \"@/services/ItemsService\"\r\nexport function determineRaceClassItem(race, classType){\r\n    let itemName = ''\r\n    let rand = Math.floor(Math.random()*3)\r\n    switch(race){\r\n        case 'human':\r\n            switch(classType){\r\n                case 'rogue':\r\n                    itemName = 'dagger'\r\n                break \r\n                case 'ranger':\r\n                    itemName = 'shortbow'\r\n                break\r\n                case 'barbarian':\r\n                    itemName = 'handaxe'\r\n                break\r\n                case 'bard':\r\n                    itemName = 'robe'\r\n                break\r\n                case 'wizard':\r\n                    itemName = 'wand'\r\n                break\r\n                case 'cleric':\r\n                    itemName = 'cape'\r\n                break\r\n                case 'fighter':\r\n                    itemName = 'shortsword'\r\n                break\r\n                case 'monk':\r\n                    itemName = 'quarterstaff'\r\n                break\r\n                case 'paladin':\r\n                    itemName = 'padded armor'\r\n                break\r\n                case 'warlock':\r\n                    itemName = 'bone wand'\r\n                break\r\n                default:\r\n                    itemName = itemsService.findRandomItem().name\r\n                break\r\n            }\r\n        break\r\n        case 'dragonborn':\r\n            switch(classType){\r\n                case 'rogue':\r\n                    itemName = 'fang'\r\n                break \r\n                case 'ranger':\r\n                    itemName = 'hunters knife'\r\n                break\r\n                case 'barbarian':\r\n                    itemName = 'battleaxe'\r\n                break\r\n                case 'bard':\r\n                    itemName = 'belt of tricks'\r\n                break\r\n                case 'wizard':\r\n                    itemName = 'focus orb'\r\n                break\r\n                case 'cleric':\r\n                    itemName = 'cloak of winters'\r\n                break\r\n                case 'fighter':\r\n                    itemName = 'bastardsword'\r\n                break\r\n                case 'monk':\r\n                    itemName = 'handbands'\r\n                break\r\n                case 'paladin':\r\n                    itemName = 'spiked armor'\r\n                break\r\n                case 'warlock':\r\n                    itemName = 'orb of darkness'\r\n                break\r\n                default:\r\n                    itemName = itemsService.findRandomItem().name\r\n                break\r\n            }\r\n        break\r\n        case 'elf':\r\n            switch(classType){\r\n                case 'rogue':\r\n                    itemName = 'hand crossbow'\r\n                break \r\n                case 'ranger':\r\n                    itemName = 'longbow'\r\n                break\r\n                case 'barbarian':\r\n                    itemName = 'longsword'\r\n                break\r\n                case 'bard':\r\n                    itemName = 'loot'\r\n                break\r\n                case 'wizard':\r\n                    itemName = 'unstable orb'\r\n                break\r\n                case 'cleric':\r\n                    itemName = 'gold ring'\r\n                break\r\n                case 'fighter':\r\n                    itemName = 'scimitar'\r\n                break\r\n                case 'monk':\r\n                    itemName = 'spear'\r\n                break\r\n                case 'paladin':\r\n                    itemName = 'shield'\r\n                break\r\n                case 'warlock':\r\n                    itemName = 'cloak of darkness'\r\n                break\r\n                default:\r\n                    itemName = itemsService.findRandomItem().name\r\n                break\r\n            }\r\n        break\r\n        case 'dwarf':\r\n            switch(classType){\r\n                case 'rogue':\r\n                    itemName = 'darts'\r\n                break \r\n                case 'ranger':\r\n                    itemName = 'light crossbow'\r\n                break\r\n                case 'barbarian':\r\n                    itemName = 'morningstar'\r\n                break\r\n                case 'bard':\r\n                    itemName = 'lyre'\r\n                break\r\n                case 'wizard':\r\n                    itemName = 'cloak'\r\n                break\r\n                case 'cleric':\r\n                    itemName = 'holy symbol'\r\n                break\r\n                case 'fighter':\r\n                    itemName = 'warhammer'\r\n                break\r\n                case 'monk':\r\n                    itemName = 'hooded robe'\r\n                break\r\n                case 'paladin':\r\n                    itemName = 'helm'\r\n                break\r\n                case 'warlock':\r\n                    itemName = 'skull armor'\r\n                break\r\n                default:\r\n                    itemName = itemsService.findRandomItem().name\r\n                break\r\n            }\r\n        break\r\n        case 'halfling':\r\n            switch(classType){\r\n                case 'rogue':\r\n                    itemName = 'dagger'\r\n                break \r\n                case 'ranger':\r\n                    itemName = 'bracers of archery'\r\n                break\r\n                case 'barbarian':\r\n                    itemName = 'bracers of defense'\r\n                break\r\n                case 'bard':\r\n                    itemName = 'luckstone'\r\n                break\r\n                case 'wizard':\r\n                    itemName = 'wand +1'\r\n                break\r\n                case 'cleric':\r\n                    itemName = 'ring of light'\r\n                break\r\n                case 'fighter':\r\n                    itemName = 'scimitar'\r\n                break\r\n                case 'monk':\r\n                    itemName = 'ring of soft'\r\n                break\r\n                case 'paladin':\r\n                    itemName = 'adamantine armor'\r\n                break\r\n                case 'warlock':\r\n                    itemName = 'deaths '+ (rand == 0 ? 'touch' : rand == 1 ? 'guard' : 'hand')\r\n                break\r\n                default:\r\n                    itemName = itemsService.findRandomItem().name\r\n                break\r\n            }\r\n        break\r\n        default:\r\n            itemName = itemsService.findRandomItem().name\r\n        break\r\n    }\r\n    console.log(itemName)\r\n    return itemName\r\n}"]},"metadata":{},"sourceType":"module"}