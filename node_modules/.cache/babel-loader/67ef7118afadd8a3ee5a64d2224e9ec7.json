{"ast":null,"code":"import { reactive } from \"@vue/reactivity\";\nimport $store from '@/store/index';\nimport $ from 'jquery';\nimport { computed, onMounted, watch } from \"@vue/runtime-core\";\nimport router from \"@/router\";\nimport Notify from \"@/utils/Notify\";\nimport { itemsService } from \"@/services/ItemsService\";\nimport { useToast } from \"vue-toastification\";\nimport { Item } from \"@/models/Item\";\nimport { spellsService } from \"@/services/SpellsService\";\nimport { characterService } from \"@/services/CharacterService\";\nexport default {\n  name: 'AreaLocation',\n  components: {},\n\n  setup() {\n    onMounted(() => {\n      let explored = $store.state.player.explored[$store.state.location];\n      explored.forEach(id => {\n        $('#' + id).removeClass('bg-shadow');\n      });\n      setExploreOptions();\n    });\n    const state = reactive({\n      location: computed(() => $store.state.location),\n      hasKey: computed(() => $store.state.player.items.find(i => i.name == 'key')),\n      explored: computed(() => $store.state.player.explored[$store.state.location]),\n      areaCompleted: computed(() => state.explored.find(e => e == 'reward recieved')),\n      currentLocation: computed(() => $store.state.player.currentLocation),\n      bgImg: computed(() => $store.state.locationImgList.find(l => l.includes('area' + ($store.state.location + 1) + '.'))),\n      charImg: computed(() => $store.state.player.characters.filter(c => c.hp > 0)[0].img),\n      tavernImg: $store.state.assetsImgList.find(m => m.includes('tavern2')),\n      chestImg: $store.state.assetsImgList.find(m => m.includes('chest'))\n    });\n\n    function setExploreOptions() {\n      let rowCol = $store.state.player.currentLocation.split('-');\n      setTimeout(() => {\n        for (let i = -1; i <= 1; i++) {\n          if (i == 0) {\n            $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2]}`).removeClass('disabled');\n            continue;\n          }\n\n          $(`#${rowCol[0]}-${+rowCol[1] + i}-${+rowCol[2] + i}`).removeClass('disabled');\n          $(`#${rowCol[0]}-${+rowCol[1] - i}-${+rowCol[2] + i}`).removeClass('disabled');\n          $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2] + i}`).removeClass('disabled');\n          $(`#${rowCol[0]}-${+rowCol[1] + i}-${+rowCol[2]}`).removeClass('disabled');\n        }\n      }, 250);\n    }\n\n    watch(() => [state.currentLocation], () => {\n      $('.col').each(function () {\n        $(this).addClass('disabled');\n      });\n      setExploreOptions();\n    });\n    return state;\n  },\n\n  methods: {\n    async explore(id) {\n      const toast = useToast();\n      let explored = $store.state.player.explored[$store.state.location];\n      let rowCol = id.split('-');\n\n      if (rowCol[1] == 10 && rowCol[2] == 6 && !this.hasKey) {\n        toast.warning('You dont have a key');\n        return;\n      }\n\n      if (!explored.includes(id)) {\n        explored.push(id);\n        $('#' + id).removeClass('bg-shadow');\n      }\n\n      $store.state.player.currentLocation = id;\n\n      if (explored.length >= 59 && !this.hasKey && !this.areaCompleted) {\n        // TODO can't just add 2 when higher lvl\n        $store.state.player.items.push(new Item({\n          name: 'key',\n          type: 'key'\n        }));\n        toast.success('You found a key!');\n        router.push({\n          name: 'battleField',\n          params: {\n            monsterLvl: $store.state.location + 2,\n            numMonsters: 1,\n            boss: true\n          }\n        });\n      }\n\n      if (explored.length == 60 && !this.areaCompleted && rowCol[1] == 10 && rowCol[2] == 6 && this.hasKey) {\n        await this.completeArea();\n        return;\n      } // Tavern\n\n\n      if (rowCol[1] == 5 && rowCol[2] == 3) {\n        router.push({\n          name: 'MainShop'\n        });\n        return;\n      }\n\n      this.getEncounter();\n    },\n\n    getEncounter() {\n      const toast = useToast();\n      let chance = Math.ceil(Math.random() * 100);\n      let rowCol = $store.state.player.currentLocation.split('-');\n\n      if (chance > 35 || rowCol[1] == 1 && rowCol[2] == 1) {\n        router.push({\n          name: 'battleField'\n        });\n      } else if (chance > 25) {//nothing\n      } else if (chance > 10) {\n        let gold = Math.round(Math.random() * 100) * ($store.state.location + 1);\n        $store.state.player.gold += gold;\n        toast.success('You found ' + gold + 'Gold!', {\n          timeout: 4000\n        });\n      } else if (chance > 2) {\n        let item = itemsService.findRandomItem();\n        $store.state.player.items.push(new Item(item));\n        toast.success('You found a ' + item.name, {\n          timeout: 4000\n        });\n      } else {\n        let spellName = spellsService.findRandomLearnableSpell($store.state.selected);\n        $store.state.player.items.push(new Item({\n          name: spellName,\n          scroll: true,\n          value: 1,\n          effect: 'Learn spell',\n          price: characterService.getAverageCharacterLvl() * 250 + 500\n        }));\n        toast.success('You found a ' + spellName + ' scroll', {\n          timeout: 4000\n        });\n      }\n    },\n\n    async completeArea() {\n      const toast = useToast();\n      let options = {\n        gold: 'Wealth',\n        power: 'Power',\n        item: 'Treasure'\n      };\n      let boon = await Notify.selectOptions(options, 'Choose your Reward!', 'Well done adventures! For completing this area you are granted a boon!', 'Confirm');\n\n      if (boon) {\n        $store.state.player.items = $store.state.player.items.filter(i => i.name != 'key');\n        $store.state.player.explored[$store.state.location].push('reward recieved');\n      }\n\n      let reward;\n      let chance = Math.ceil(Math.random() * 40) + $store.state.location;\n\n      switch (boon) {\n        case 'gold':\n          reward = Math.round(Math.random() * (4000 * ($store.state.location + 1))) + 1000;\n          $store.state.player.gold += reward;\n          toast.success('You recieved ' + reward + ' Gold');\n          break;\n\n        case 'power':\n          $store.state.player.characters.forEach(c => c.statBonus++);\n          toast.success('Your party feels more powerful');\n          break;\n\n        case 'item':\n          if (chance < 15) {\n            reward = 'uc';\n          } else if (chance < 35) {\n            reward = 'r';\n          } else if (chance < 40) {\n            reward = 'vr';\n          } else {\n            reward = 'l';\n          }\n\n          reward = itemsService.findRandomItem(reward);\n          $store.state.player.items.push(new Item(reward));\n          toast.success('You recieved ' + reward.name);\n\n          if (await Notify.confirm('Next Area', 'You continue on your adventure to another area now that you have completed your mission here.', 'info', 'ok')) {\n            $store.state.location++;\n            this.explore($store.state.location + '-1-1');\n          }\n\n          break;\n      }\n    },\n\n    findIfVisible(row, col) {\n      let visible = false;\n\n      if (this.explored.length == 0) {\n        return row + col == 2;\n      }\n\n      this.explored.forEach(id => {\n        let rowCol = id.split('-');\n\n        if (rowCol[1] == row && rowCol[2] == col) {\n          visible = true;\n          return;\n        }\n\n        for (let i = -1; i <= 1; i++) {\n          if (+rowCol[2] + i == col && +rowCol[1] == row) {\n            visible = true;\n            return;\n          }\n\n          if (+rowCol[2] + i == col && +rowCol[1] + i == row) {\n            visible = true;\n            return;\n          }\n\n          if (+rowCol[2] == col && +rowCol[1] + i == row) {\n            visible = true;\n            return;\n          }\n\n          if (+rowCol[2] + i == col && +rowCol[1] - i == row) {\n            visible = true;\n            return;\n          }\n        }\n      });\n      return visible;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","$store","$","computed","onMounted","watch","router","Notify","itemsService","useToast","Item","spellsService","characterService","name","components","setup","explored","state","player","location","forEach","id","removeClass","setExploreOptions","hasKey","items","find","i","areaCompleted","e","currentLocation","bgImg","locationImgList","l","includes","charImg","characters","filter","c","hp","img","tavernImg","assetsImgList","m","chestImg","rowCol","split","setTimeout","each","addClass","methods","explore","toast","warning","push","length","type","success","params","monsterLvl","numMonsters","boss","completeArea","getEncounter","chance","Math","ceil","random","gold","round","timeout","item","findRandomItem","spellName","findRandomLearnableSpell","selected","scroll","value","effect","price","getAverageCharacterLvl","options","power","boon","selectOptions","reward","statBonus","confirm","findIfVisible","row","col","visible"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\components\\AreaLocation.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid area-map map\" :style=\"'background-image: url('+bgImg+')'\">\r\n    <div class=\"row\" v-for=\"row in 10\" :key=\"row\">\r\n        <div :id=\"location+'-'+row+'-'+col\" class=\"col bg-shadow disabled\" :class=\"findIfVisible(row, col) ? '' : 'bg-dark'\" @click=\"explore(location+'-'+row+'-'+col)\" v-for=\"col in 6\" :key=\"col\">\r\n            <div v-if=\"row == 5 && col == 3\" :class=\"findIfVisible(row, col) ? '' : 'd-none'\"><img class=\"char-icon\" :src=\"tavernImg\" alt=\"Tavern\"></div>\r\n            <div v-else-if=\"location+'-'+row+'-'+col == currentLocation\"><img class=\"char-icon\" :src=\"charImg\" alt=\"X\"></div>\r\n            <div v-if=\"row == 10 && col == 6 && !areaCompleted\" :class=\"findIfVisible(row, col) ? '' : 'd-none'\"><img class=\"char-icon\" :src=\"chestImg\" alt=\"treasure-chest\"></div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport $store from '@/store/index'\r\nimport $ from 'jquery'\r\nimport { computed, onMounted, watch } from \"@vue/runtime-core\"\r\nimport router from \"@/router\"\r\nimport Notify from \"@/utils/Notify\"\r\nimport { itemsService } from \"@/services/ItemsService\"\r\nimport { useToast } from \"vue-toastification\"\r\nimport { Item } from \"@/models/Item\"\r\nimport { spellsService } from \"@/services/SpellsService\"\r\nimport { characterService } from \"@/services/CharacterService\"\r\n\r\nexport default {\r\n    name: 'AreaLocation',\r\n    components: {\r\n\r\n    },\r\n    setup(){\r\n        onMounted(()=> {\r\n            let explored = $store.state.player.explored[$store.state.location]\r\n            explored.forEach(id => {\r\n                $('#'+id).removeClass('bg-shadow')\r\n            })\r\n            setExploreOptions()\r\n        })\r\n        const state = reactive({\r\n            location: computed(()=> $store.state.location),\r\n            hasKey: computed(()=> $store.state.player.items.find(i => i.name == 'key')),\r\n            explored: computed(()=> $store.state.player.explored[$store.state.location]),\r\n            areaCompleted: computed(()=> state.explored.find(e => e == 'reward recieved')),\r\n            currentLocation: computed(()=> $store.state.player.currentLocation),\r\n            bgImg: computed(()=> $store.state.locationImgList.find(l => l.includes('area'+($store.state.location+1)+'.'))),\r\n            charImg: computed(()=> $store.state.player.characters.filter(c => c.hp > 0)[0].img),\r\n            tavernImg: $store.state.assetsImgList.find(m => m.includes('tavern2')),\r\n            chestImg: $store.state.assetsImgList.find(m => m.includes('chest')),\r\n        })\r\n        function setExploreOptions(){\r\n            let rowCol = $store.state.player.currentLocation.split('-')\r\n            setTimeout(()=>{\r\n                for(let i=-1; i <= 1; i++){\r\n                    if(i==0){\r\n                        $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2]}`).removeClass('disabled')\r\n                        continue\r\n                    }\r\n                    $(`#${rowCol[0]}-${+rowCol[1]+i}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]-i}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]}-${+rowCol[2]+i}`).removeClass('disabled')\r\n                    $(`#${rowCol[0]}-${+rowCol[1]+i}-${+rowCol[2]}`).removeClass('disabled')\r\n                }\r\n            }, 250)\r\n        }\r\n        watch(()=>([state.currentLocation]), ()=>{\r\n            $('.col').each(function(){\r\n                $(this).addClass('disabled')\r\n            })\r\n            setExploreOptions()\r\n        })\r\n        return state\r\n    },\r\n    methods: {\r\n       async explore(id){\r\n            const toast = useToast()\r\n            let explored = $store.state.player.explored[$store.state.location]\r\n            let rowCol = id.split('-')\r\n            if(rowCol[1] == 10 && rowCol[2] == 6 && !this.hasKey){\r\n                toast.warning('You dont have a key')\r\n                return\r\n            }\r\n            if(!explored.includes(id)){\r\n                explored.push(id)\r\n                $('#'+id).removeClass('bg-shadow')\r\n            }\r\n            $store.state.player.currentLocation = id\r\n            if(explored.length >= 59 && !this.hasKey && !this.areaCompleted){\r\n                // TODO can't just add 2 when higher lvl\r\n                $store.state.player.items.push(new Item({name: 'key', type: 'key'}))\r\n                toast.success('You found a key!')\r\n                router.push({name: 'battleField', params: {monsterLvl: $store.state.location+2, numMonsters: 1, boss: true}})\r\n            }\r\n            if(explored.length == 60 && !this.areaCompleted && rowCol[1] == 10 && rowCol[2] == 6 && this.hasKey){\r\n               await this.completeArea()\r\n               return\r\n            }\r\n            // Tavern\r\n            if(rowCol[1] == 5 && rowCol[2] == 3){\r\n                router.push({name: 'MainShop'})\r\n                return\r\n            }\r\n            this.getEncounter()\r\n        },\r\n        getEncounter(){\r\n            const toast = useToast()\r\n            let chance = Math.ceil(Math.random()*100)\r\n            let rowCol = $store.state.player.currentLocation.split('-')\r\n            if(chance > 35 || (rowCol[1] == 1 && rowCol[2] == 1)){\r\n                router.push({name: 'battleField'})\r\n            }else if(chance > 25){\r\n                //nothing\r\n            }else if(chance > 10){\r\n                let gold = Math.round(Math.random()*100)*($store.state.location+1)\r\n                $store.state.player.gold += gold\r\n                toast.success('You found '+gold+'Gold!', {timeout: 4000})\r\n            }else if(chance > 2){\r\n                let item = itemsService.findRandomItem()\r\n                $store.state.player.items.push(new Item(item))\r\n                toast.success('You found a '+item.name, {timeout: 4000})\r\n            }else{\r\n                let spellName = spellsService.findRandomLearnableSpell($store.state.selected)\r\n                $store.state.player.items.push(new Item({name: spellName, scroll: true, value: 1, effect: 'Learn spell', price: characterService.getAverageCharacterLvl()*250+500}))\r\n                toast.success('You found a '+spellName+' scroll', {timeout: 4000})\r\n            }\r\n        },\r\n        async completeArea(){\r\n            const toast = useToast()\r\n            let options = {gold: 'Wealth', power: 'Power', item: 'Treasure'}\r\n            let boon = await Notify.selectOptions(options, 'Choose your Reward!', 'Well done adventures! For completing this area you are granted a boon!', 'Confirm')\r\n            if(boon){\r\n                $store.state.player.items = $store.state.player.items.filter(i => i.name != 'key')\r\n                $store.state.player.explored[$store.state.location].push('reward recieved')\r\n            }\r\n            let reward\r\n            let chance = Math.ceil(Math.random()*40)+$store.state.location\r\n            switch(boon){\r\n                case 'gold':\r\n                    reward = Math.round(Math.random()*(4000*($store.state.location+1)))+1000\r\n                    $store.state.player.gold += reward\r\n                    toast.success('You recieved '+reward+' Gold')\r\n                break\r\n                case 'power':\r\n                    $store.state.player.characters.forEach(c => c.statBonus++)\r\n                    toast.success('Your party feels more powerful')\r\n                break\r\n                case 'item':\r\n                    if(chance < 15){\r\n                        reward = 'uc'\r\n                    }else if(chance < 35){\r\n                        reward = 'r'\r\n                    }else if(chance < 40){\r\n                        reward = 'vr'\r\n                    }else{\r\n                        reward = 'l'\r\n                    }\r\n                    reward = itemsService.findRandomItem(reward)\r\n                    $store.state.player.items.push(new Item(reward))\r\n                    toast.success('You recieved '+reward.name)\r\n                    if(await Notify.confirm('Next Area', 'You continue on your adventure to another area now that you have completed your mission here.', 'info', 'ok')){\r\n                        $store.state.location++\r\n                        this.explore($store.state.location+'-1-1')\r\n                    }\r\n                    break\r\n            }\r\n        },\r\n        findIfVisible(row, col){\r\n            let visible = false\r\n            if(this.explored.length == 0){\r\n                return row+col == 2\r\n            }\r\n            this.explored.forEach(id => {\r\n                let rowCol = id.split('-')\r\n                if(rowCol[1] == row && rowCol[2] == col){\r\n                    visible = true\r\n                    return\r\n                }\r\n                for(let i=-1; i <= 1; i++){\r\n                    if((+rowCol[2]+i == col && +rowCol[1] == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2]+i == col && +rowCol[1]+i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2] == col && +rowCol[1]+i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                    if((+rowCol[2]+i == col && +rowCol[1]-i == row)){\r\n                        visible = true\r\n                        return\r\n                    }\r\n                }\r\n            })\r\n            return visible\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scope>\r\narea{\r\n  cursor: pointer;\r\n}\r\n.area-map{\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n}\r\n@media screen and (min-width: 992px) {\r\n    .area-map{\r\n      background-size: 84vw 100vh;\r\n  }\r\n}\r\n@media screen and (max-width: 992px) {\r\n  .area-map{\r\n    background-size: 100vw 100vh;\r\n  }\r\n}\r\n.col{\r\n    height: 10vh;\r\n}\r\n.col:hover{\r\n    cursor: pointer;\r\n    outline: 2px solid gold;\r\n}\r\n.bg-shadow{\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n.disabled{\r\n    pointer-events: none;\r\n}\r\n.char-icon{\r\n    max-height: 10vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}