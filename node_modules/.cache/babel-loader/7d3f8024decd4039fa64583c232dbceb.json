{"ast":null,"code":"import { undoScrollbar } from '../utils/scrollbarFix.js';\nimport { undoIOSfix } from '../utils/iosFix.js';\nimport { unsetAriaHidden } from '../utils/aria.js';\nimport * as dom from '../utils/dom/index.js';\nimport { swalClasses } from '../utils/classes.js';\nimport globalState, { restoreActiveElement } from '../globalState.js';\nimport privateProps from '../privateProps.js';\nimport privateMethods from '../privateMethods.js';\n/*\n * Instance method to close sweetAlert\n */\n\nfunction removePopupAndResetState(instance, container, returnFocus, didClose) {\n  if (dom.isToast()) {\n    triggerDidCloseAndDispose(instance, didClose);\n  } else {\n    restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // workaround for #2088\n  // for some reason removing the container in Safari will scroll the document to bottom\n\n  if (isSafari) {\n    container.setAttribute('style', 'display:none !important');\n    container.removeAttribute('class');\n    container.innerHTML = '';\n  } else {\n    container.remove();\n  }\n\n  if (dom.isModal()) {\n    undoScrollbar();\n    undoIOSfix();\n    unsetAriaHidden();\n  }\n\n  removeBodyClasses();\n}\n\nfunction removeBodyClasses() {\n  dom.removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n}\n\nexport function close(resolveValue) {\n  resolveValue = prepareResolveValue(resolveValue);\n  const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n  const didClose = triggerClosePopup(this);\n\n  if (this.isAwaitingPromise()) {\n    // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n    if (!resolveValue.isDismissed) {\n      handleAwaitingPromise(this);\n      swalPromiseResolve(resolveValue);\n    }\n  } else if (didClose) {\n    // Resolve Swal promise\n    swalPromiseResolve(resolveValue);\n  }\n}\nexport function isAwaitingPromise() {\n  return !!privateProps.awaitingPromise.get(this);\n}\n\nconst triggerClosePopup = instance => {\n  const popup = dom.getPopup();\n\n  if (!popup) {\n    return false;\n  }\n\n  const innerParams = privateProps.innerParams.get(instance);\n\n  if (!innerParams || dom.hasClass(popup, innerParams.hideClass.popup)) {\n    return false;\n  }\n\n  dom.removeClass(popup, innerParams.showClass.popup);\n  dom.addClass(popup, innerParams.hideClass.popup);\n  const backdrop = dom.getContainer();\n  dom.removeClass(backdrop, innerParams.showClass.backdrop);\n  dom.addClass(backdrop, innerParams.hideClass.backdrop);\n  handlePopupAnimation(instance, popup, innerParams);\n  return true;\n};\n\nexport function rejectPromise(error) {\n  const rejectPromise = privateMethods.swalPromiseReject.get(this);\n  handleAwaitingPromise(this);\n\n  if (rejectPromise) {\n    // Reject Swal promise\n    rejectPromise(error);\n  }\n}\nexport const handleAwaitingPromise = instance => {\n  if (instance.isAwaitingPromise()) {\n    privateProps.awaitingPromise.delete(instance); // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n\n    if (!privateProps.innerParams.get(instance)) {\n      instance._destroy();\n    }\n  }\n};\n\nconst prepareResolveValue = resolveValue => {\n  // When user calls Swal.close()\n  if (typeof resolveValue === 'undefined') {\n    return {\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: true\n    };\n  }\n\n  return Object.assign({\n    isConfirmed: false,\n    isDenied: false,\n    isDismissed: false\n  }, resolveValue);\n};\n\nconst handlePopupAnimation = (instance, popup, innerParams) => {\n  const container = dom.getContainer(); // If animation is supported, animate\n\n  const animationIsSupported = dom.animationEndEvent && dom.hasCssAnimation(popup);\n\n  if (typeof innerParams.willClose === 'function') {\n    innerParams.willClose(popup);\n  }\n\n  if (animationIsSupported) {\n    animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n  } else {\n    // Otherwise, remove immediately\n    removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n  }\n};\n\nconst animatePopup = (instance, popup, container, returnFocus, didClose) => {\n  globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n  popup.addEventListener(dom.animationEndEvent, function (e) {\n    if (e.target === popup) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n  });\n};\n\nconst triggerDidCloseAndDispose = (instance, didClose) => {\n  setTimeout(() => {\n    if (typeof didClose === 'function') {\n      didClose.bind(instance.params)();\n    }\n\n    instance._destroy();\n  });\n};\n\nexport { close as closePopup, close as closeModal, close as closeToast };","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/instanceMethods/close.js"],"names":["undoScrollbar","undoIOSfix","unsetAriaHidden","dom","swalClasses","globalState","restoreActiveElement","privateProps","privateMethods","removePopupAndResetState","instance","container","returnFocus","didClose","isToast","triggerDidCloseAndDispose","then","keydownTarget","removeEventListener","keydownHandler","capture","keydownListenerCapture","keydownHandlerAdded","isSafari","test","navigator","userAgent","setAttribute","removeAttribute","innerHTML","remove","isModal","removeBodyClasses","removeClass","document","documentElement","body","shown","close","resolveValue","prepareResolveValue","swalPromiseResolve","get","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","awaitingPromise","popup","getPopup","innerParams","hasClass","hideClass","showClass","addClass","backdrop","getContainer","handlePopupAnimation","rejectPromise","error","swalPromiseReject","delete","_destroy","isConfirmed","isDenied","Object","assign","animationIsSupported","animationEndEvent","hasCssAnimation","willClose","animatePopup","swalCloseEventFinishedCallback","bind","addEventListener","e","target","setTimeout","params","closePopup","closeModal","closeToast"],"mappings":"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","sourcesContent":["import { undoScrollbar } from '../utils/scrollbarFix.js'\nimport { undoIOSfix } from '../utils/iosFix.js'\nimport { unsetAriaHidden } from '../utils/aria.js'\nimport * as dom from '../utils/dom/index.js'\nimport { swalClasses } from '../utils/classes.js'\nimport globalState, { restoreActiveElement } from '../globalState.js'\nimport privateProps from '../privateProps.js'\nimport privateMethods from '../privateMethods.js'\n\n/*\n * Instance method to close sweetAlert\n */\n\nfunction removePopupAndResetState(instance, container, returnFocus, didClose) {\n  if (dom.isToast()) {\n    triggerDidCloseAndDispose(instance, didClose)\n  } else {\n    restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose))\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = false\n  }\n\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  // workaround for #2088\n  // for some reason removing the container in Safari will scroll the document to bottom\n  if (isSafari) {\n    container.setAttribute('style', 'display:none !important')\n    container.removeAttribute('class')\n    container.innerHTML = ''\n  } else {\n    container.remove()\n  }\n\n  if (dom.isModal()) {\n    undoScrollbar()\n    undoIOSfix()\n    unsetAriaHidden()\n  }\n\n  removeBodyClasses()\n}\n\nfunction removeBodyClasses() {\n  dom.removeClass(\n    [document.documentElement, document.body],\n    [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]\n  )\n}\n\nexport function close(resolveValue) {\n  resolveValue = prepareResolveValue(resolveValue)\n\n  const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this)\n\n  const didClose = triggerClosePopup(this)\n\n  if (this.isAwaitingPromise()) {\n    // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n    if (!resolveValue.isDismissed) {\n      handleAwaitingPromise(this)\n      swalPromiseResolve(resolveValue)\n    }\n  } else if (didClose) {\n    // Resolve Swal promise\n    swalPromiseResolve(resolveValue)\n  }\n}\n\nexport function isAwaitingPromise() {\n  return !!privateProps.awaitingPromise.get(this)\n}\n\nconst triggerClosePopup = (instance) => {\n  const popup = dom.getPopup()\n\n  if (!popup) {\n    return false\n  }\n\n  const innerParams = privateProps.innerParams.get(instance)\n  if (!innerParams || dom.hasClass(popup, innerParams.hideClass.popup)) {\n    return false\n  }\n\n  dom.removeClass(popup, innerParams.showClass.popup)\n  dom.addClass(popup, innerParams.hideClass.popup)\n\n  const backdrop = dom.getContainer()\n  dom.removeClass(backdrop, innerParams.showClass.backdrop)\n  dom.addClass(backdrop, innerParams.hideClass.backdrop)\n\n  handlePopupAnimation(instance, popup, innerParams)\n\n  return true\n}\n\nexport function rejectPromise(error) {\n  const rejectPromise = privateMethods.swalPromiseReject.get(this)\n  handleAwaitingPromise(this)\n  if (rejectPromise) {\n    // Reject Swal promise\n    rejectPromise(error)\n  }\n}\n\nexport const handleAwaitingPromise = (instance) => {\n  if (instance.isAwaitingPromise()) {\n    privateProps.awaitingPromise.delete(instance)\n    // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n    if (!privateProps.innerParams.get(instance)) {\n      instance._destroy()\n    }\n  }\n}\n\nconst prepareResolveValue = (resolveValue) => {\n  // When user calls Swal.close()\n  if (typeof resolveValue === 'undefined') {\n    return {\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: true,\n    }\n  }\n\n  return Object.assign(\n    {\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false,\n    },\n    resolveValue\n  )\n}\n\nconst handlePopupAnimation = (instance, popup, innerParams) => {\n  const container = dom.getContainer()\n  // If animation is supported, animate\n  const animationIsSupported = dom.animationEndEvent && dom.hasCssAnimation(popup)\n\n  if (typeof innerParams.willClose === 'function') {\n    innerParams.willClose(popup)\n  }\n\n  if (animationIsSupported) {\n    animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose)\n  } else {\n    // Otherwise, remove immediately\n    removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose)\n  }\n}\n\nconst animatePopup = (instance, popup, container, returnFocus, didClose) => {\n  globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(\n    null,\n    instance,\n    container,\n    returnFocus,\n    didClose\n  )\n  popup.addEventListener(dom.animationEndEvent, function (e) {\n    if (e.target === popup) {\n      globalState.swalCloseEventFinishedCallback()\n      delete globalState.swalCloseEventFinishedCallback\n    }\n  })\n}\n\nconst triggerDidCloseAndDispose = (instance, didClose) => {\n  setTimeout(() => {\n    if (typeof didClose === 'function') {\n      didClose.bind(instance.params)()\n    }\n    instance._destroy()\n  })\n}\n\nexport { close as closePopup, close as closeModal, close as closeToast }\n"]},"metadata":{},"sourceType":"module"}