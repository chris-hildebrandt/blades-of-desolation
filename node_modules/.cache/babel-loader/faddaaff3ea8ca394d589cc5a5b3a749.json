{"ast":null,"code":"/**\n * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\nexport default {\n  swalPromiseResolve: new WeakMap(),\n  swalPromiseReject: new WeakMap()\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/privateMethods.js"],"names":["swalPromiseResolve","WeakMap","swalPromiseReject"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe;AACbA,EAAAA,kBAAkB,EAAE,IAAIC,OAAJ,EADP;AAEbC,EAAAA,iBAAiB,EAAE,IAAID,OAAJ;AAFN,CAAf","sourcesContent":["/**\n * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n * This is the approach that Babel will probably take to implement private methods/fields\n *   https://github.com/tc39/proposal-private-methods\n *   https://github.com/babel/babel/pull/7555\n * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n *   then we can use that language feature.\n */\n\nexport default {\n  swalPromiseResolve: new WeakMap(),\n  swalPromiseReject: new WeakMap(),\n}\n"]},"metadata":{},"sourceType":"module"}