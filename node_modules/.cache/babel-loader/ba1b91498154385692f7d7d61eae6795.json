{"ast":null,"code":"import { getRandomAbility } from \"./getRandomAbility\";\nexport function characterLvlUpStatHelper(classType, race, lvl) {\n  let boosts = {};\n  let magical = classType == 'bard' || classType == 'cleric' || classType == 'ranger' || classType == 'warlock' || classType == 'wizard';\n\n  switch (classType) {\n    case 'rogue':\n      boosts['classBoost'] = ['baseStrength', 'strength', 'dodge'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('luck');\n      }\n\n      break;\n\n    case 'ranger':\n      boosts['classBoost'] = ['baseStrength', 'strength', 'baseHp', 'hp'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('baseMagic');\n        boosts['classBoost'].push('magic');\n      }\n\n      break;\n\n    case 'barbarian':\n      boosts['classBoost'] = ['baseStrength', 'baseStrength', 'strength', 'strength'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('luck');\n      }\n\n      break;\n\n    case 'bard':\n      boosts['classBoost'] = ['dodge', 'magic', 'baseMagic'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('luck');\n      }\n\n      break;\n\n    case 'wizard':\n      boosts['classBoost'] = ['baseMagic', 'baseMagic', 'magic', 'magic'];\n\n      if (lvl % 5 == 0) {\n        boosts['classBoost'].push('magicRegen');\n      }\n\n      break;\n\n    case 'cleric':\n      boosts['classBoost'] = ['baseMagic', 'magic', 'baseHp', 'hp'];\n\n      if (lvl % 5 == 0) {\n        boosts['classBoost'].push('magicRegen');\n      }\n\n      break;\n\n    case 'fighter':\n      boosts['classBoost'] = ['baseStrength', 'strength', 'physicalResistance'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('dodge');\n      }\n\n      break;\n\n    case 'monk':\n      boosts['classBoost'] = ['physicalResistance', 'magicResistance'];\n\n      if (lvl % 3 == 0) {\n        boosts['classBoost'].push('strength');\n        boosts['classBoost'].push('baseStrength');\n      }\n\n      break;\n\n    case 'paladin':\n      boosts['classBoost'] = ['baseStrength', 'strength', 'thorns'];\n\n      if (lvl % 2 == 0) {\n        boosts['classBoost'].push('magic');\n      }\n\n      if (lvl % 5 == 0) {\n        boosts['classBoost'].push('magicRegen');\n      }\n\n      break;\n\n    case 'warlock':\n      boosts['classBoost'] = ['baseMagic', 'magic', 'baseMagic', 'magic'];\n\n      if (lvl % 5 == 0) {\n        boosts['classBoost'].push('magicRegen');\n      }\n\n      break;\n\n    default:\n      boosts['classBoost'] = [[getRandomAbility()], [getRandomAbility()]];\n      break;\n  }\n\n  switch (race) {\n    case 'dragonborn':\n      boosts['raceBoost'] = ['baseStrength', 'baseStrength', 'strength', 'strength'];\n      break;\n\n    case 'human':\n      boosts['raceBoost'] = ['baseStrength', 'baseHp', 'strength', 'hp'];\n      break;\n\n    case 'elf':\n      boosts['raceBoost'] = ['dodge', magical ? 'baseMagic' : 'baseHp', magical ? 'magic' : 'hp'];\n      break;\n\n    case 'dwarf':\n      boosts['raceBoost'] = ['baseHp', 'baseHp', 'hp', 'hp'];\n      break;\n\n    case 'halfling':\n      boosts['raceBoost'] = ['luck', 'luck'];\n      break;\n\n    default:\n      boosts['raceBoost'] = [[getRandomAbility()], [getRandomAbility()]];\n      break;\n  }\n\n  return boosts;\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/src/utils/characterLvlUpStatHelper.js"],"names":["getRandomAbility","characterLvlUpStatHelper","classType","race","lvl","boosts","magical","push"],"mappings":"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","sourcesContent":["import { getRandomAbility } from \"./getRandomAbility\"\r\n\r\nexport function characterLvlUpStatHelper(classType, race, lvl){\r\n  let boosts = {}\r\n  let magical = classType == 'bard' || classType == 'cleric' || classType == 'ranger' || classType == 'warlock' || classType == 'wizard'\r\n  switch(classType){\r\n    case 'rogue':\r\n      boosts['classBoost'] = ['baseStrength', 'strength', 'dodge']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('luck')\r\n      }\r\n      break \r\n    case 'ranger':\r\n      boosts['classBoost'] = ['baseStrength', 'strength', 'baseHp', 'hp']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('baseMagic')\r\n        boosts['classBoost'].push('magic')\r\n      }\r\n      break\r\n    case 'barbarian':\r\n      boosts['classBoost'] = ['baseStrength', 'baseStrength', 'strength', 'strength']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('luck')\r\n      }\r\n      break\r\n    case 'bard':\r\n      boosts['classBoost'] = ['dodge', 'magic', 'baseMagic']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('luck')\r\n      }\r\n      break\r\n    case 'wizard':\r\n      boosts['classBoost'] = ['baseMagic', 'baseMagic', 'magic', 'magic']\r\n      if(lvl % 5 == 0){\r\n        boosts['classBoost'].push('magicRegen')\r\n      }\r\n      break\r\n    case 'cleric':\r\n      boosts['classBoost'] = ['baseMagic', 'magic', 'baseHp', 'hp']\r\n      if(lvl % 5 == 0){\r\n        boosts['classBoost'].push('magicRegen')\r\n      }\r\n      break\r\n    case 'fighter':\r\n      boosts['classBoost'] = ['baseStrength', 'strength', 'physicalResistance']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('dodge')\r\n      }\r\n      break\r\n    case 'monk':\r\n      boosts['classBoost'] = ['physicalResistance', 'magicResistance']\r\n      if(lvl % 3 == 0){\r\n        boosts['classBoost'].push('strength')\r\n        boosts['classBoost'].push('baseStrength')\r\n      }\r\n      break\r\n      case 'paladin':\r\n        boosts['classBoost'] = ['baseStrength', 'strength', 'thorns']\r\n        if(lvl % 2 == 0){\r\n          boosts['classBoost'].push('magic')\r\n        }\r\n        if(lvl % 5 == 0){\r\n          boosts['classBoost'].push('magicRegen')\r\n        }\r\n      break\r\n    case 'warlock':\r\n      boosts['classBoost'] = ['baseMagic', 'magic', 'baseMagic', 'magic']\r\n      if(lvl % 5 == 0){\r\n        boosts['classBoost'].push('magicRegen')\r\n      }\r\n      break\r\n    default:\r\n      boosts['classBoost'] = [[getRandomAbility()], [getRandomAbility()]]\r\n      break\r\n  }\r\n  switch(race){\r\n    case 'dragonborn':\r\n      boosts['raceBoost'] = ['baseStrength', 'baseStrength', 'strength', 'strength']\r\n      break\r\n    case 'human':\r\n      boosts['raceBoost'] = ['baseStrength', 'baseHp', 'strength', 'hp']\r\n      break\r\n    case 'elf':\r\n      boosts['raceBoost'] = ['dodge', magical ? 'baseMagic' : 'baseHp', magical ? 'magic' : 'hp' ]\r\n      break\r\n    case 'dwarf':\r\n      boosts['raceBoost'] = ['baseHp', 'baseHp', 'hp', 'hp']\r\n      break\r\n    case 'halfling':\r\n      boosts['raceBoost'] = ['luck', 'luck']\r\n      break\r\n    default:\r\n      boosts['raceBoost'] = [[getRandomAbility()], [getRandomAbility()]]\r\n      break\r\n  }\r\n  return boosts\r\n}\r\n"]},"metadata":{},"sourceType":"module"}