{"ast":null,"code":"import _defineProperty from \"C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { animationsService } from \"./AnimationsService\";\nimport { sleep } from \"../utils/sleep\";\nimport { MonsterFactory } from \"../models/MonsterFactory\";\nimport { gameService } from \"./GameService\";\nimport { useToast } from \"vue-toastification\";\n\nclass BattleService {\n  constructor() {\n    _defineProperty(this, \"toast\", useToast());\n\n    _defineProperty(this, \"animationDelay\", 750);\n  }\n\n  handleAttack(attacker, target) {\n    let targetIsFoe = target instanceof MonsterFactory;\n    let operator = targetIsFoe ? '-' : '+';\n    let delay = targetIsFoe ? 0 : 200;\n\n    if (delay == 0) {\n      attacker.actions -= gameService.getSpeedCost(attacker, attacker['isSpell'] ? attacker.speed : false);\n    }\n\n    sleep(delay).then(() => {\n      let dmg = attacker.strength;\n\n      if (target.immunities.filter(i => i == 'crit').length < 1) {\n        dmg = this.crit(attacker, dmg);\n      }\n\n      if (this.dodge(target)) {\n        animationsService.fadeOutUp('hit' + target.id, '<span>dodged</span>', operator);\n        return;\n      }\n\n      this.thorns(attacker, target);\n\n      if (target.absorb == attacker.dmgType && target.absorb != '') {\n        target.hp += attacker.strength;\n        animationsService.fadeOutUp('hit' + target.id, attacker.strength, '+');\n        return;\n      }\n\n      dmg = this.resistance({\n        strength: dmg,\n        dmgType: attacker.dmgType\n      }, target);\n      dmg = this.vulnerable({\n        strength: dmg,\n        dmgType: attacker.dmgType\n      }, target);\n      this.lifeSteal(attacker, dmg);\n      dmg = this.immunities(target, attacker, dmg);\n      this.statusEffects(target, attacker);\n      animationsService.fadeOutUp('hit' + target.id, dmg, '-', attacker.dmgType);\n      sleep(200).then(() => {\n        animationsService.shake('charImg' + target.id);\n      });\n      target.hp -= dmg;\n    });\n    this.animationDelay = 750;\n  }\n\n  thorns(attacker, target) {\n    if (target.thorns <= 0 || attacker.dmgType == 'range' || attacker['isSpell']) {\n      return;\n    }\n\n    let dmg = target.thorns;\n    dmg = this.immunities(attacker, target, dmg);\n    dmg = this.resistance({\n      strength: dmg,\n      dmgType: target.dmgType\n    }, attacker);\n    dmg = this.vulnerable({\n      strength: dmg,\n      dmgType: target.dmgType\n    }, attacker);\n    attacker.hp -= dmg;\n    animationsService.fadeOutUp('hit' + attacker.id, dmg, '-', target.dmgType);\n  }\n\n  dodge(target) {\n    let chance = Math.floor(Math.random() * 100) + 1;\n    let dodge = target.dodge + target.luck;\n\n    if (target['statusEffects'].find(e => e.name == 'petrify' && e.negative)) {\n      return false;\n    }\n\n    return dodge >= chance;\n  }\n\n  resistance(attack, target) {\n    let targetIsFoe = target instanceof MonsterFactory;\n    let operator = targetIsFoe ? '-' : '+';\n    let dmg = attack.strength;\n\n    if (target.resistances.filter(r => r == attack.dmgType).length > 0 || target.resistances.find(r => r == 'melee') && attack.dmgType == 'range') {\n      dmg = Math.round(dmg / 2);\n      setTimeout(() => {\n        animationsService.fadeOutUp('hit' + target.id, '<span>resistant</span>', operator);\n      }, this.animationDelay);\n      this.animationDelay += 750;\n    }\n\n    if (target.physicalResistance > 0 && attack.dmgType == 'melee' || target.physicalResistance > 0 && attack.dmgType == 'range') {\n      dmg = dmg - Math.round(dmg * (target.physicalResistance / 100) * 10) / 10;\n    }\n\n    if (target.magicResistance > 0 && attack.dmgType != 'melee' && attack.dmgType != 'range') {\n      dmg = dmg - Math.round(dmg * (target.magicResistance / 100) * 10) / 10;\n    }\n\n    return dmg < 0 ? 0 : dmg;\n  }\n\n  vulnerable(attack, target) {\n    let targetIsFoe = target instanceof MonsterFactory;\n    let operator = targetIsFoe ? '+' : '-';\n    let dmg = attack.strength;\n\n    if (target.vulnerabilities.filter(v => v == attack.dmgType).length > 0) {\n      dmg = Math.round(dmg * 2);\n      setTimeout(() => {\n        animationsService.fadeOutUp('hit' + target.id, '<span>vulnerable</span>', operator);\n      }, this.animationDelay);\n      this.animationDelay += 750;\n    }\n\n    return dmg;\n  }\n\n  immunities(target, attacker, dmg) {\n    let targetIsFoe = target instanceof MonsterFactory;\n    let operator = targetIsFoe ? '-' : '+';\n\n    if (target.immunities.filter(i => i == attacker.dmgType).length > 0) {\n      setTimeout(() => {\n        animationsService.fadeOutUp('hit' + target.id, '<span>immune</span>', operator);\n      }, this.animationDelay);\n      this.animationDelay += 750;\n      return 0;\n    }\n\n    return dmg;\n  }\n\n  lifeSteal(attacker, dmg) {\n    if (attacker.lifeSteal > 0) {\n      let lifeSteal = Math.round(dmg * (attacker.lifeSteal / 100) * 10) / 10;\n\n      if (lifeSteal > 0) {\n        animationsService.fadeOutUp('hit' + attacker.id, lifeSteal, '+');\n        attacker.hp = Math.round((lifeSteal + attacker.hp) * 10) / 10;\n      }\n    }\n  }\n\n  reflect(attacker, target) {\n    if (target.reflect > 0) {\n      let dmg = Math.round(attacker.strength * target.reflect);\n\n      if (dmg > 0) {\n        attacker.hp -= dmg;\n        animationsService.fadeOutUp('hit' + attacker.id, dmg, '-');\n      }\n    }\n  }\n\n  crit(attacker, dmg) {\n    let attackerIsFoe = attacker instanceof MonsterFactory;\n    let operator = attackerIsFoe ? '-' : '+';\n    let crit = Math.ceil(Math.random() * 400);\n    let chance = 1 + Math.round(attacker.luck);\n\n    if (chance >= crit) {\n      dmg *= 2;\n      animationsService.fadeOutUp('hit' + attacker.id, 'crit!', operator);\n    }\n\n    return dmg;\n  }\n\n  statusEffects(target, attacker) {\n    let targetIsFoe = target instanceof MonsterFactory;\n    let operator = targetIsFoe ? '+' : '-';\n    attacker.statusEffects.forEach(se => {\n      let status = { ...se\n      };\n      let chance = Math.ceil(Math.random() * 100);\n      let immune = target.immunities.find(i => i == status.name);\n      let resistant = target.resistances.find(r => r == status.name);\n      let vulnerable = target.vulnerabilities.find(v => v == status.name);\n      chance *= vulnerable ? .5 : 1;\n      chance *= resistant ? 2 : 1;\n\n      if (status.chance < chance || status.negative || immune) {\n        return;\n      }\n\n      if (target['statusEffects'].find(e => e.name == status.name && e.negative)) {\n        target['statusEffects'].filter(e => e.name == status.name && e.negative)[0].value += status.value;\n        setTimeout(() => {\n          animationsService.fadeOutUp('hit' + target.id, '<span>' + status.name + '</span>', operator);\n        }, this.animationDelay);\n        this.animationDelay += 750;\n        return;\n      }\n\n      status.negative = true;\n      target['statusEffects'].push(status);\n      setTimeout(() => {\n        animationsService.fadeOutUp('hit' + target.id, '<span>' + status.name + '</span>', operator);\n      }, this.animationDelay);\n      this.animationDelay += 750;\n    });\n  }\n\n}\n\nexport const battleService = new BattleService();","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/src/services/BattleService.js"],"names":["animationsService","sleep","MonsterFactory","gameService","useToast","BattleService","handleAttack","attacker","target","targetIsFoe","operator","delay","actions","getSpeedCost","speed","then","dmg","strength","immunities","filter","i","length","crit","dodge","fadeOutUp","id","thorns","absorb","dmgType","hp","resistance","vulnerable","lifeSteal","statusEffects","shake","animationDelay","chance","Math","floor","random","luck","find","e","name","negative","attack","resistances","r","round","setTimeout","physicalResistance","magicResistance","vulnerabilities","v","reflect","attackerIsFoe","ceil","forEach","se","status","immune","resistant","value","push","battleService"],"mappings":"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","sourcesContent":["import { animationsService } from \"./AnimationsService\"\r\nimport { sleep } from \"../utils/sleep\"\r\nimport { MonsterFactory } from \"../models/MonsterFactory\"\r\nimport { gameService } from \"./GameService\"\r\nimport { useToast } from \"vue-toastification\"\r\n\r\nclass BattleService{\r\n  toast = useToast()\r\n  animationDelay = 750\r\n  handleAttack(attacker, target){\r\n    let targetIsFoe = target instanceof MonsterFactory\r\n    let operator = targetIsFoe ? '-' : '+'\r\n    let delay = targetIsFoe ? 0 : 200\r\n    if(delay == 0){\r\n      attacker.actions -= gameService.getSpeedCost(attacker, attacker['isSpell'] ? attacker.speed : false)\r\n    }\r\n    sleep(delay).then(()=>{\r\n      let dmg = attacker.strength\r\n      if(target.immunities.filter(i => i == 'crit').length < 1){\r\n        dmg = this.crit(attacker, dmg)\r\n      }\r\n\r\n      if(this.dodge(target)){\r\n        animationsService.fadeOutUp('hit'+target.id, '<span>dodged</span>', operator)\r\n        return\r\n      }\r\n\r\n      this.thorns(attacker, target)\r\n\r\n      if(target.absorb == attacker.dmgType && target.absorb != ''){\r\n        target.hp += attacker.strength\r\n        animationsService.fadeOutUp('hit'+target.id, attacker.strength, '+')\r\n        return\r\n      }\r\n\r\n      dmg = this.resistance({strength: dmg, dmgType: attacker.dmgType}, target)\r\n      dmg = this.vulnerable({strength: dmg, dmgType: attacker.dmgType}, target)\r\n\r\n      this.lifeSteal(attacker, dmg)\r\n\r\n      dmg = this.immunities(target, attacker, dmg)\r\n\r\n      this.statusEffects(target, attacker)\r\n\r\n      animationsService.fadeOutUp('hit'+target.id, dmg, '-', attacker.dmgType)\r\n      sleep(200).then(()=>{\r\n        animationsService.shake('charImg'+target.id)\r\n      })\r\n      target.hp -= dmg\r\n    })\r\n    this.animationDelay = 750 \r\n  }\r\n  thorns(attacker, target){\r\n      if(target.thorns <= 0 || attacker.dmgType == 'range' || attacker['isSpell']){\r\n        return\r\n      }\r\n      let dmg = target.thorns\r\n      dmg = this.immunities(attacker, target, dmg)\r\n      dmg = this.resistance({strength: dmg, dmgType: target.dmgType}, attacker)\r\n      dmg = this.vulnerable({strength: dmg, dmgType: target.dmgType}, attacker)\r\n      attacker.hp -= dmg\r\n      animationsService.fadeOutUp('hit'+attacker.id, dmg, '-', target.dmgType)\r\n  }\r\n  dodge(target){\r\n    let chance = Math.floor(Math.random()*100)+1\r\n    let dodge = target.dodge+target.luck\r\n    if(target['statusEffects'].find(e => e.name == 'petrify' && e.negative)){\r\n      return false\r\n    }\r\n    return dodge >= chance\r\n  }\r\n  resistance(attack, target){\r\n    let targetIsFoe = target instanceof MonsterFactory\r\n    let operator = targetIsFoe ? '-' : '+'\r\n    let dmg = attack.strength\r\n    if(target.resistances.filter(r => r == attack.dmgType).length > 0 || (target.resistances.find(r => r == 'melee') && attack.dmgType == 'range')){\r\n      dmg = Math.round(dmg/2)\r\n      setTimeout(() => {\r\n        animationsService.fadeOutUp('hit'+target.id, '<span>resistant</span>', operator)\r\n      }, this.animationDelay)\r\n      this.animationDelay += 750\r\n    }\r\n    if(target.physicalResistance > 0 && attack.dmgType == 'melee' || (target.physicalResistance > 0 && attack.dmgType == 'range')){\r\n      dmg = dmg - Math.round(dmg * (target.physicalResistance/100)*10)/10\r\n    }\r\n    if(target.magicResistance > 0 && attack.dmgType != 'melee' && attack.dmgType != 'range'){\r\n      dmg = dmg - Math.round(dmg * (target.magicResistance/100)*10)/10\r\n    }\r\n    return dmg < 0 ? 0 : dmg\r\n  }\r\n  vulnerable(attack, target){\r\n    let targetIsFoe = target instanceof MonsterFactory\r\n    let operator = targetIsFoe ? '+' : '-'\r\n    let dmg = attack.strength\r\n    if(target.vulnerabilities.filter(v => v == attack.dmgType).length > 0){\r\n      dmg = Math.round(dmg*2)\r\n      setTimeout(() => {\r\n        animationsService.fadeOutUp('hit'+target.id, '<span>vulnerable</span>', operator)\r\n      }, this.animationDelay)\r\n      this.animationDelay += 750\r\n    }\r\n    return dmg\r\n  }\r\n  immunities(target, attacker, dmg){\r\n    let targetIsFoe = target instanceof MonsterFactory\r\n    let operator = targetIsFoe ? '-' : '+'\r\n    if(target.immunities.filter(i => i == attacker.dmgType).length > 0){\r\n      setTimeout(() => {\r\n        animationsService.fadeOutUp('hit'+target.id, '<span>immune</span>', operator)\r\n      }, this.animationDelay)\r\n      this.animationDelay += 750\r\n      \r\n      return 0\r\n    }\r\n    return dmg\r\n  }\r\n  lifeSteal(attacker, dmg){\r\n    if(attacker.lifeSteal > 0){\r\n      let lifeSteal = Math.round(dmg*(attacker.lifeSteal/100)*10)/10\r\n      if(lifeSteal > 0){\r\n        animationsService.fadeOutUp('hit'+attacker.id, lifeSteal, '+')\r\n        attacker.hp = Math.round((lifeSteal + attacker.hp)*10)/10\r\n      }\r\n    }\r\n  }\r\n\r\n  reflect(attacker, target){\r\n    if(target.reflect > 0){\r\n      let dmg = Math.round((attacker.strength)*(target.reflect))\r\n      if(dmg > 0){\r\n        attacker.hp -= dmg\r\n        animationsService.fadeOutUp('hit'+attacker.id, dmg, '-')\r\n      }\r\n    }\r\n  }\r\n\r\n  crit(attacker, dmg){\r\n    let attackerIsFoe = attacker instanceof MonsterFactory\r\n    let operator = attackerIsFoe ? '-' : '+'\r\n    let crit = Math.ceil(Math.random()*400)\r\n    let chance = 1+Math.round(attacker.luck)\r\n    if(chance >= crit){\r\n      dmg *= 2\r\n      animationsService.fadeOutUp('hit'+attacker.id, 'crit!', operator)\r\n    }\r\n    return dmg\r\n  }\r\n\r\n  statusEffects(target, attacker){\r\n    let targetIsFoe = target instanceof MonsterFactory\r\n    let operator = targetIsFoe ? '+' : '-'\r\n    attacker.statusEffects.forEach(se => {\r\n      let status = {...se}\r\n      let chance = Math.ceil(Math.random()*100)\r\n      let immune = target.immunities.find(i => i == status.name)\r\n      let resistant = target.resistances.find(r => r == status.name)\r\n      let vulnerable = target.vulnerabilities.find(v => v == status.name)\r\n\r\n      chance *= vulnerable ? .5 : 1\r\n      chance *= resistant ? 2 : 1\r\n\r\n      if(status.chance < chance || status.negative || immune){return}\r\n      if(target['statusEffects'].find(e => e.name == status.name && e.negative)){\r\n        target['statusEffects'].filter(e => e.name == status.name && e.negative)[0].value += status.value\r\n        setTimeout(() => {\r\n          animationsService.fadeOutUp('hit'+target.id, '<span>'+status.name+'</span>', operator)\r\n        }, this.animationDelay)\r\n        this.animationDelay += 750\r\n        return\r\n      }\r\n      status.negative = true\r\n      target['statusEffects'].push(status)\r\n      setTimeout(() => {\r\n        animationsService.fadeOutUp('hit'+target.id, '<span>'+status.name+'</span>', operator)\r\n      }, this.animationDelay)\r\n      this.animationDelay += 750\r\n    })\r\n  }\r\n}\r\n\r\nexport const battleService = new BattleService()"]},"metadata":{},"sourceType":"module"}