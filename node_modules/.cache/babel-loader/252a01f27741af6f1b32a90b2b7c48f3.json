{"ast":null,"code":"import { reactive } from \"@vue/reactivity\";\nimport { computed } from \"@vue/runtime-core\";\nimport $store from \"@/store/index\";\nimport { questService } from \"@/services/QuestService\";\nimport Notify from \"@/utils/Notify\";\nexport default {\n  name: 'QuestModal',\n\n  setup() {\n    const state = reactive({\n      quest: computed(() => $store.state.player.quest),\n      kills: computed(() => $store.state.player.kills)\n    });\n    return state;\n  },\n\n  methods: {\n    completeQuest() {\n      questService.completeQuest();\n    },\n\n    async deleteQuest() {\n      if (await Notify.confirm('Give up on Quest', 'Quest too tough for you, huh?')) {\n        questService.deleteQuest();\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,eAAe;AACbC,MAAI,EAAE,YADO;;AAEbC,OAAK,GAAE;AACL,UAAMC,KAAI,GAAIP,QAAQ,CAAC;AACrBQ,WAAK,EAAEP,QAAQ,CAAC,MAAKC,MAAM,CAACK,KAAP,CAAaE,MAAb,CAAoBD,KAA1B,CADM;AAErBE,WAAK,EAAET,QAAQ,CAAC,MAAKC,MAAM,CAACK,KAAP,CAAaE,MAAb,CAAoBC,KAA1B;AAFM,KAAD,CAAtB;AAIA,WAAOH,KAAP;AACD,GARY;;AASbI,SAAO,EAAE;AACPC,iBAAa,GAAE;AACbT,kBAAY,CAACS,aAAb;AACD,KAHM;;AAIP,UAAMC,WAAN,GAAmB;AACjB,UAAG,MAAMT,MAAM,CAACU,OAAP,CAAe,kBAAf,EAAmC,+BAAnC,CAAT,EAA6E;AAC3EX,oBAAY,CAACU,WAAb;AACF;AACF;;AARO;AATI,CAAf","names":["reactive","computed","$store","questService","Notify","name","setup","state","quest","player","kills","methods","completeQuest","deleteQuest","confirm"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\components\\QuestModal.vue"],"sourcesContent":["<template>\r\n<div class=\"modal fade text-dark\" id=\"questModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"questModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <div class=\"modal-title container\">\r\n          <h5>Quest</h5>\r\n            <button type=\"button\" class=\"close text-danger\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"deleteQuest\" title=\"Delete Quest\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body container\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-12 px-3\">\r\n            {{quest.objective}} {{quest.target}}{{quest.goal > 0 ? '\\'s' : ''}}\r\n          </div>\r\n          <div class=\"col-12\">\r\n            Reward: {{quest.reward}} {{quest.objective == 'explore' ? 'EXP' : quest.objective == 'kill' ? 'Gold' : ''}}\r\n          </div>\r\n          <span class=\"border-top p-3\">\r\n            {{quest.goal > 1 ? Math.round((quest.progress/quest.goal)*100)+'%' : quest.progress != 'complete' ? 'Not' : ''}} Complete\r\n          </span>\r\n        </div>\r\n        <button class=\"btn btn-outline-success\" @click=\"completeQuest\" v-if=\"this.$route.name == 'MainShop' && (quest.progress >= quest.goal || quest.progress == 'complete')\">Complete Quest</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport { computed } from \"@vue/runtime-core\"\r\nimport $store from \"@/store/index\"\r\nimport { questService } from \"@/services/QuestService\"\r\nimport Notify from \"@/utils/Notify\"\r\n\r\nexport default {\r\n  name: 'QuestModal',\r\n  setup(){\r\n    const state = reactive({\r\n      quest: computed(()=> $store.state.player.quest),\r\n      kills: computed(()=> $store.state.player.kills)\r\n    })\r\n    return state\r\n  },\r\n  methods: {\r\n    completeQuest(){\r\n      questService.completeQuest()\r\n    },\r\n    async deleteQuest(){\r\n      if(await Notify.confirm('Give up on Quest', 'Quest too tough for you, huh?')){\r\n        questService.deleteQuest()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nli{\r\n  text-align: justify;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}