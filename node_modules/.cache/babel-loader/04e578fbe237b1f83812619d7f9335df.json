{"ast":null,"code":"import * as dom from '../utils/dom/index.js';\nimport { swalClasses } from '../utils/classes.js';\nimport privateProps from '../privateProps.js';\n/**\n * Hides loader and shows back the button which was hidden by .showLoading()\n */\n\nfunction hideLoading() {\n  // do nothing if popup is closed\n  const innerParams = privateProps.innerParams.get(this);\n\n  if (!innerParams) {\n    return;\n  }\n\n  const domCache = privateProps.domCache.get(this);\n  dom.hide(domCache.loader);\n\n  if (dom.isToast()) {\n    if (innerParams.icon) {\n      dom.show(dom.getIcon());\n    }\n  } else {\n    showRelatedButton(domCache);\n  }\n\n  dom.removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n  domCache.popup.removeAttribute('aria-busy');\n  domCache.popup.removeAttribute('data-loading');\n  domCache.confirmButton.disabled = false;\n  domCache.denyButton.disabled = false;\n  domCache.cancelButton.disabled = false;\n}\n\nconst showRelatedButton = domCache => {\n  const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n\n  if (buttonToReplace.length) {\n    dom.show(buttonToReplace[0], 'inline-block');\n  } else if (dom.allButtonsAreHidden()) {\n    dom.hide(domCache.actions);\n  }\n};\n\nexport { hideLoading, hideLoading as disableLoading };","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/instanceMethods/hideLoading.js"],"names":["dom","swalClasses","privateProps","hideLoading","innerParams","get","domCache","hide","loader","isToast","icon","show","getIcon","showRelatedButton","removeClass","popup","actions","loading","removeAttribute","confirmButton","disabled","denyButton","cancelButton","buttonToReplace","getElementsByClassName","getAttribute","length","allButtonsAreHidden","disableLoading"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,uBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA;AACA;AACA;;AACA,SAASC,WAAT,GAAuB;AACrB;AACA,QAAMC,WAAW,GAAGF,YAAY,CAACE,WAAb,CAAyBC,GAAzB,CAA6B,IAA7B,CAApB;;AACA,MAAI,CAACD,WAAL,EAAkB;AAChB;AACD;;AACD,QAAME,QAAQ,GAAGJ,YAAY,CAACI,QAAb,CAAsBD,GAAtB,CAA0B,IAA1B,CAAjB;AACAL,EAAAA,GAAG,CAACO,IAAJ,CAASD,QAAQ,CAACE,MAAlB;;AACA,MAAIR,GAAG,CAACS,OAAJ,EAAJ,EAAmB;AACjB,QAAIL,WAAW,CAACM,IAAhB,EAAsB;AACpBV,MAAAA,GAAG,CAACW,IAAJ,CAASX,GAAG,CAACY,OAAJ,EAAT;AACD;AACF,GAJD,MAIO;AACLC,IAAAA,iBAAiB,CAACP,QAAD,CAAjB;AACD;;AACDN,EAAAA,GAAG,CAACc,WAAJ,CAAgB,CAACR,QAAQ,CAACS,KAAV,EAAiBT,QAAQ,CAACU,OAA1B,CAAhB,EAAoDf,WAAW,CAACgB,OAAhE;AACAX,EAAAA,QAAQ,CAACS,KAAT,CAAeG,eAAf,CAA+B,WAA/B;AACAZ,EAAAA,QAAQ,CAACS,KAAT,CAAeG,eAAf,CAA+B,cAA/B;AACAZ,EAAAA,QAAQ,CAACa,aAAT,CAAuBC,QAAvB,GAAkC,KAAlC;AACAd,EAAAA,QAAQ,CAACe,UAAT,CAAoBD,QAApB,GAA+B,KAA/B;AACAd,EAAAA,QAAQ,CAACgB,YAAT,CAAsBF,QAAtB,GAAiC,KAAjC;AACD;;AAED,MAAMP,iBAAiB,GAAIP,QAAD,IAAc;AACtC,QAAMiB,eAAe,GAAGjB,QAAQ,CAACS,KAAT,CAAeS,sBAAf,CAAsClB,QAAQ,CAACE,MAAT,CAAgBiB,YAAhB,CAA6B,wBAA7B,CAAtC,CAAxB;;AACA,MAAIF,eAAe,CAACG,MAApB,EAA4B;AAC1B1B,IAAAA,GAAG,CAACW,IAAJ,CAASY,eAAe,CAAC,CAAD,CAAxB,EAA6B,cAA7B;AACD,GAFD,MAEO,IAAIvB,GAAG,CAAC2B,mBAAJ,EAAJ,EAA+B;AACpC3B,IAAAA,GAAG,CAACO,IAAJ,CAASD,QAAQ,CAACU,OAAlB;AACD;AACF,CAPD;;AASA,SAASb,WAAT,EAAsBA,WAAW,IAAIyB,cAArC","sourcesContent":["import * as dom from '../utils/dom/index.js'\nimport { swalClasses } from '../utils/classes.js'\nimport privateProps from '../privateProps.js'\n\n/**\n * Hides loader and shows back the button which was hidden by .showLoading()\n */\nfunction hideLoading() {\n  // do nothing if popup is closed\n  const innerParams = privateProps.innerParams.get(this)\n  if (!innerParams) {\n    return\n  }\n  const domCache = privateProps.domCache.get(this)\n  dom.hide(domCache.loader)\n  if (dom.isToast()) {\n    if (innerParams.icon) {\n      dom.show(dom.getIcon())\n    }\n  } else {\n    showRelatedButton(domCache)\n  }\n  dom.removeClass([domCache.popup, domCache.actions], swalClasses.loading)\n  domCache.popup.removeAttribute('aria-busy')\n  domCache.popup.removeAttribute('data-loading')\n  domCache.confirmButton.disabled = false\n  domCache.denyButton.disabled = false\n  domCache.cancelButton.disabled = false\n}\n\nconst showRelatedButton = (domCache) => {\n  const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'))\n  if (buttonToReplace.length) {\n    dom.show(buttonToReplace[0], 'inline-block')\n  } else if (dom.allButtonsAreHidden()) {\n    dom.hide(domCache.actions)\n  }\n}\n\nexport { hideLoading, hideLoading as disableLoading }\n"]},"metadata":{},"sourceType":"module"}