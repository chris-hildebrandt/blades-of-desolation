{"ast":null,"code":"import { generateId } from \"@/utils/generateId\";\nexport class Item {\n  constructor(data) {\n    this.id = generateId();\n    this.name = data.name;\n    this.requirements = data.requirements ?? [];\n    this.statusEffects = data.statusEffects ?? [];\n    this.effect = data.effect ?? 'none';\n    this.value = data.value == 'randomDmgType' ? this.getRandomDmgType() : data.value ?? 0;\n    this.type = data.type ?? 'none';\n    this.price = data.price ?? 0;\n    this.rarity = data.rarity ?? 'none';\n    this.speed = data.speed ?? 0;\n    this.scroll = data.scroll ?? false;\n    this.set = data.set ?? '';\n  }\n\n  getRandomDmgType() {\n    let dmgTypeList = ['lightning', 'melee', 'magic', 'acid', 'necrotic', 'poison', 'fire', 'radiant', 'psychic'];\n    let random = Math.floor(Math.random() * dmgTypeList.length);\n    this.name += ' (' + dmgTypeList[random] + ')';\n    return dmgTypeList[random];\n  }\n\n}","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/src/models/Item.js"],"names":["generateId","Item","constructor","data","id","name","requirements","statusEffects","effect","value","getRandomDmgType","type","price","rarity","speed","scroll","set","dmgTypeList","random","Math","floor","length"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AAEA,OAAO,MAAMC,IAAN,CAAU;AACfC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,SAAKC,EAAL,GAAUJ,UAAU,EAApB;AACA,SAAKK,IAAL,GAAYF,IAAI,CAACE,IAAjB;AACA,SAAKC,YAAL,GAAoBH,IAAI,CAACG,YAAL,IAAqB,EAAzC;AACA,SAAKC,aAAL,GAAqBJ,IAAI,CAACI,aAAL,IAAsB,EAA3C;AACA,SAAKC,MAAL,GAAcL,IAAI,CAACK,MAAL,IAAe,MAA7B;AACA,SAAKC,KAAL,GAAaN,IAAI,CAACM,KAAL,IAAc,eAAd,GAAgC,KAAKC,gBAAL,EAAhC,GAA0DP,IAAI,CAACM,KAAL,IAAc,CAArF;AACA,SAAKE,IAAL,GAAYR,IAAI,CAACQ,IAAL,IAAa,MAAzB;AACA,SAAKC,KAAL,GAAaT,IAAI,CAACS,KAAL,IAAc,CAA3B;AACA,SAAKC,MAAL,GAAcV,IAAI,CAACU,MAAL,IAAe,MAA7B;AACA,SAAKC,KAAL,GAAaX,IAAI,CAACW,KAAL,IAAc,CAA3B;AACA,SAAKC,MAAL,GAAcZ,IAAI,CAACY,MAAL,IAAe,KAA7B;AACA,SAAKC,GAAL,GAAWb,IAAI,CAACa,GAAL,IAAY,EAAvB;AACD;;AACDN,EAAAA,gBAAgB,GAAE;AAChB,QAAIO,WAAW,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,UAAxC,EAAoD,QAApD,EAA8D,MAA9D,EAAsE,SAAtE,EAAiF,SAAjF,CAAlB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAcD,WAAW,CAACI,MAArC,CAAb;AACA,SAAKhB,IAAL,IAAa,OAAKY,WAAW,CAACC,MAAD,CAAhB,GAAyB,GAAtC;AACA,WAAOD,WAAW,CAACC,MAAD,CAAlB;AACD;;AApBc","sourcesContent":["import { generateId } from \"@/utils/generateId\";\r\n\r\nexport class Item{\r\n  constructor(data){\r\n    this.id = generateId()\r\n    this.name = data.name\r\n    this.requirements = data.requirements ?? []\r\n    this.statusEffects = data.statusEffects ?? []\r\n    this.effect = data.effect ?? 'none'\r\n    this.value = data.value == 'randomDmgType' ? this.getRandomDmgType() : data.value ?? 0\r\n    this.type = data.type ?? 'none'\r\n    this.price = data.price ?? 0\r\n    this.rarity = data.rarity ?? 'none'\r\n    this.speed = data.speed ?? 0\r\n    this.scroll = data.scroll ?? false\r\n    this.set = data.set ?? ''\r\n  }\r\n  getRandomDmgType(){\r\n    let dmgTypeList = ['lightning', 'melee', 'magic', 'acid', 'necrotic', 'poison', 'fire', 'radiant', 'psychic']\r\n    let random = Math.floor(Math.random()*dmgTypeList.length)\r\n    this.name += ' ('+dmgTypeList[random]+')'\r\n    return dmgTypeList[random]\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}