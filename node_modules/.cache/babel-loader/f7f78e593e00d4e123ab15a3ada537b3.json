{"ast":null,"code":"import { reactive } from \"@vue/reactivity\";\nimport HpBar from \"./HpBar.vue\";\nimport $store from '../store/index.js';\nimport { battleService } from \"@/services/BattleService\";\nimport { characterService } from \"@/services/CharacterService\";\nimport { computed, onMounted } from \"@vue/runtime-core\";\nimport 'animate.css';\nimport { animationsService } from \"@/services/AnimationsService\";\nexport default {\n  components: {\n    HpBar\n  },\n  name: 'EnemyMonster',\n  props: {\n    monster: {\n      type: Object\n    }\n  },\n\n  setup(props) {\n    onMounted(() => {\n      state.monsterPreHp = props.monster.hp;\n      characterService.autoSelect();\n    });\n    const state = reactive({\n      deadImg: '../assets/img/dead.png',\n      unknown: computed(() => !$store.state.player.kills[props.monster.name]),\n      img: computed(() => $store.state.monsterImgList.find(m => m.includes(props.monster.img)) ?? props.monster.img)\n    });\n    return state;\n  },\n\n  methods: {\n    attackMonster(monster) {\n      characterService.autoSelect();\n      animationsService.shake('monster' + monster.id);\n      battleService.handleAttack(this.$store.state.selected, monster);\n      characterService.autoSelect();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAUA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,OAAO,aAAP;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,eAAe;AACbC,YAAU,EAAE;AAAEP;AAAF,GADC;AAEbQ,MAAI,EAAE,cAFO;AAGbC,OAAK,EAAE;AACLC,WAAO,EAAE;AAACC,UAAI,EAAEC;AAAP;AADJ,GAHM;;AAMbC,OAAK,CAACJ,KAAD,EAAO;AACVJ,aAAS,CAAC,MAAK;AACXS,WAAK,CAACC,YAAN,GAAqBN,KAAK,CAACC,OAAN,CAAcM,EAAnC;AACAb,sBAAgB,CAACc,UAAjB;AACD,KAHM,CAAT;AAIA,UAAMH,KAAI,GAAIf,QAAQ,CAAC;AACrBmB,aAAO,EAAE,wBADY;AAErBC,aAAO,EAAEf,QAAQ,CAAC,MAAI,CAACH,MAAM,CAACa,KAAP,CAAaM,MAAb,CAAoBC,KAApB,CAA0BZ,KAAK,CAACC,OAAN,CAAcF,IAAxC,CAAN,CAFI;AAGrBc,SAAG,EAAElB,QAAQ,CAAC,MAAIH,MAAM,CAACa,KAAP,CAAaS,cAAb,CAA4BC,IAA5B,CAAiCC,KAAKA,CAAC,CAACC,QAAF,CAAWjB,KAAK,CAACC,OAAN,CAAcY,GAAzB,CAAtC,KAAwEb,KAAK,CAACC,OAAN,CAAcY,GAA3F;AAHQ,KAAD,CAAtB;AAKA,WAAOR,KAAP;AACD,GAjBY;;AAkBba,SAAO,EAAE;AACPC,iBAAa,CAAClB,OAAD,EAAS;AACpBP,sBAAgB,CAACc,UAAjB;AACAX,uBAAiB,CAACuB,KAAlB,CAAwB,YAAUnB,OAAO,CAACoB,EAA1C;AACA5B,mBAAa,CAAC6B,YAAd,CAA2B,KAAK9B,MAAL,CAAYa,KAAZ,CAAkBkB,QAA7C,EAAuDtB,OAAvD;AACAP,sBAAgB,CAACc,UAAjB;AACD;;AANM;AAlBI,CAAf","names":["reactive","HpBar","$store","battleService","characterService","computed","onMounted","animationsService","components","name","props","monster","type","Object","setup","state","monsterPreHp","hp","autoSelect","deadImg","unknown","player","kills","img","monsterImgList","find","m","includes","methods","attackMonster","shake","id","handleAttack","selected"],"sourceRoot":"","sources":["C:\\Users\\dhild\\source\\mini-projects\\blades-of-desolation\\src\\components\\Monster.vue"],"sourcesContent":["<template>\r\n  <HpBar :hp=\"monster.hp\" :baseHp=\"monster.baseHp\" :unknown=\"unknown\" />\r\n<div>\r\n  <div class=\"position-absolute hit\" :id=\"'hit'+monster.id\"></div>\r\n  <img :id=\"'monster'+monster.id\" v-if=\"monster.hp > 0\" class=\"img-fluid monster-img attack-cursor\" :class=\"monster.statusEffects.map(e => e.negative ? e.name : '').join(' ')\" @click=\"attackMonster(monster)\" :src=\"img\" />\r\n  <img v-else class=\"img-fluid monster-img\" :src=\"deadImg\" />\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"@vue/reactivity\"\r\nimport HpBar from \"./HpBar.vue\"\r\nimport $store from '../store/index.js'\r\nimport { battleService } from \"@/services/BattleService\"\r\nimport { characterService } from \"@/services/CharacterService\"\r\nimport { computed, onMounted } from \"@vue/runtime-core\"\r\nimport 'animate.css'\r\nimport { animationsService } from \"@/services/AnimationsService\"\r\n\r\nexport default {\r\n  components: { HpBar },\r\n  name: 'EnemyMonster',\r\n  props: {\r\n    monster: {type: Object}\r\n  },\r\n  setup(props){\r\n    onMounted(()=> {\r\n        state.monsterPreHp = props.monster.hp\r\n        characterService.autoSelect()\r\n      })\r\n    const state = reactive({\r\n      deadImg: '../assets/img/dead.png',\r\n      unknown: computed(()=>!$store.state.player.kills[props.monster.name]),\r\n      img: computed(()=>$store.state.monsterImgList.find(m => m.includes(props.monster.img)) ?? props.monster.img)\r\n    })\r\n    return state\r\n  },\r\n  methods: {\r\n    attackMonster(monster){\r\n      characterService.autoSelect()\r\n      animationsService.shake('monster'+monster.id)\r\n      battleService.handleAttack(this.$store.state.selected, monster)\r\n      characterService.autoSelect()\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.monster-img{\r\n  height: 20vh;\r\n}\r\n.hit{\r\n  left: 75%\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}