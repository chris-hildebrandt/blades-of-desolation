{"ast":null,"code":"import * as dom from './utils/dom/index.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport { callIfFunction } from './utils/utils.js';\nimport { clickConfirm } from './staticMethods/dom.js';\nimport privateProps from './privateProps.js';\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = false;\n  }\n\n  if (!innerParams.toast) {\n    globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup();\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture\n    });\n    globalState.keydownHandlerAdded = true;\n  }\n}; // Focus handling\n\nexport const setFocus = (innerParams, index, increment) => {\n  const focusableElements = dom.getFocusableElements(); // search for visible elements and select the next possible match\n\n  if (focusableElements.length) {\n    index = index + increment; // rollover to first item\n\n    if (index === focusableElements.length) {\n      index = 0; // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1;\n    }\n\n    return focusableElements[index].focus();\n  } // no visible focusable elements, focus the popup\n\n\n  dom.getPopup().focus();\n};\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\nconst keydownHandler = (instance, e, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n\n  if (!innerParams) {\n    return; // This instance has already been destroyed\n  } // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n\n\n  if (e.isComposing || e.keyCode === 229) {\n    return;\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    e.stopPropagation();\n  } // ENTER\n\n\n  if (e.key === 'Enter') {\n    handleEnter(instance, e, innerParams);\n  } // TAB\n  else if (e.key === 'Tab') {\n    handleTab(e, innerParams);\n  } // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n    handleArrows(e.key);\n  } // ESC\n  else if (e.key === 'Escape') {\n    handleEsc(e, innerParams, dismissWith);\n  }\n};\n\nconst handleEnter = (instance, e, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return;\n  }\n\n  if (e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return; // do not submit\n    }\n\n    clickConfirm();\n    e.preventDefault();\n  }\n};\n\nconst handleTab = (e, innerParams) => {\n  const targetElement = e.target;\n  const focusableElements = dom.getFocusableElements();\n  let btnIndex = -1;\n\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i;\n      break;\n    }\n  } // Cycle to the next button\n\n\n  if (!e.shiftKey) {\n    setFocus(innerParams, btnIndex, 1);\n  } // Cycle to the prev button\n  else {\n    setFocus(innerParams, btnIndex, -1);\n  }\n\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nconst handleArrows = key => {\n  const confirmButton = dom.getConfirmButton();\n  const denyButton = dom.getDenyButton();\n  const cancelButton = dom.getCancelButton();\n\n  if (![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n    return;\n  }\n\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n  let buttonToFocus = document.activeElement;\n\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling];\n\n    if (!buttonToFocus) {\n      return;\n    }\n\n    if (dom.isVisible(buttonToFocus) && buttonToFocus instanceof HTMLButtonElement) {\n      break;\n    }\n  }\n\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus();\n  }\n};\n\nconst handleEsc = (e, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    e.preventDefault();\n    dismissWith(DismissReason.esc);\n  }\n};","map":{"version":3,"sources":["C:/Users/dhild/source/mini-projects/blades-of-desolation/node_modules/sweetalert2/src/keydown-handler.js"],"names":["dom","DismissReason","callIfFunction","clickConfirm","privateProps","addKeydownHandler","instance","globalState","innerParams","dismissWith","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","toast","e","window","getPopup","addEventListener","setFocus","index","increment","focusableElements","getFocusableElements","length","focus","arrowKeysNextButton","arrowKeysPreviousButton","get","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","includes","handleArrows","handleEsc","allowEnterKey","target","getInput","outerHTML","input","preventDefault","targetElement","btnIndex","i","shiftKey","confirmButton","getConfirmButton","denyButton","getDenyButton","cancelButton","getCancelButton","document","activeElement","sibling","buttonToFocus","getActions","children","isVisible","HTMLButtonElement","allowEscapeKey","esc"],"mappings":"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","sourcesContent":["import * as dom from './utils/dom/index.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport { callIfFunction } from './utils/utils.js'\nimport { clickConfirm } from './staticMethods/dom.js'\nimport privateProps from './privateProps.js'\n\nexport const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n  if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n    globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = false\n  }\n\n  if (!innerParams.toast) {\n    globalState.keydownHandler = (e) => keydownHandler(instance, e, dismissWith)\n    globalState.keydownTarget = innerParams.keydownListenerCapture ? window : dom.getPopup()\n    globalState.keydownListenerCapture = innerParams.keydownListenerCapture\n    globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n      capture: globalState.keydownListenerCapture,\n    })\n    globalState.keydownHandlerAdded = true\n  }\n}\n\n// Focus handling\nexport const setFocus = (innerParams, index, increment) => {\n  const focusableElements = dom.getFocusableElements()\n  // search for visible elements and select the next possible match\n  if (focusableElements.length) {\n    index = index + increment\n\n    // rollover to first item\n    if (index === focusableElements.length) {\n      index = 0\n\n      // go to last item\n    } else if (index === -1) {\n      index = focusableElements.length - 1\n    }\n\n    return focusableElements[index].focus()\n  }\n  // no visible focusable elements, focus the popup\n  dom.getPopup().focus()\n}\n\nconst arrowKeysNextButton = ['ArrowRight', 'ArrowDown']\n\nconst arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp']\n\nconst keydownHandler = (instance, e, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n\n  if (!innerParams) {\n    return // This instance has already been destroyed\n  }\n\n  // Ignore keydown during IME composition\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n  // https://github.com/sweetalert2/sweetalert2/issues/720\n  // https://github.com/sweetalert2/sweetalert2/issues/2406\n  if (e.isComposing || e.keyCode === 229) {\n    return\n  }\n\n  if (innerParams.stopKeydownPropagation) {\n    e.stopPropagation()\n  }\n\n  // ENTER\n  if (e.key === 'Enter') {\n    handleEnter(instance, e, innerParams)\n  }\n\n  // TAB\n  else if (e.key === 'Tab') {\n    handleTab(e, innerParams)\n  }\n\n  // ARROWS - switch focus between buttons\n  else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n    handleArrows(e.key)\n  }\n\n  // ESC\n  else if (e.key === 'Escape') {\n    handleEsc(e, innerParams, dismissWith)\n  }\n}\n\nconst handleEnter = (instance, e, innerParams) => {\n  // https://github.com/sweetalert2/sweetalert2/issues/2386\n  if (!callIfFunction(innerParams.allowEnterKey)) {\n    return\n  }\n\n  if (e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {\n    if (['textarea', 'file'].includes(innerParams.input)) {\n      return // do not submit\n    }\n\n    clickConfirm()\n    e.preventDefault()\n  }\n}\n\nconst handleTab = (e, innerParams) => {\n  const targetElement = e.target\n\n  const focusableElements = dom.getFocusableElements()\n  let btnIndex = -1\n  for (let i = 0; i < focusableElements.length; i++) {\n    if (targetElement === focusableElements[i]) {\n      btnIndex = i\n      break\n    }\n  }\n\n  // Cycle to the next button\n  if (!e.shiftKey) {\n    setFocus(innerParams, btnIndex, 1)\n  }\n\n  // Cycle to the prev button\n  else {\n    setFocus(innerParams, btnIndex, -1)\n  }\n\n  e.stopPropagation()\n  e.preventDefault()\n}\n\nconst handleArrows = (key) => {\n  const confirmButton = dom.getConfirmButton()\n  const denyButton = dom.getDenyButton()\n  const cancelButton = dom.getCancelButton()\n  if (![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n    return\n  }\n  const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling'\n  let buttonToFocus = document.activeElement\n  for (let i = 0; i < dom.getActions().children.length; i++) {\n    buttonToFocus = buttonToFocus[sibling]\n    if (!buttonToFocus) {\n      return\n    }\n    if (dom.isVisible(buttonToFocus) && buttonToFocus instanceof HTMLButtonElement) {\n      break\n    }\n  }\n  if (buttonToFocus instanceof HTMLButtonElement) {\n    buttonToFocus.focus()\n  }\n}\n\nconst handleEsc = (e, innerParams, dismissWith) => {\n  if (callIfFunction(innerParams.allowEscapeKey)) {\n    e.preventDefault()\n    dismissWith(DismissReason.esc)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}